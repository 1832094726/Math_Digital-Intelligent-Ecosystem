{"ast":null,"code":"import _regenerator from \"E:/program development/The Digital and Intelligent Ecosystem for K-12 Mathematics Education/homework_system/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"E:/program development/The Digital and Intelligent Ecosystem for K-12 Mathematics Education/homework_system/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/web.timers.js\";\nexport default {\n  name: 'ExerciseRecommendation',\n  props: {\n    // 当前问题\n    currentProblem: {\n      type: Object,\n      \"default\": null\n    },\n    // 用户上下文\n    userContext: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      // 加载状态\n      loading: false,\n      // 推荐策略\n      strategy: 'similar',\n      // 难度范围\n      difficultyRange: [1, 3],\n      // 难度标记\n      difficultyMarks: {\n        1: '简单',\n        2: '中等',\n        3: '困难',\n        4: '挑战',\n        5: '极难'\n      },\n      // 推荐练习\n      recommendedExercises: [],\n      // 练习历史\n      exerciseHistory: []\n    };\n  },\n  watch: {\n    // 监听当前问题变化，更新推荐\n    currentProblem: {\n      handler: function handler(newVal) {\n        if (newVal) {\n          this.fetchExercises();\n          this.fetchExerciseHistory();\n        } else {\n          this.recommendedExercises = [];\n          this.exerciseHistory = [];\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    // 获取推荐练习\n    fetchExercises: function fetchExercises() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              if (_this.currentProblem) {\n                _context.n = 1;\n                break;\n              }\n              return _context.a(2);\n            case 1:\n              _this.loading = true;\n              _context.p = 2;\n              _context.n = 3;\n              return _this.simulateFetch();\n            case 3:\n              _context.n = 5;\n              break;\n            case 4:\n              _context.p = 4;\n              _t = _context.v;\n              console.error('获取推荐练习失败', _t);\n              _this.$message.error('获取推荐练习失败');\n            case 5:\n              _context.p = 5;\n              _this.loading = false;\n              return _context.f(5);\n            case 6:\n              return _context.a(2);\n          }\n        }, _callee, null, [[2, 4, 5, 6]]);\n      }))();\n    },\n    // 获取练习历史\n    fetchExerciseHistory: function fetchExerciseHistory() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              if (_this2.currentProblem) {\n                _context2.n = 1;\n                break;\n              }\n              return _context2.a(2);\n            case 1:\n              _context2.p = 1;\n              _context2.n = 2;\n              return _this2.simulateHistoryFetch();\n            case 2:\n              _context2.n = 4;\n              break;\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              console.error('获取练习历史失败', _t2);\n            case 4:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[1, 3]]);\n      }))();\n    },\n    // 模拟获取推荐数据\n    simulateFetch: function simulateFetch() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var exercises, _this3$userContext$pr;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.n = 1;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 800);\n              });\n            case 1:\n              // 根据当前问题和策略生成模拟数据\n              exercises = [];\n              if (_this3.strategy === 'similar') {\n                // 相似题目推荐\n                exercises.push({\n                  id: 'e1',\n                  title: '相似题目 - 一元二次方程应用',\n                  preview: '一个长方形的周长是20厘米，面积是24平方厘米，求这个长方形的长和宽。',\n                  difficulty: 2,\n                  type: '应用题',\n                  recommendReason: '与当前问题使用相同解题方法',\n                  matchScore: 0.92\n                });\n                exercises.push({\n                  id: 'e2',\n                  title: '相似题目 - 因式分解',\n                  preview: '分解因式：x² - 9',\n                  difficulty: 1,\n                  type: '计算题',\n                  recommendReason: '与当前问题涉及相同知识点',\n                  matchScore: 0.85\n                });\n              } else if (_this3.strategy === 'complementary') {\n                // 互补知识推荐\n                exercises.push({\n                  id: 'e3',\n                  title: '互补知识 - 判别式应用',\n                  preview: '讨论方程 ax² + bx + c = 0 的根与判别式的关系。',\n                  difficulty: 3,\n                  type: '讨论题',\n                  recommendReason: '补充您的弱点知识',\n                  matchScore: 0.78\n                });\n                exercises.push({\n                  id: 'e4',\n                  title: '互补知识 - 韦达定理',\n                  preview: '已知一元二次方程 x² + px + q = 0 的两根为 α 和 β，求 α² + β²。',\n                  difficulty: 3,\n                  type: '计算题',\n                  recommendReason: '拓展相关知识点',\n                  matchScore: 0.75\n                });\n              } else if (_this3.strategy === 'adaptive') {\n                // 自适应推荐\n                exercises.push({\n                  id: 'e5',\n                  title: '自适应 - 配方法练习',\n                  preview: '使用配方法解一元二次方程：x² - 6x + 8 = 0',\n                  difficulty: 2,\n                  type: '计算题',\n                  recommendReason: '针对您的学习进度定制',\n                  matchScore: 0.95\n                });\n                exercises.push({\n                  id: 'e6',\n                  title: '自适应 - 一元二次方程综合',\n                  preview: '解方程并验证：2x² - 7x + 3 = 0',\n                  difficulty: ((_this3$userContext$pr = _this3.userContext.proficiency) === null || _this3$userContext$pr === void 0 ? void 0 : _this3$userContext$pr.algebra) > 0.7 ? 3 : 2,\n                  type: '综合题',\n                  recommendReason: '基于您的能力水平推荐',\n                  matchScore: 0.88\n                });\n              }\n\n              // 根据难度范围过滤\n              _this3.recommendedExercises = exercises.filter(function (ex) {\n                return ex.difficulty >= _this3.difficultyRange[0] && ex.difficulty <= _this3.difficultyRange[1];\n              });\n            case 2:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }))();\n    },\n    // 模拟获取历史数据\n    simulateHistoryFetch: function simulateHistoryFetch() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _context4.n = 1;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 500);\n              });\n            case 1:\n              // 生成模拟历史数据\n              _this4.exerciseHistory = [{\n                id: 'h1',\n                title: '一元二次方程综合练习',\n                date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),\n                // 2天前\n                score: 85,\n                totalScore: 100,\n                status: 'completed'\n              }, {\n                id: 'h2',\n                title: '因式分解专项训练',\n                date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),\n                // 5天前\n                score: 92,\n                totalScore: 100,\n                status: 'completed'\n              }, {\n                id: 'h3',\n                title: '二次函数图像分析',\n                date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\n                // 7天前\n                score: 78,\n                totalScore: 100,\n                status: 'completed'\n              }];\n            case 2:\n              return _context4.a(2);\n          }\n        }, _callee4);\n      }))();\n    },\n    // 选择练习\n    selectExercise: function selectExercise(exercise) {\n      this.$emit('exercise-selected', exercise);\n    },\n    // 收藏练习\n    saveExercise: function saveExercise(exercise) {\n      // 实际应用中应调用API保存收藏\n      this.$message.success(\"\\u5DF2\\u6536\\u85CF\\u7EC3\\u4E60\\uFF1A\".concat(exercise.title));\n    },\n    // 复习历史练习\n    reviewHistory: function reviewHistory(history) {\n      // 实际应用中应跳转到练习详情页\n      this.$message.info(\"\\u5F00\\u59CB\\u590D\\u4E60\\uFF1A\".concat(history.title));\n    },\n    // 查看全部历史\n    showAllHistory: function showAllHistory() {\n      // 实际应用中应跳转到历史页面\n      this.$message.info('查看全部练习历史');\n    },\n    // 获取难度类型\n    getDifficultyType: function getDifficultyType(difficulty) {\n      var typeMap = {\n        1: 'success',\n        2: '',\n        3: 'warning',\n        4: 'danger',\n        5: 'danger'\n      };\n      return typeMap[difficulty] || '';\n    },\n    // 获取难度文本\n    getDifficultyText: function getDifficultyText(difficulty) {\n      return this.difficultyMarks[difficulty] || '未知';\n    },\n    // 获取历史项目类型\n    getHistoryItemType: function getHistoryItemType(history) {\n      if (history.score / history.totalScore >= 0.9) return 'success';\n      if (history.score / history.totalScore >= 0.6) return 'warning';\n      return 'danger';\n    },\n    // 格式化日期\n    formatDate: function formatDate(date) {\n      if (!date) return '';\n      var now = new Date();\n      var diff = now - date;\n      var day = 24 * 60 * 60 * 1000;\n      if (diff < day) {\n        return '今天';\n      } else if (diff < 2 * day) {\n        return '昨天';\n      } else if (diff < 7 * day) {\n        return \"\".concat(Math.floor(diff / day), \"\\u5929\\u524D\");\n      } else {\n        var d = new Date(date);\n        var month = String(d.getMonth() + 1).padStart(2, '0');\n        var _day = String(d.getDate()).padStart(2, '0');\n        return \"\".concat(month, \"-\").concat(_day);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","currentProblem","type","Object","userContext","required","data","loading","strategy","difficultyRange","difficultyMarks","recommendedExercises","exerciseHistory","watch","handler","newVal","fetchExercises","fetchExerciseHistory","immediate","methods","_this","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","n","a","p","simulateFetch","v","console","error","$message","f","_this2","_callee2","_t2","_context2","simulateHistoryFetch","_this3","_callee3","exercises","_this3$userContext$pr","_context3","Promise","resolve","setTimeout","push","id","title","preview","difficulty","recommendReason","matchScore","proficiency","algebra","filter","ex","_this4","_callee4","_context4","date","Date","now","score","totalScore","status","selectExercise","exercise","$emit","saveExercise","success","concat","reviewHistory","history","info","showAllHistory","getDifficultyType","typeMap","getDifficultyText","getHistoryItemType","formatDate","diff","day","Math","floor","d","month","String","getMonth","padStart","getDate"],"sources":["E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\src\\components\\ExerciseRecommendation.vue"],"sourcesContent":["<!--\r\n  文件名: ExerciseRecommendation.vue\r\n  描述: 练习推荐模块组件，根据学生学习情况推荐适合的练习题\r\n  创建日期: 2023-06-15\r\n-->\r\n\r\n<template>\r\n  <div class=\"exercise-recommendation\">\r\n    <div class=\"module-header\">\r\n      <h3>推荐练习</h3>\r\n      <el-tooltip content=\"基于当前问题和您的学习情况，智能推荐相关练习题\" placement=\"top\">\r\n        <i class=\"el-icon-question\"></i>\r\n      </el-tooltip>\r\n    </div>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-state\">\r\n      <el-skeleton :rows=\"5\" animated />\r\n    </div>\r\n    \r\n    <div v-else-if=\"!currentProblem\" class=\"empty-state\">\r\n      <i class=\"el-icon-document\"></i>\r\n      <p>请选择一道题目以获取相关练习推荐</p>\r\n    </div>\r\n    \r\n    <template v-else>\r\n      <!-- 推荐策略选择 -->\r\n      <div class=\"recommendation-strategy\">\r\n        <span>推荐策略:</span>\r\n        <el-radio-group v-model=\"strategy\" size=\"mini\" @change=\"fetchExercises\">\r\n          <el-radio-button label=\"similar\">相似题目</el-radio-button>\r\n          <el-radio-button label=\"complementary\">互补知识</el-radio-button>\r\n          <el-radio-button label=\"adaptive\">自适应</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      \r\n      <!-- 难度选择 -->\r\n      <div class=\"difficulty-filter\">\r\n        <span>难度范围:</span>\r\n        <el-slider\r\n          v-model=\"difficultyRange\"\r\n          range\r\n          :min=\"1\"\r\n          :max=\"5\"\r\n          :step=\"1\"\r\n          :marks=\"difficultyMarks\"\r\n          @change=\"fetchExercises\"\r\n        ></el-slider>\r\n      </div>\r\n      \r\n      <!-- 练习列表 -->\r\n      <div class=\"exercises-container\">\r\n        <div v-if=\"recommendedExercises.length === 0\" class=\"no-exercises\">\r\n          <i class=\"el-icon-warning-outline\"></i>\r\n          <p>暂无符合条件的推荐练习</p>\r\n        </div>\r\n        \r\n        <el-card \r\n          v-for=\"exercise in recommendedExercises\" \r\n          :key=\"exercise.id\"\r\n          class=\"exercise-card\"\r\n          :body-style=\"{ padding: '12px' }\"\r\n          shadow=\"hover\"\r\n        >\r\n          <div class=\"exercise-header\">\r\n            <span class=\"exercise-title\">{{ exercise.title }}</span>\r\n            <div class=\"exercise-tags\">\r\n              <el-tag size=\"mini\" :type=\"getDifficultyType(exercise.difficulty)\">\r\n                {{ getDifficultyText(exercise.difficulty) }}\r\n              </el-tag>\r\n              <el-tag size=\"mini\" type=\"info\" v-if=\"exercise.type\">\r\n                {{ exercise.type }}\r\n              </el-tag>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"exercise-preview\" v-html=\"exercise.preview\"></div>\r\n          \r\n          <div class=\"exercise-footer\">\r\n            <div class=\"exercise-meta\">\r\n              <span v-if=\"exercise.recommendReason\" class=\"recommend-reason\">\r\n                <i class=\"el-icon-info\"></i>\r\n                {{ exercise.recommendReason }}\r\n              </span>\r\n              <span v-if=\"exercise.matchScore\" class=\"match-score\">\r\n                匹配度: {{ Math.round(exercise.matchScore * 100) }}%\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"exercise-actions\">\r\n              <el-button \r\n                type=\"primary\" \r\n                size=\"mini\" \r\n                @click=\"selectExercise(exercise)\"\r\n              >练习</el-button>\r\n              <el-button \r\n                type=\"text\" \r\n                size=\"mini\" \r\n                @click=\"saveExercise(exercise)\"\r\n              >收藏</el-button>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n      \r\n      <!-- 历史练习记录 -->\r\n      <div class=\"section-header\">\r\n        <span>最近练习</span>\r\n        <el-button type=\"text\" size=\"mini\" @click=\"showAllHistory\">查看全部</el-button>\r\n      </div>\r\n      \r\n      <div class=\"history-container\">\r\n        <el-timeline>\r\n          <el-timeline-item\r\n            v-for=\"(history, index) in exerciseHistory\"\r\n            :key=\"history.id\"\r\n            :timestamp=\"formatDate(history.date)\"\r\n            :type=\"getHistoryItemType(history)\"\r\n            :size=\"index === 0 ? 'large' : 'normal'\"\r\n            :hide-timestamp=\"false\"\r\n          >\r\n            <span class=\"history-title\">{{ history.title }}</span>\r\n            <div class=\"history-meta\">\r\n              <span class=\"history-score\">\r\n                得分: {{ history.score }}/{{ history.totalScore }}\r\n              </span>\r\n              <el-button \r\n                type=\"text\" \r\n                size=\"mini\" \r\n                @click=\"reviewHistory(history)\"\r\n              >复习</el-button>\r\n            </div>\r\n          </el-timeline-item>\r\n        </el-timeline>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ExerciseRecommendation',\r\n  \r\n  props: {\r\n    // 当前问题\r\n    currentProblem: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    \r\n    // 用户上下文\r\n    userContext: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      // 加载状态\r\n      loading: false,\r\n      \r\n      // 推荐策略\r\n      strategy: 'similar',\r\n      \r\n      // 难度范围\r\n      difficultyRange: [1, 3],\r\n      \r\n      // 难度标记\r\n      difficultyMarks: {\r\n        1: '简单',\r\n        2: '中等',\r\n        3: '困难',\r\n        4: '挑战',\r\n        5: '极难'\r\n      },\r\n      \r\n      // 推荐练习\r\n      recommendedExercises: [],\r\n      \r\n      // 练习历史\r\n      exerciseHistory: []\r\n    };\r\n  },\r\n  \r\n  watch: {\r\n    // 监听当前问题变化，更新推荐\r\n    currentProblem: {\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.fetchExercises();\r\n          this.fetchExerciseHistory();\r\n        } else {\r\n          this.recommendedExercises = [];\r\n          this.exerciseHistory = [];\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  \r\n  methods: {\r\n    // 获取推荐练习\r\n    async fetchExercises() {\r\n      if (!this.currentProblem) return;\r\n      \r\n      this.loading = true;\r\n      \r\n      try {\r\n        // 实际应用中应调用API获取推荐\r\n        // 这里使用模拟数据\r\n        await this.simulateFetch();\r\n      } catch (error) {\r\n        console.error('获取推荐练习失败', error);\r\n        this.$message.error('获取推荐练习失败');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // 获取练习历史\r\n    async fetchExerciseHistory() {\r\n      if (!this.currentProblem) return;\r\n      \r\n      try {\r\n        // 实际应用中应调用API获取历史\r\n        // 这里使用模拟数据\r\n        await this.simulateHistoryFetch();\r\n      } catch (error) {\r\n        console.error('获取练习历史失败', error);\r\n      }\r\n    },\r\n    \r\n    // 模拟获取推荐数据\r\n    async simulateFetch() {\r\n      // 模拟API延迟\r\n      await new Promise(resolve => setTimeout(resolve, 800));\r\n      \r\n      // 根据当前问题和策略生成模拟数据\r\n      const exercises = [];\r\n      \r\n      if (this.strategy === 'similar') {\r\n        // 相似题目推荐\r\n        exercises.push({\r\n          id: 'e1',\r\n          title: '相似题目 - 一元二次方程应用',\r\n          preview: '一个长方形的周长是20厘米，面积是24平方厘米，求这个长方形的长和宽。',\r\n          difficulty: 2,\r\n          type: '应用题',\r\n          recommendReason: '与当前问题使用相同解题方法',\r\n          matchScore: 0.92\r\n        });\r\n        \r\n        exercises.push({\r\n          id: 'e2',\r\n          title: '相似题目 - 因式分解',\r\n          preview: '分解因式：x² - 9',\r\n          difficulty: 1,\r\n          type: '计算题',\r\n          recommendReason: '与当前问题涉及相同知识点',\r\n          matchScore: 0.85\r\n        });\r\n      } else if (this.strategy === 'complementary') {\r\n        // 互补知识推荐\r\n        exercises.push({\r\n          id: 'e3',\r\n          title: '互补知识 - 判别式应用',\r\n          preview: '讨论方程 ax² + bx + c = 0 的根与判别式的关系。',\r\n          difficulty: 3,\r\n          type: '讨论题',\r\n          recommendReason: '补充您的弱点知识',\r\n          matchScore: 0.78\r\n        });\r\n        \r\n        exercises.push({\r\n          id: 'e4',\r\n          title: '互补知识 - 韦达定理',\r\n          preview: '已知一元二次方程 x² + px + q = 0 的两根为 α 和 β，求 α² + β²。',\r\n          difficulty: 3,\r\n          type: '计算题',\r\n          recommendReason: '拓展相关知识点',\r\n          matchScore: 0.75\r\n        });\r\n      } else if (this.strategy === 'adaptive') {\r\n        // 自适应推荐\r\n        exercises.push({\r\n          id: 'e5',\r\n          title: '自适应 - 配方法练习',\r\n          preview: '使用配方法解一元二次方程：x² - 6x + 8 = 0',\r\n          difficulty: 2,\r\n          type: '计算题',\r\n          recommendReason: '针对您的学习进度定制',\r\n          matchScore: 0.95\r\n        });\r\n        \r\n        exercises.push({\r\n          id: 'e6',\r\n          title: '自适应 - 一元二次方程综合',\r\n          preview: '解方程并验证：2x² - 7x + 3 = 0',\r\n          difficulty: this.userContext.proficiency?.algebra > 0.7 ? 3 : 2,\r\n          type: '综合题',\r\n          recommendReason: '基于您的能力水平推荐',\r\n          matchScore: 0.88\r\n        });\r\n      }\r\n      \r\n      // 根据难度范围过滤\r\n      this.recommendedExercises = exercises.filter(\r\n        ex => ex.difficulty >= this.difficultyRange[0] && ex.difficulty <= this.difficultyRange[1]\r\n      );\r\n    },\r\n    \r\n    // 模拟获取历史数据\r\n    async simulateHistoryFetch() {\r\n      // 模拟API延迟\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // 生成模拟历史数据\r\n      this.exerciseHistory = [\r\n        {\r\n          id: 'h1',\r\n          title: '一元二次方程综合练习',\r\n          date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2天前\r\n          score: 85,\r\n          totalScore: 100,\r\n          status: 'completed'\r\n        },\r\n        {\r\n          id: 'h2',\r\n          title: '因式分解专项训练',\r\n          date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000), // 5天前\r\n          score: 92,\r\n          totalScore: 100,\r\n          status: 'completed'\r\n        },\r\n        {\r\n          id: 'h3',\r\n          title: '二次函数图像分析',\r\n          date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 7天前\r\n          score: 78,\r\n          totalScore: 100,\r\n          status: 'completed'\r\n        }\r\n      ];\r\n    },\r\n    \r\n    // 选择练习\r\n    selectExercise(exercise) {\r\n      this.$emit('exercise-selected', exercise);\r\n    },\r\n    \r\n    // 收藏练习\r\n    saveExercise(exercise) {\r\n      // 实际应用中应调用API保存收藏\r\n      this.$message.success(`已收藏练习：${exercise.title}`);\r\n    },\r\n    \r\n    // 复习历史练习\r\n    reviewHistory(history) {\r\n      // 实际应用中应跳转到练习详情页\r\n      this.$message.info(`开始复习：${history.title}`);\r\n    },\r\n    \r\n    // 查看全部历史\r\n    showAllHistory() {\r\n      // 实际应用中应跳转到历史页面\r\n      this.$message.info('查看全部练习历史');\r\n    },\r\n    \r\n    // 获取难度类型\r\n    getDifficultyType(difficulty) {\r\n      const typeMap = {\r\n        1: 'success',\r\n        2: '',\r\n        3: 'warning',\r\n        4: 'danger',\r\n        5: 'danger'\r\n      };\r\n      return typeMap[difficulty] || '';\r\n    },\r\n    \r\n    // 获取难度文本\r\n    getDifficultyText(difficulty) {\r\n      return this.difficultyMarks[difficulty] || '未知';\r\n    },\r\n    \r\n    // 获取历史项目类型\r\n    getHistoryItemType(history) {\r\n      if (history.score / history.totalScore >= 0.9) return 'success';\r\n      if (history.score / history.totalScore >= 0.6) return 'warning';\r\n      return 'danger';\r\n    },\r\n    \r\n    // 格式化日期\r\n    formatDate(date) {\r\n      if (!date) return '';\r\n      \r\n      const now = new Date();\r\n      const diff = now - date;\r\n      const day = 24 * 60 * 60 * 1000;\r\n      \r\n      if (diff < day) {\r\n        return '今天';\r\n      } else if (diff < 2 * day) {\r\n        return '昨天';\r\n      } else if (diff < 7 * day) {\r\n        return `${Math.floor(diff / day)}天前`;\r\n      } else {\r\n        const d = new Date(date);\r\n        const month = String(d.getMonth() + 1).padStart(2, '0');\r\n        const day = String(d.getDate()).padStart(2, '0');\r\n        return `${month}-${day}`;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.exercise-recommendation {\r\n  height: 100%;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: hidden;\r\n}\r\n\r\n.module-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.module-header h3 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  color: #303133;\r\n  margin-right: 8px;\r\n}\r\n\r\n.module-header i {\r\n  color: #909399;\r\n  cursor: help;\r\n}\r\n\r\n.loading-state {\r\n  padding: 10px;\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 150px;\r\n  color: #909399;\r\n}\r\n\r\n.empty-state i {\r\n  font-size: 36px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.recommendation-strategy {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.recommendation-strategy span {\r\n  margin-right: 10px;\r\n  color: #606266;\r\n}\r\n\r\n.difficulty-filter {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.difficulty-filter span {\r\n  color: #606266;\r\n}\r\n\r\n.exercises-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.no-exercises {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100px;\r\n  color: #909399;\r\n}\r\n\r\n.no-exercises i {\r\n  font-size: 24px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.exercise-card {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.exercise-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.exercise-title {\r\n  font-weight: 500;\r\n  color: #303133;\r\n}\r\n\r\n.exercise-tags {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.exercise-preview {\r\n  margin-bottom: 10px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  max-height: 60px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.exercise-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.exercise-meta {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.recommend-reason {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.recommend-reason i {\r\n  margin-right: 5px;\r\n}\r\n\r\n.exercise-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 15px 0 10px;\r\n  padding-bottom: 5px;\r\n  border-bottom: 1px solid #ebeef5;\r\n  font-weight: 500;\r\n  color: #303133;\r\n}\r\n\r\n.history-container {\r\n  overflow-y: auto;\r\n  max-height: 200px;\r\n}\r\n\r\n.history-title {\r\n  font-weight: 500;\r\n  color: #303133;\r\n}\r\n\r\n.history-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}