{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"homework-management\"\n};\nvar _hoisted_2 = {\n  \"class\": \"header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"filter-container\"\n};\nvar _hoisted_4 = {\n  \"class\": \"homework-list\"\n};\nvar _hoisted_5 = [\"onClick\"];\nvar _hoisted_6 = {\n  \"class\": \"homework-status\"\n};\nvar _hoisted_7 = {\n  \"class\": \"homework-info\"\n};\nvar _hoisted_8 = {\n  \"class\": \"homework-title\"\n};\nvar _hoisted_9 = {\n  \"class\": \"homework-meta\"\n};\nvar _hoisted_10 = {\n  \"class\": \"homework-progress\"\n};\nvar _hoisted_11 = {\n  key: 1,\n  \"class\": \"empty-state\"\n};\nvar _hoisted_12 = {\n  \"class\": \"homework-stats\"\n};\nvar _hoisted_13 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_14 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_15 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_16 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_17 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_18 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_19 = {\n  \"class\": \"reminder-settings\"\n};\nvar _hoisted_20 = {\n  \"class\": \"reminder-options\"\n};\nvar _hoisted_21 = {\n  \"class\": \"reminder-options\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_progress = _resolveComponent(\"el-progress\");\n  var _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  var _component_el_time_picker = _resolveComponent(\"el-time-picker\");\n  var _component_el_collapse_item = _resolveComponent(\"el-collapse-item\");\n  var _component_el_collapse = _resolveComponent(\"el-collapse\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"我的作业\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    type: \"text\",\n    icon: \"el-icon-refresh\",\n    onClick: $options.refreshHomeworks,\n    loading: $data.loading\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[6] || (_cache[6] = [_createTextVNode(\"刷新\")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [6]\n  }, 8 /* PROPS */, [\"onClick\", \"loading\"])]), _createCommentVNode(\" 作业过滤器 \"), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_select, {\n    modelValue: $data.statusFilter,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.statusFilter = $event;\n    }),\n    placeholder: \"状态\",\n    size: \"small\",\n    onChange: $options.applyFilters\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_option, {\n        label: \"全部\",\n        value: \"all\"\n      }), _createVNode(_component_el_option, {\n        label: \"未完成\",\n        value: \"incomplete\"\n      }), _createVNode(_component_el_option, {\n        label: \"已提交\",\n        value: \"submitted\"\n      }), _createVNode(_component_el_option, {\n        label: \"已批改\",\n        value: \"graded\"\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onChange\"]), _createVNode(_component_el_select, {\n    modelValue: $data.sortBy,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.sortBy = $event;\n    }),\n    placeholder: \"排序\",\n    size: \"small\",\n    onChange: $options.applyFilters\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_option, {\n        label: \"截止日期\",\n        value: \"deadline\"\n      }), _createVNode(_component_el_option, {\n        label: \"最近活动\",\n        value: \"activity\"\n      }), _createVNode(_component_el_option, {\n        label: \"难度\",\n        value: \"difficulty\"\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]), _createCommentVNode(\" 作业列表 \"), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_4, [$options.filteredHomeworks.length > 0 ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($options.filteredHomeworks, function (homework) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: homework.id,\n      \"class\": _normalizeClass([\"homework-item\", {\n        'active': $props.activeHomeworkId === homework.id\n      }]),\n      onClick: function onClick($event) {\n        return $options.selectHomework(homework.id);\n      }\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_tag, {\n      type: $options.getStatusType(homework.status),\n      size: \"mini\"\n    }, {\n      \"default\": _withCtx(function () {\n        return [_createTextVNode(_toDisplayString($options.getStatusText(homework.status)), 1 /* TEXT */)];\n      }),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h4\", _hoisted_8, _toDisplayString(homework.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"i\", {\n      \"class\": \"el-icon-date\"\n    }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.formatDate(homework.deadline)), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"i\", {\n      \"class\": \"el-icon-medal\"\n    }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.getDifficultyText(homework.difficulty)), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_progress, {\n      type: \"circle\",\n      percentage: $options.calculateProgress(homework),\n      width: 36,\n      status: $options.getProgressStatus(homework)\n    }, null, 8 /* PROPS */, [\"percentage\", \"status\"])])], 10 /* CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */)) : !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_cache[10] || (_cache[10] = _createElementVNode(\"i\", {\n    \"class\": \"el-icon-document\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($options.getEmptyStateText()), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])), [[_directive_loading, $data.loading]]), _createCommentVNode(\" 作业统计 \"), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[11] || (_cache[11] = _createElementVNode(\"span\", {\n    \"class\": \"stat-label\"\n  }, \"待完成\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_14, _toDisplayString($options.getIncompleteCount()), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_15, [_cache[12] || (_cache[12] = _createElementVNode(\"span\", {\n    \"class\": \"stat-label\"\n  }, \"已提交\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_16, _toDisplayString($options.getSubmittedCount()), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_17, [_cache[13] || (_cache[13] = _createElementVNode(\"span\", {\n    \"class\": \"stat-label\"\n  }, \"已批改\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_18, _toDisplayString($options.getGradedCount()), 1 /* TEXT */)])]), _createCommentVNode(\" 提醒设置 \"), _createElementVNode(\"div\", _hoisted_19, [_createVNode(_component_el_collapse, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_collapse_item, {\n        title: \"提醒设置\",\n        name: \"reminders\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_20, [_createVNode(_component_el_checkbox, {\n            modelValue: $data.reminders.deadline,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n              return $data.reminders.deadline = $event;\n            })\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[14] || (_cache[14] = [_createTextVNode(\"截止前提醒\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [14]\n          }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_select, {\n            modelValue: $data.reminders.deadlineTime,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n              return $data.reminders.deadlineTime = $event;\n            }),\n            placeholder: \"提前时间\",\n            size: \"small\",\n            disabled: !$data.reminders.deadline\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_option, {\n                label: \"1小时\",\n                value: \"1h\"\n              }), _createVNode(_component_el_option, {\n                label: \"3小时\",\n                value: \"3h\"\n              }), _createVNode(_component_el_option, {\n                label: \"6小时\",\n                value: \"6h\"\n              }), _createVNode(_component_el_option, {\n                label: \"12小时\",\n                value: \"12h\"\n              }), _createVNode(_component_el_option, {\n                label: \"1天\",\n                value: \"1d\"\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\", \"disabled\"])]), _createElementVNode(\"div\", _hoisted_21, [_createVNode(_component_el_checkbox, {\n            modelValue: $data.reminders.daily,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n              return $data.reminders.daily = $event;\n            })\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[15] || (_cache[15] = [_createTextVNode(\"每日提醒\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [15]\n          }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_time_picker, {\n            modelValue: $data.reminders.dailyTime,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n              return $data.reminders.dailyTime = $event;\n            }),\n            placeholder: \"提醒时间\",\n            size: \"small\",\n            disabled: !$data.reminders.daily,\n            format: \"HH:mm\",\n            \"value-format\": \"HH:mm\"\n          }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])]), _createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"small\",\n            onClick: $options.saveReminderSettings,\n            style: {\n              \"margin-top\": \"10px\"\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[16] || (_cache[16] = [_createTextVNode(\"保存设置\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [16]\n          }, 8 /* PROPS */, [\"onClick\"])];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_button","type","icon","onClick","$options","refreshHomeworks","loading","$data","_cache","_createCommentVNode","_hoisted_3","_component_el_select","statusFilter","$event","placeholder","size","onChange","applyFilters","_component_el_option","label","value","sortBy","_hoisted_4","filteredHomeworks","length","_Fragment","key","_renderList","homework","id","_normalizeClass","$props","activeHomeworkId","selectHomework","_hoisted_6","_component_el_tag","getStatusType","status","getStatusText","_hoisted_7","_hoisted_8","_toDisplayString","title","_hoisted_9","formatDate","deadline","getDifficultyText","difficulty","_hoisted_10","_component_el_progress","percentage","calculateProgress","width","getProgressStatus","_hoisted_11","getEmptyStateText","_hoisted_12","_hoisted_13","_hoisted_14","getIncompleteCount","_hoisted_15","_hoisted_16","getSubmittedCount","_hoisted_17","_hoisted_18","getGradedCount","_hoisted_19","_component_el_collapse","_component_el_collapse_item","name","_hoisted_20","_component_el_checkbox","reminders","deadlineTime","disabled","_hoisted_21","daily","_component_el_time_picker","dailyTime","format","saveReminderSettings","style"],"sources":["E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\src\\components\\HomeworkManagement.vue"],"sourcesContent":["<!--\r\n  文件名: HomeworkManagement.vue\r\n  描述: 作业管理模块组件，负责作业的接收、存储、状态跟踪和提交\r\n  作者: Claude\r\n  创建日期: 2025-06-15\r\n-->\r\n\r\n<template>\r\n  <div class=\"homework-management\">\r\n    <div class=\"header\">\r\n      <h3>我的作业</h3>\r\n      <el-button \r\n        type=\"text\" \r\n        icon=\"el-icon-refresh\" \r\n        @click=\"refreshHomeworks\"\r\n        :loading=\"loading\"\r\n      >刷新</el-button>\r\n    </div>\r\n    \r\n    <!-- 作业过滤器 -->\r\n    <div class=\"filter-container\">\r\n      <el-select v-model=\"statusFilter\" placeholder=\"状态\" size=\"small\" @change=\"applyFilters\">\r\n        <el-option label=\"全部\" value=\"all\"></el-option>\r\n        <el-option label=\"未完成\" value=\"incomplete\"></el-option>\r\n        <el-option label=\"已提交\" value=\"submitted\"></el-option>\r\n        <el-option label=\"已批改\" value=\"graded\"></el-option>\r\n      </el-select>\r\n      \r\n      <el-select v-model=\"sortBy\" placeholder=\"排序\" size=\"small\" @change=\"applyFilters\">\r\n        <el-option label=\"截止日期\" value=\"deadline\"></el-option>\r\n        <el-option label=\"最近活动\" value=\"activity\"></el-option>\r\n        <el-option label=\"难度\" value=\"difficulty\"></el-option>\r\n      </el-select>\r\n    </div>\r\n    \r\n    <!-- 作业列表 -->\r\n    <div class=\"homework-list\" v-loading=\"loading\">\r\n      <template v-if=\"filteredHomeworks.length > 0\">\r\n        <div \r\n          v-for=\"homework in filteredHomeworks\" \r\n          :key=\"homework.id\"\r\n          class=\"homework-item\"\r\n          :class=\"{ 'active': activeHomeworkId === homework.id }\"\r\n          @click=\"selectHomework(homework.id)\"\r\n        >\r\n          <div class=\"homework-status\">\r\n            <el-tag :type=\"getStatusType(homework.status)\" size=\"mini\">\r\n              {{ getStatusText(homework.status) }}\r\n            </el-tag>\r\n          </div>\r\n          <div class=\"homework-info\">\r\n            <h4 class=\"homework-title\">{{ homework.title }}</h4>\r\n            <div class=\"homework-meta\">\r\n              <span><i class=\"el-icon-date\"></i> {{ formatDate(homework.deadline) }}</span>\r\n              <span><i class=\"el-icon-medal\"></i> {{ getDifficultyText(homework.difficulty) }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"homework-progress\">\r\n            <el-progress \r\n              type=\"circle\" \r\n              :percentage=\"calculateProgress(homework)\" \r\n              :width=\"36\"\r\n              :status=\"getProgressStatus(homework)\"\r\n            ></el-progress>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      \r\n      <div v-else-if=\"!loading\" class=\"empty-state\">\r\n        <i class=\"el-icon-document\"></i>\r\n        <p>{{ getEmptyStateText() }}</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 作业统计 -->\r\n    <div class=\"homework-stats\">\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">待完成</span>\r\n        <span class=\"stat-value\">{{ getIncompleteCount() }}</span>\r\n      </div>\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">已提交</span>\r\n        <span class=\"stat-value\">{{ getSubmittedCount() }}</span>\r\n      </div>\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">已批改</span>\r\n        <span class=\"stat-value\">{{ getGradedCount() }}</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 提醒设置 -->\r\n    <div class=\"reminder-settings\">\r\n      <el-collapse>\r\n        <el-collapse-item title=\"提醒设置\" name=\"reminders\">\r\n          <div class=\"reminder-options\">\r\n            <el-checkbox v-model=\"reminders.deadline\">截止前提醒</el-checkbox>\r\n            <el-select \r\n              v-model=\"reminders.deadlineTime\" \r\n              placeholder=\"提前时间\" \r\n              size=\"small\"\r\n              :disabled=\"!reminders.deadline\"\r\n            >\r\n              <el-option label=\"1小时\" value=\"1h\"></el-option>\r\n              <el-option label=\"3小时\" value=\"3h\"></el-option>\r\n              <el-option label=\"6小时\" value=\"6h\"></el-option>\r\n              <el-option label=\"12小时\" value=\"12h\"></el-option>\r\n              <el-option label=\"1天\" value=\"1d\"></el-option>\r\n            </el-select>\r\n          </div>\r\n          <div class=\"reminder-options\">\r\n            <el-checkbox v-model=\"reminders.daily\">每日提醒</el-checkbox>\r\n            <el-time-picker\r\n              v-model=\"reminders.dailyTime\"\r\n              placeholder=\"提醒时间\"\r\n              size=\"small\"\r\n              :disabled=\"!reminders.daily\"\r\n              format=\"HH:mm\"\r\n              value-format=\"HH:mm\"\r\n            ></el-time-picker>\r\n          </div>\r\n          <el-button \r\n            type=\"primary\" \r\n            size=\"small\" \r\n            @click=\"saveReminderSettings\"\r\n            style=\"margin-top: 10px\"\r\n          >保存设置</el-button>\r\n        </el-collapse-item>\r\n      </el-collapse>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { formatDate } from '../utils/dateFormat';\r\n\r\nexport default {\r\n  name: 'HomeworkManagement',\r\n  \r\n  props: {\r\n    // 作业列表\r\n    homeworks: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    \r\n    // 当前激活的作业ID\r\n    activeHomeworkId: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      // 加载状态\r\n      loading: false,\r\n      \r\n      // 过滤器\r\n      statusFilter: 'all',\r\n      sortBy: 'deadline',\r\n      \r\n      // 提醒设置\r\n      reminders: {\r\n        deadline: true,\r\n        deadlineTime: '12h',\r\n        daily: false,\r\n        dailyTime: '20:00'\r\n      }\r\n    };\r\n  },\r\n  \r\n  computed: {\r\n    // 根据过滤条件筛选并排序作业\r\n    filteredHomeworks() {\r\n      // 先筛选\r\n      let result = [...this.homeworks];\r\n      \r\n      if (this.statusFilter !== 'all') {\r\n        if (this.statusFilter === 'incomplete') {\r\n          // 未完成包括未开始和进行中\r\n          result = result.filter(hw => \r\n            hw.status === 'not_started' || hw.status === 'in_progress'\r\n          );\r\n        } else if (this.statusFilter === 'submitted') {\r\n          // 已提交包括已提交和已批改\r\n          result = result.filter(hw => \r\n            hw.status === 'submitted' || hw.status === 'graded'\r\n          );\r\n        } else if (this.statusFilter === 'graded') {\r\n          // 只包括已批改\r\n          result = result.filter(hw => hw.status === 'graded');\r\n        }\r\n      }\r\n      \r\n      // 再排序\r\n      if (this.sortBy === 'deadline') {\r\n        // 按截止日期排序（从近到远）\r\n        result.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));\r\n      } else if (this.sortBy === 'activity') {\r\n        // 按最近活动排序（从新到旧）\r\n        result.sort((a, b) => new Date(b.lastActivity) - new Date(a.lastActivity));\r\n      } else if (this.sortBy === 'difficulty') {\r\n        // 按难度排序（从低到高）\r\n        result.sort((a, b) => a.difficulty - b.difficulty);\r\n      }\r\n      \r\n      return result;\r\n    }\r\n  },\r\n  \r\n  methods: {\r\n    // 选择作业\r\n    selectHomework(homeworkId) {\r\n      this.$emit('select-homework', homeworkId);\r\n    },\r\n    \r\n    // 刷新作业列表\r\n    refreshHomeworks() {\r\n      this.loading = true;\r\n      this.$emit('refresh-homeworks');\r\n      \r\n      // 模拟加载结束\r\n      setTimeout(() => {\r\n        this.loading = false;\r\n      }, 800);\r\n    },\r\n    \r\n    // 应用过滤条件\r\n    applyFilters() {\r\n      // 过滤和排序是通过计算属性实现的，这里不需要额外操作\r\n    },\r\n    \r\n    // 计算作业完成进度\r\n    calculateProgress(homework) {\r\n      if (!homework.problems || homework.problems.length === 0) {\r\n        return 0;\r\n      }\r\n      \r\n      if (homework.status === 'submitted' || homework.status === 'graded') {\r\n        return 100;\r\n      }\r\n      \r\n      // 根据已回答的问题计算进度\r\n      const totalProblems = homework.problems.length;\r\n      const answeredProblems = homework.problems.filter(\r\n        problem => homework.savedAnswers && homework.savedAnswers[problem.id]\r\n      ).length;\r\n      \r\n      return Math.round((answeredProblems / totalProblems) * 100);\r\n    },\r\n    \r\n    // 获取进度状态\r\n    getProgressStatus(homework) {\r\n      const progress = this.calculateProgress(homework);\r\n      \r\n      if (progress === 0) return 'exception';\r\n      if (progress < 100) return '';\r\n      return 'success';\r\n    },\r\n    \r\n    // 获取状态标签类型\r\n    getStatusType(status) {\r\n      const typeMap = {\r\n        'not_started': 'info',\r\n        'in_progress': 'warning',\r\n        'submitted': 'primary',\r\n        'graded': 'success'\r\n      };\r\n      return typeMap[status] || 'info';\r\n    },\r\n    \r\n    // 获取状态文本\r\n    getStatusText(status) {\r\n      const textMap = {\r\n        'not_started': '未开始',\r\n        'in_progress': '进行中',\r\n        'submitted': '已提交',\r\n        'graded': '已批改'\r\n      };\r\n      return textMap[status] || status;\r\n    },\r\n    \r\n    // 获取难度文本\r\n    getDifficultyText(difficulty) {\r\n      const difficultyMap = {\r\n        1: '简单',\r\n        2: '中等',\r\n        3: '困难',\r\n        4: '挑战',\r\n        5: '极难'\r\n      };\r\n      return difficultyMap[difficulty] || difficulty;\r\n    },\r\n    \r\n    // 获取未完成作业数量\r\n    getIncompleteCount() {\r\n      return this.homeworks.filter(\r\n        hw => hw.status === 'not_started' || hw.status === 'in_progress'\r\n      ).length;\r\n    },\r\n    \r\n    // 获取已提交作业数量\r\n    getSubmittedCount() {\r\n      return this.homeworks.filter(\r\n        hw => hw.status === 'submitted'\r\n      ).length;\r\n    },\r\n    \r\n    // 获取已批改作业数量\r\n    getGradedCount() {\r\n      return this.homeworks.filter(\r\n        hw => hw.status === 'graded'\r\n      ).length;\r\n    },\r\n    \r\n    // 获取空状态文本\r\n    getEmptyStateText() {\r\n      if (this.statusFilter === 'all') {\r\n        return '暂无作业';\r\n      } else if (this.statusFilter === 'incomplete') {\r\n        return '暂无未完成作业';\r\n      } else if (this.statusFilter === 'submitted') {\r\n        return '暂无已提交作业';\r\n      } else if (this.statusFilter === 'graded') {\r\n        return '暂无已批改作业';\r\n      }\r\n      return '暂无作业';\r\n    },\r\n    \r\n    // 保存提醒设置\r\n    saveReminderSettings() {\r\n      // 实际应用中应该调用API保存设置\r\n      this.$message.success('提醒设置已保存');\r\n      \r\n      // 如果启用了提醒，可以在本地设置提醒\r\n      if (this.reminders.deadline) {\r\n        // 设置截止日期提醒\r\n        console.log('设置截止日期提醒', this.reminders.deadlineTime);\r\n      }\r\n      \r\n      if (this.reminders.daily) {\r\n        // 设置每日提醒\r\n        console.log('设置每日提醒', this.reminders.dailyTime);\r\n      }\r\n    },\r\n    \r\n    // 格式化日期\r\n    formatDate(date) {\r\n      return formatDate(date, 'MM-DD HH:mm');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.homework-management {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  padding: 15px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.header h3 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  color: #303133;\r\n}\r\n\r\n.filter-container {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.homework-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.homework-item {\r\n  display: flex;\r\n  padding: 12px;\r\n  margin-bottom: 10px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  border-left: 3px solid #e6e6e6;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.homework-item:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.homework-item.active {\r\n  border-left-color: #409EFF;\r\n  background-color: #f0f9ff;\r\n}\r\n\r\n.homework-status {\r\n  width: 60px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n}\r\n\r\n.homework-info {\r\n  flex: 1;\r\n  padding-right: 10px;\r\n}\r\n\r\n.homework-title {\r\n  margin: 0 0 5px 0;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  color: #303133;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.homework-meta {\r\n  display: flex;\r\n  gap: 10px;\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.homework-progress {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 150px;\r\n  color: #909399;\r\n}\r\n\r\n.empty-state i {\r\n  font-size: 36px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.homework-stats {\r\n  display: flex;\r\n  border-top: 1px solid #e6e6e6;\r\n  border-bottom: 1px solid #e6e6e6;\r\n  padding: 10px 0;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.stat-item {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.reminder-settings {\r\n  margin-top: auto;\r\n}\r\n\r\n.reminder-options {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}