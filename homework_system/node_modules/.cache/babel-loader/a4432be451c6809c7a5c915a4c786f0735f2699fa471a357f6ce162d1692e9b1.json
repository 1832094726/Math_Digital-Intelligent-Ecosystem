{"ast":null,"code":"import \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.string.replace.js\";\n/**\r\n * 格式化日期\r\n * @param {Date|string} date - 日期对象或日期字符串\r\n * @param {string} format - 格式化模板，如 'YYYY-MM-DD HH:mm:ss'\r\n * @returns {string} 格式化后的日期字符串\r\n */\nexport function formatDate(date) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD HH:mm:ss';\n  if (!date) return '';\n\n  // 如果是字符串，转换为日期对象\n  if (typeof date === 'string') {\n    date = new Date(date);\n  }\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n  var hour = date.getHours();\n  var minute = date.getMinutes();\n  var second = date.getSeconds();\n\n  // 补零函数\n  var pad = function pad(n) {\n    return n.toString().padStart(2, '0');\n  };\n  return format.replace(/YYYY/g, year).replace(/MM/g, pad(month)).replace(/DD/g, pad(day)).replace(/HH/g, pad(hour)).replace(/mm/g, pad(minute)).replace(/ss/g, pad(second));\n}","map":{"version":3,"names":["formatDate","date","format","arguments","length","undefined","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","pad","n","toString","padStart","replace"],"sources":["E:/program development/The Digital and Intelligent Ecosystem for K-12 Mathematics Education/homework_system/src/utils/dateFormat.js"],"sourcesContent":["/**\r\n * 格式化日期\r\n * @param {Date|string} date - 日期对象或日期字符串\r\n * @param {string} format - 格式化模板，如 'YYYY-MM-DD HH:mm:ss'\r\n * @returns {string} 格式化后的日期字符串\r\n */\r\nexport function formatDate(date, format = 'YYYY-MM-DD HH:mm:ss') {\r\n  if (!date) return '';\r\n  \r\n  // 如果是字符串，转换为日期对象\r\n  if (typeof date === 'string') {\r\n    date = new Date(date);\r\n  }\r\n  \r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const hour = date.getHours();\r\n  const minute = date.getMinutes();\r\n  const second = date.getSeconds();\r\n  \r\n  // 补零函数\r\n  const pad = (n) => n.toString().padStart(2, '0');\r\n  \r\n  return format\r\n    .replace(/YYYY/g, year)\r\n    .replace(/MM/g, pad(month))\r\n    .replace(/DD/g, pad(day))\r\n    .replace(/HH/g, pad(hour))\r\n    .replace(/mm/g, pad(minute))\r\n    .replace(/ss/g, pad(second));\r\n} "],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAUA,CAACC,IAAI,EAAkC;EAAA,IAAhCC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,qBAAqB;EAC7D,IAAI,CAACF,IAAI,EAAE,OAAO,EAAE;;EAEpB;EACA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5BA,IAAI,GAAG,IAAIK,IAAI,CAACL,IAAI,CAAC;EACvB;EAEA,IAAMM,IAAI,GAAGN,IAAI,CAACO,WAAW,CAAC,CAAC;EAC/B,IAAMC,KAAK,GAAGR,IAAI,CAACS,QAAQ,CAAC,CAAC,GAAG,CAAC;EACjC,IAAMC,GAAG,GAAGV,IAAI,CAACW,OAAO,CAAC,CAAC;EAC1B,IAAMC,IAAI,GAAGZ,IAAI,CAACa,QAAQ,CAAC,CAAC;EAC5B,IAAMC,MAAM,GAAGd,IAAI,CAACe,UAAU,CAAC,CAAC;EAChC,IAAMC,MAAM,GAAGhB,IAAI,CAACiB,UAAU,CAAC,CAAC;;EAEhC;EACA,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAIC,CAAC;IAAA,OAAKA,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAAA;EAEhD,OAAOpB,MAAM,CACVqB,OAAO,CAAC,OAAO,EAAEhB,IAAI,CAAC,CACtBgB,OAAO,CAAC,KAAK,EAAEJ,GAAG,CAACV,KAAK,CAAC,CAAC,CAC1Bc,OAAO,CAAC,KAAK,EAAEJ,GAAG,CAACR,GAAG,CAAC,CAAC,CACxBY,OAAO,CAAC,KAAK,EAAEJ,GAAG,CAACN,IAAI,CAAC,CAAC,CACzBU,OAAO,CAAC,KAAK,EAAEJ,GAAG,CAACJ,MAAM,CAAC,CAAC,CAC3BQ,OAAO,CAAC,KAAK,EAAEJ,GAAG,CAACF,MAAM,CAAC,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}