{"ast":null,"code":"import _toConsumableArray from \"E:/program development/The Digital and Intelligent Ecosystem for K-12 Mathematics Education/homework_system/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"exercise-recommendation\"\n};\nvar _hoisted_2 = {\n  \"class\": \"module-header\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"loading-state\"\n};\nvar _hoisted_4 = {\n  key: 1,\n  \"class\": \"empty-state\"\n};\nvar _hoisted_5 = {\n  \"class\": \"recommendation-strategy\"\n};\nvar _hoisted_6 = {\n  \"class\": \"difficulty-filter\"\n};\nvar _hoisted_7 = {\n  \"class\": \"exercises-container\"\n};\nvar _hoisted_8 = {\n  key: 0,\n  \"class\": \"no-exercises\"\n};\nvar _hoisted_9 = {\n  \"class\": \"exercise-header\"\n};\nvar _hoisted_10 = {\n  \"class\": \"exercise-title\"\n};\nvar _hoisted_11 = {\n  \"class\": \"exercise-tags\"\n};\nvar _hoisted_12 = [\"innerHTML\"];\nvar _hoisted_13 = {\n  \"class\": \"exercise-footer\"\n};\nvar _hoisted_14 = {\n  \"class\": \"exercise-meta\"\n};\nvar _hoisted_15 = {\n  key: 0,\n  \"class\": \"recommend-reason\"\n};\nvar _hoisted_16 = {\n  key: 1,\n  \"class\": \"match-score\"\n};\nvar _hoisted_17 = {\n  \"class\": \"exercise-actions\"\n};\nvar _hoisted_18 = {\n  \"class\": \"section-header\"\n};\nvar _hoisted_19 = {\n  \"class\": \"history-container\"\n};\nvar _hoisted_20 = {\n  \"class\": \"history-title\"\n};\nvar _hoisted_21 = {\n  \"class\": \"history-meta\"\n};\nvar _hoisted_22 = {\n  \"class\": \"history-score\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_radio_button = _resolveComponent(\"el-radio-button\");\n  var _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  var _component_el_slider = _resolveComponent(\"el-slider\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_timeline_item = _resolveComponent(\"el-timeline-item\");\n  var _component_el_timeline = _resolveComponent(\"el-timeline\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"推荐练习\", -1 /* HOISTED */)), _createVNode(_component_el_tooltip, {\n    content: \"基于当前问题和您的学习情况，智能推荐相关练习题\",\n    placement: \"top\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[2] || (_cache[2] = [_createElementVNode(\"i\", {\n        \"class\": \"el-icon-question\"\n      }, null, -1 /* HOISTED */)]);\n    }),\n    _: 1 /* STABLE */,\n    __: [2]\n  })]), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_skeleton, {\n    rows: 5,\n    animated: \"\"\n  })])) : !$props.currentProblem ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n    \"class\": \"el-icon-document\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"请选择一道题目以获取相关练习推荐\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" 推荐策略选择 \"), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", null, \"推荐策略:\", -1 /* HOISTED */)), _createVNode(_component_el_radio_group, {\n    modelValue: $data.strategy,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.strategy = $event;\n    }),\n    size: \"mini\",\n    onChange: $options.fetchExercises\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_radio_button, {\n        label: \"similar\"\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[5] || (_cache[5] = [_createTextVNode(\"相似题目\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [5]\n      }), _createVNode(_component_el_radio_button, {\n        label: \"complementary\"\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[6] || (_cache[6] = [_createTextVNode(\"互补知识\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [6]\n      }), _createVNode(_component_el_radio_button, {\n        label: \"adaptive\"\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[7] || (_cache[7] = [_createTextVNode(\"自适应\")]);\n        }),\n        _: 1 /* STABLE */,\n        __: [7]\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]), _createCommentVNode(\" 难度选择 \"), _createElementVNode(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"span\", null, \"难度范围:\", -1 /* HOISTED */)), _createVNode(_component_el_slider, {\n    modelValue: $data.difficultyRange,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.difficultyRange = $event;\n    }),\n    range: \"\",\n    min: 1,\n    max: 5,\n    step: 1,\n    marks: $data.difficultyMarks,\n    onChange: $options.fetchExercises\n  }, null, 8 /* PROPS */, [\"modelValue\", \"marks\", \"onChange\"])]), _createCommentVNode(\" 练习列表 \"), _createElementVNode(\"div\", _hoisted_7, [$data.recommendedExercises.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[10] || (_cache[10] = [_createElementVNode(\"i\", {\n    \"class\": \"el-icon-warning-outline\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"暂无符合条件的推荐练习\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.recommendedExercises, function (exercise) {\n    return _openBlock(), _createBlock(_component_el_card, {\n      key: exercise.id,\n      \"class\": \"exercise-card\",\n      \"body-style\": {\n        padding: '12px'\n      },\n      shadow: \"hover\"\n    }, {\n      \"default\": _withCtx(function () {\n        return [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", _hoisted_10, _toDisplayString(exercise.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_el_tag, {\n          size: \"mini\",\n          type: $options.getDifficultyType(exercise.difficulty)\n        }, {\n          \"default\": _withCtx(function () {\n            return [_createTextVNode(_toDisplayString($options.getDifficultyText(exercise.difficulty)), 1 /* TEXT */)];\n          }),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"]), exercise.type ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 0,\n          size: \"mini\",\n          type: \"info\"\n        }, {\n          \"default\": _withCtx(function () {\n            return [_createTextVNode(_toDisplayString(exercise.type), 1 /* TEXT */)];\n          }),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", {\n          \"class\": \"exercise-preview\",\n          innerHTML: exercise.preview\n        }, null, 8 /* PROPS */, _hoisted_12), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [exercise.recommendReason ? (_openBlock(), _createElementBlock(\"span\", _hoisted_15, [_cache[11] || (_cache[11] = _createElementVNode(\"i\", {\n          \"class\": \"el-icon-info\"\n        }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(exercise.recommendReason), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), exercise.matchScore ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, \" 匹配度: \" + _toDisplayString(Math.round(exercise.matchScore * 100)) + \"% \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_17, [_createVNode(_component_el_button, {\n          type: \"primary\",\n          size: \"mini\",\n          onClick: function onClick($event) {\n            return $options.selectExercise(exercise);\n          }\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[12] || (_cache[12] = [_createTextVNode(\"练习\")]));\n          }),\n          _: 2 /* DYNAMIC */,\n          __: [12]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          type: \"text\",\n          size: \"mini\",\n          onClick: function onClick($event) {\n            return $options.saveExercise(exercise);\n          }\n        }, {\n          \"default\": _withCtx(function () {\n            return _toConsumableArray(_cache[13] || (_cache[13] = [_createTextVNode(\"收藏\")]));\n          }),\n          _: 2 /* DYNAMIC */,\n          __: [13]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])])];\n      }),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 历史练习记录 \"), _createElementVNode(\"div\", _hoisted_18, [_cache[15] || (_cache[15] = _createElementVNode(\"span\", null, \"最近练习\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    type: \"text\",\n    size: \"mini\",\n    onClick: $options.showAllHistory\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[14] || (_cache[14] = [_createTextVNode(\"查看全部\")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [14]\n  }, 8 /* PROPS */, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_19, [_createVNode(_component_el_timeline, null, {\n    \"default\": _withCtx(function () {\n      return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.exerciseHistory, function (history, index) {\n        return _openBlock(), _createBlock(_component_el_timeline_item, {\n          key: history.id,\n          timestamp: $options.formatDate(history.date),\n          type: $options.getHistoryItemType(history),\n          size: index === 0 ? 'large' : 'normal',\n          \"hide-timestamp\": false\n        }, {\n          \"default\": _withCtx(function () {\n            return [_createElementVNode(\"span\", _hoisted_20, _toDisplayString(history.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"span\", _hoisted_22, \" 得分: \" + _toDisplayString(history.score) + \"/\" + _toDisplayString(history.totalScore), 1 /* TEXT */), _createVNode(_component_el_button, {\n              type: \"text\",\n              size: \"mini\",\n              onClick: function onClick($event) {\n                return $options.reviewHistory(history);\n              }\n            }, {\n              \"default\": _withCtx(function () {\n                return _toConsumableArray(_cache[16] || (_cache[16] = [_createTextVNode(\"复习\")]));\n              }),\n              _: 2 /* DYNAMIC */,\n              __: [16]\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])];\n          }),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"timestamp\", \"type\", \"size\"]);\n      }), 128 /* KEYED_FRAGMENT */))];\n    }),\n    _: 1 /* STABLE */\n  })])], 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_tooltip","content","placement","_cache","$data","loading","_hoisted_3","_component_el_skeleton","rows","animated","$props","currentProblem","_hoisted_4","_Fragment","key","_createCommentVNode","_hoisted_5","_component_el_radio_group","strategy","$event","size","onChange","$options","fetchExercises","_component_el_radio_button","label","_hoisted_6","_component_el_slider","difficultyRange","range","min","max","step","marks","difficultyMarks","_hoisted_7","recommendedExercises","length","_hoisted_8","_renderList","exercise","_createBlock","_component_el_card","id","padding","shadow","_hoisted_9","_hoisted_10","_toDisplayString","title","_hoisted_11","_component_el_tag","type","getDifficultyType","difficulty","getDifficultyText","innerHTML","preview","_hoisted_13","_hoisted_14","recommendReason","_hoisted_15","matchScore","_hoisted_16","Math","round","_hoisted_17","_component_el_button","onClick","selectExercise","_toConsumableArray","saveExercise","_hoisted_18","showAllHistory","_hoisted_19","_component_el_timeline","exerciseHistory","history","index","_component_el_timeline_item","timestamp","formatDate","date","getHistoryItemType","_hoisted_20","_hoisted_21","_hoisted_22","score","totalScore","reviewHistory"],"sources":["E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\src\\components\\ExerciseRecommendation.vue"],"sourcesContent":["<!--\r\n  文件名: ExerciseRecommendation.vue\r\n  描述: 练习推荐模块组件，根据学生学习情况推荐适合的练习题\r\n  创建日期: 2023-06-15\r\n-->\r\n\r\n<template>\r\n  <div class=\"exercise-recommendation\">\r\n    <div class=\"module-header\">\r\n      <h3>推荐练习</h3>\r\n      <el-tooltip content=\"基于当前问题和您的学习情况，智能推荐相关练习题\" placement=\"top\">\r\n        <i class=\"el-icon-question\"></i>\r\n      </el-tooltip>\r\n    </div>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-state\">\r\n      <el-skeleton :rows=\"5\" animated />\r\n    </div>\r\n    \r\n    <div v-else-if=\"!currentProblem\" class=\"empty-state\">\r\n      <i class=\"el-icon-document\"></i>\r\n      <p>请选择一道题目以获取相关练习推荐</p>\r\n    </div>\r\n    \r\n    <template v-else>\r\n      <!-- 推荐策略选择 -->\r\n      <div class=\"recommendation-strategy\">\r\n        <span>推荐策略:</span>\r\n        <el-radio-group v-model=\"strategy\" size=\"mini\" @change=\"fetchExercises\">\r\n          <el-radio-button label=\"similar\">相似题目</el-radio-button>\r\n          <el-radio-button label=\"complementary\">互补知识</el-radio-button>\r\n          <el-radio-button label=\"adaptive\">自适应</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      \r\n      <!-- 难度选择 -->\r\n      <div class=\"difficulty-filter\">\r\n        <span>难度范围:</span>\r\n        <el-slider\r\n          v-model=\"difficultyRange\"\r\n          range\r\n          :min=\"1\"\r\n          :max=\"5\"\r\n          :step=\"1\"\r\n          :marks=\"difficultyMarks\"\r\n          @change=\"fetchExercises\"\r\n        ></el-slider>\r\n      </div>\r\n      \r\n      <!-- 练习列表 -->\r\n      <div class=\"exercises-container\">\r\n        <div v-if=\"recommendedExercises.length === 0\" class=\"no-exercises\">\r\n          <i class=\"el-icon-warning-outline\"></i>\r\n          <p>暂无符合条件的推荐练习</p>\r\n        </div>\r\n        \r\n        <el-card \r\n          v-for=\"exercise in recommendedExercises\" \r\n          :key=\"exercise.id\"\r\n          class=\"exercise-card\"\r\n          :body-style=\"{ padding: '12px' }\"\r\n          shadow=\"hover\"\r\n        >\r\n          <div class=\"exercise-header\">\r\n            <span class=\"exercise-title\">{{ exercise.title }}</span>\r\n            <div class=\"exercise-tags\">\r\n              <el-tag size=\"mini\" :type=\"getDifficultyType(exercise.difficulty)\">\r\n                {{ getDifficultyText(exercise.difficulty) }}\r\n              </el-tag>\r\n              <el-tag size=\"mini\" type=\"info\" v-if=\"exercise.type\">\r\n                {{ exercise.type }}\r\n              </el-tag>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"exercise-preview\" v-html=\"exercise.preview\"></div>\r\n          \r\n          <div class=\"exercise-footer\">\r\n            <div class=\"exercise-meta\">\r\n              <span v-if=\"exercise.recommendReason\" class=\"recommend-reason\">\r\n                <i class=\"el-icon-info\"></i>\r\n                {{ exercise.recommendReason }}\r\n              </span>\r\n              <span v-if=\"exercise.matchScore\" class=\"match-score\">\r\n                匹配度: {{ Math.round(exercise.matchScore * 100) }}%\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"exercise-actions\">\r\n              <el-button \r\n                type=\"primary\" \r\n                size=\"mini\" \r\n                @click=\"selectExercise(exercise)\"\r\n              >练习</el-button>\r\n              <el-button \r\n                type=\"text\" \r\n                size=\"mini\" \r\n                @click=\"saveExercise(exercise)\"\r\n              >收藏</el-button>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n      \r\n      <!-- 历史练习记录 -->\r\n      <div class=\"section-header\">\r\n        <span>最近练习</span>\r\n        <el-button type=\"text\" size=\"mini\" @click=\"showAllHistory\">查看全部</el-button>\r\n      </div>\r\n      \r\n      <div class=\"history-container\">\r\n        <el-timeline>\r\n          <el-timeline-item\r\n            v-for=\"(history, index) in exerciseHistory\"\r\n            :key=\"history.id\"\r\n            :timestamp=\"formatDate(history.date)\"\r\n            :type=\"getHistoryItemType(history)\"\r\n            :size=\"index === 0 ? 'large' : 'normal'\"\r\n            :hide-timestamp=\"false\"\r\n          >\r\n            <span class=\"history-title\">{{ history.title }}</span>\r\n            <div class=\"history-meta\">\r\n              <span class=\"history-score\">\r\n                得分: {{ history.score }}/{{ history.totalScore }}\r\n              </span>\r\n              <el-button \r\n                type=\"text\" \r\n                size=\"mini\" \r\n                @click=\"reviewHistory(history)\"\r\n              >复习</el-button>\r\n            </div>\r\n          </el-timeline-item>\r\n        </el-timeline>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ExerciseRecommendation',\r\n  \r\n  props: {\r\n    // 当前问题\r\n    currentProblem: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    \r\n    // 用户上下文\r\n    userContext: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      // 加载状态\r\n      loading: false,\r\n      \r\n      // 推荐策略\r\n      strategy: 'similar',\r\n      \r\n      // 难度范围\r\n      difficultyRange: [1, 3],\r\n      \r\n      // 难度标记\r\n      difficultyMarks: {\r\n        1: '简单',\r\n        2: '中等',\r\n        3: '困难',\r\n        4: '挑战',\r\n        5: '极难'\r\n      },\r\n      \r\n      // 推荐练习\r\n      recommendedExercises: [],\r\n      \r\n      // 练习历史\r\n      exerciseHistory: []\r\n    };\r\n  },\r\n  \r\n  watch: {\r\n    // 监听当前问题变化，更新推荐\r\n    currentProblem: {\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.fetchExercises();\r\n          this.fetchExerciseHistory();\r\n        } else {\r\n          this.recommendedExercises = [];\r\n          this.exerciseHistory = [];\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  \r\n  methods: {\r\n    // 获取推荐练习\r\n    async fetchExercises() {\r\n      if (!this.currentProblem) return;\r\n      \r\n      this.loading = true;\r\n      \r\n      try {\r\n        // 实际应用中应调用API获取推荐\r\n        // 这里使用模拟数据\r\n        await this.simulateFetch();\r\n      } catch (error) {\r\n        console.error('获取推荐练习失败', error);\r\n        this.$message.error('获取推荐练习失败');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // 获取练习历史\r\n    async fetchExerciseHistory() {\r\n      if (!this.currentProblem) return;\r\n      \r\n      try {\r\n        // 实际应用中应调用API获取历史\r\n        // 这里使用模拟数据\r\n        await this.simulateHistoryFetch();\r\n      } catch (error) {\r\n        console.error('获取练习历史失败', error);\r\n      }\r\n    },\r\n    \r\n    // 模拟获取推荐数据\r\n    async simulateFetch() {\r\n      // 模拟API延迟\r\n      await new Promise(resolve => setTimeout(resolve, 800));\r\n      \r\n      // 根据当前问题和策略生成模拟数据\r\n      const exercises = [];\r\n      \r\n      if (this.strategy === 'similar') {\r\n        // 相似题目推荐\r\n        exercises.push({\r\n          id: 'e1',\r\n          title: '相似题目 - 一元二次方程应用',\r\n          preview: '一个长方形的周长是20厘米，面积是24平方厘米，求这个长方形的长和宽。',\r\n          difficulty: 2,\r\n          type: '应用题',\r\n          recommendReason: '与当前问题使用相同解题方法',\r\n          matchScore: 0.92\r\n        });\r\n        \r\n        exercises.push({\r\n          id: 'e2',\r\n          title: '相似题目 - 因式分解',\r\n          preview: '分解因式：x² - 9',\r\n          difficulty: 1,\r\n          type: '计算题',\r\n          recommendReason: '与当前问题涉及相同知识点',\r\n          matchScore: 0.85\r\n        });\r\n      } else if (this.strategy === 'complementary') {\r\n        // 互补知识推荐\r\n        exercises.push({\r\n          id: 'e3',\r\n          title: '互补知识 - 判别式应用',\r\n          preview: '讨论方程 ax² + bx + c = 0 的根与判别式的关系。',\r\n          difficulty: 3,\r\n          type: '讨论题',\r\n          recommendReason: '补充您的弱点知识',\r\n          matchScore: 0.78\r\n        });\r\n        \r\n        exercises.push({\r\n          id: 'e4',\r\n          title: '互补知识 - 韦达定理',\r\n          preview: '已知一元二次方程 x² + px + q = 0 的两根为 α 和 β，求 α² + β²。',\r\n          difficulty: 3,\r\n          type: '计算题',\r\n          recommendReason: '拓展相关知识点',\r\n          matchScore: 0.75\r\n        });\r\n      } else if (this.strategy === 'adaptive') {\r\n        // 自适应推荐\r\n        exercises.push({\r\n          id: 'e5',\r\n          title: '自适应 - 配方法练习',\r\n          preview: '使用配方法解一元二次方程：x² - 6x + 8 = 0',\r\n          difficulty: 2,\r\n          type: '计算题',\r\n          recommendReason: '针对您的学习进度定制',\r\n          matchScore: 0.95\r\n        });\r\n        \r\n        exercises.push({\r\n          id: 'e6',\r\n          title: '自适应 - 一元二次方程综合',\r\n          preview: '解方程并验证：2x² - 7x + 3 = 0',\r\n          difficulty: this.userContext.proficiency?.algebra > 0.7 ? 3 : 2,\r\n          type: '综合题',\r\n          recommendReason: '基于您的能力水平推荐',\r\n          matchScore: 0.88\r\n        });\r\n      }\r\n      \r\n      // 根据难度范围过滤\r\n      this.recommendedExercises = exercises.filter(\r\n        ex => ex.difficulty >= this.difficultyRange[0] && ex.difficulty <= this.difficultyRange[1]\r\n      );\r\n    },\r\n    \r\n    // 模拟获取历史数据\r\n    async simulateHistoryFetch() {\r\n      // 模拟API延迟\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // 生成模拟历史数据\r\n      this.exerciseHistory = [\r\n        {\r\n          id: 'h1',\r\n          title: '一元二次方程综合练习',\r\n          date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2天前\r\n          score: 85,\r\n          totalScore: 100,\r\n          status: 'completed'\r\n        },\r\n        {\r\n          id: 'h2',\r\n          title: '因式分解专项训练',\r\n          date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000), // 5天前\r\n          score: 92,\r\n          totalScore: 100,\r\n          status: 'completed'\r\n        },\r\n        {\r\n          id: 'h3',\r\n          title: '二次函数图像分析',\r\n          date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 7天前\r\n          score: 78,\r\n          totalScore: 100,\r\n          status: 'completed'\r\n        }\r\n      ];\r\n    },\r\n    \r\n    // 选择练习\r\n    selectExercise(exercise) {\r\n      this.$emit('exercise-selected', exercise);\r\n    },\r\n    \r\n    // 收藏练习\r\n    saveExercise(exercise) {\r\n      // 实际应用中应调用API保存收藏\r\n      this.$message.success(`已收藏练习：${exercise.title}`);\r\n    },\r\n    \r\n    // 复习历史练习\r\n    reviewHistory(history) {\r\n      // 实际应用中应跳转到练习详情页\r\n      this.$message.info(`开始复习：${history.title}`);\r\n    },\r\n    \r\n    // 查看全部历史\r\n    showAllHistory() {\r\n      // 实际应用中应跳转到历史页面\r\n      this.$message.info('查看全部练习历史');\r\n    },\r\n    \r\n    // 获取难度类型\r\n    getDifficultyType(difficulty) {\r\n      const typeMap = {\r\n        1: 'success',\r\n        2: '',\r\n        3: 'warning',\r\n        4: 'danger',\r\n        5: 'danger'\r\n      };\r\n      return typeMap[difficulty] || '';\r\n    },\r\n    \r\n    // 获取难度文本\r\n    getDifficultyText(difficulty) {\r\n      return this.difficultyMarks[difficulty] || '未知';\r\n    },\r\n    \r\n    // 获取历史项目类型\r\n    getHistoryItemType(history) {\r\n      if (history.score / history.totalScore >= 0.9) return 'success';\r\n      if (history.score / history.totalScore >= 0.6) return 'warning';\r\n      return 'danger';\r\n    },\r\n    \r\n    // 格式化日期\r\n    formatDate(date) {\r\n      if (!date) return '';\r\n      \r\n      const now = new Date();\r\n      const diff = now - date;\r\n      const day = 24 * 60 * 60 * 1000;\r\n      \r\n      if (diff < day) {\r\n        return '今天';\r\n      } else if (diff < 2 * day) {\r\n        return '昨天';\r\n      } else if (diff < 7 * day) {\r\n        return `${Math.floor(diff / day)}天前`;\r\n      } else {\r\n        const d = new Date(date);\r\n        const month = String(d.getMonth() + 1).padStart(2, '0');\r\n        const day = String(d.getDate()).padStart(2, '0');\r\n        return `${month}-${day}`;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.exercise-recommendation {\r\n  height: 100%;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: hidden;\r\n}\r\n\r\n.module-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.module-header h3 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  color: #303133;\r\n  margin-right: 8px;\r\n}\r\n\r\n.module-header i {\r\n  color: #909399;\r\n  cursor: help;\r\n}\r\n\r\n.loading-state {\r\n  padding: 10px;\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 150px;\r\n  color: #909399;\r\n}\r\n\r\n.empty-state i {\r\n  font-size: 36px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.recommendation-strategy {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.recommendation-strategy span {\r\n  margin-right: 10px;\r\n  color: #606266;\r\n}\r\n\r\n.difficulty-filter {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.difficulty-filter span {\r\n  color: #606266;\r\n}\r\n\r\n.exercises-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.no-exercises {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100px;\r\n  color: #909399;\r\n}\r\n\r\n.no-exercises i {\r\n  font-size: 24px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.exercise-card {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.exercise-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.exercise-title {\r\n  font-weight: 500;\r\n  color: #303133;\r\n}\r\n\r\n.exercise-tags {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.exercise-preview {\r\n  margin-bottom: 10px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  max-height: 60px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.exercise-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.exercise-meta {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.recommend-reason {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.recommend-reason i {\r\n  margin-right: 5px;\r\n}\r\n\r\n.exercise-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 15px 0 10px;\r\n  padding-bottom: 5px;\r\n  border-bottom: 1px solid #ebeef5;\r\n  font-weight: 500;\r\n  color: #303133;\r\n}\r\n\r\n.history-container {\r\n  overflow-y: auto;\r\n  max-height: 200px;\r\n}\r\n\r\n.history-title {\r\n  font-weight: 500;\r\n  color: #303133;\r\n}\r\n\r\n.history-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}