{"remainingRequest":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\babel-loader\\lib\\index.js!E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\src\\components\\KnowledgeRecommendation.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\src\\components\\KnowledgeRecommendation.vue","mtime":1755495374849},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\babel.config.js","mtime":1749988660293},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749988910140},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1749988912220},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749988910140},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1749988913356}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLml0ZXJhdG9yLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLml0ZXJhdG9yLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmRpZmZlcmVuY2UudjIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuaW50ZXJzZWN0aW9uLnYyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmlzLWRpc2pvaW50LWZyb20udjIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuaXMtc3Vic2V0LW9mLnYyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmlzLXN1cGVyc2V0LW9mLnYyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LnN5bW1ldHJpYy1kaWZmZXJlbmNlLnYyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LnVuaW9uLnYyLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdLbm93bGVkZ2VSZWNvbW1lbmRhdGlvbicsCiAgcHJvcHM6IHsKICAgIC8vIOW9k+WJjemXrumimAogICAgY3VycmVudFByb2JsZW06IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgLy8g55So5oi35LiK5LiL5paHCiAgICB1c2VyQ29udGV4dDogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g5Yqg6L2954q25oCBCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICAvLyDnn6Xor4bngrnmjqjojZAKICAgICAgcmVjb21tZW5kZWRDb25jZXB0czogW10sCiAgICAgIC8vIOWxleW8gOeahOamguW/tQogICAgICBhY3RpdmVDb25jZXB0TmFtZXM6IFtdLAogICAgICAvLyDnn6Xor4blm77osLHmmL7npLoKICAgICAgc2hvd0tub3dsZWRnZUdyYXBoOiB0cnVlLAogICAgICAvLyDnn6Xor4blm77osLHlrp7kvosKICAgICAgZ3JhcGg6IG51bGwsCiAgICAgIGdyYXBoWm9vbTogMSwKICAgICAgLy8g5a2m5Lmg6Lev5b6ECiAgICAgIGxlYXJuaW5nUGF0aDogW10sCiAgICAgIC8vIOW8seeCueefpeivhueCuQogICAgICB3ZWFrUG9pbnRzOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICAvLyDnm5HlkKzlvZPliY3pl67popjlj5jljJbvvIzmm7TmlrDmjqjojZAKICAgIGN1cnJlbnRQcm9ibGVtOiB7CiAgICAgIGhhbmRsZXIobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgICBjb25zb2xlLmxvZygnS25vd2xlZGdlUmVjb21tZW5kYXRpb24gLSBjdXJyZW50UHJvYmxlbSBjaGFuZ2VkOicsIHsKICAgICAgICAgIG5ld1ZhbDogbmV3VmFsID8gbmV3VmFsLmlkIDogbnVsbCwKICAgICAgICAgIG9sZFZhbDogb2xkVmFsID8gb2xkVmFsLmlkIDogbnVsbCwKICAgICAgICAgIG5ld0NvbnRlbnQ6IG5ld1ZhbCA/IG5ld1ZhbC5jb250ZW50IDogbnVsbAogICAgICAgIH0pOwogICAgICAgIGlmIChuZXdWYWwpIHsKICAgICAgICAgIHRoaXMuZmV0Y2hSZWNvbW1lbmRhdGlvbnMoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5yZWNvbW1lbmRlZENvbmNlcHRzID0gW107CiAgICAgICAgICB0aGlzLmxlYXJuaW5nUGF0aCA9IFtdOwogICAgICAgICAgdGhpcy53ZWFrUG9pbnRzID0gW107CiAgICAgICAgfQogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0sCiAgICAvLyDnm5HlkKznn6Xor4blm77osLHmmL7npLrnirbmgIEKICAgIHNob3dLbm93bGVkZ2VHcmFwaDogewogICAgICBoYW5kbGVyKG5ld1ZhbCkgewogICAgICAgIGNvbnNvbGUubG9nKCdLbm93bGVkZ2VSZWNvbW1lbmRhdGlvbiAtIHNob3dLbm93bGVkZ2VHcmFwaCBjaGFuZ2VkOicsIG5ld1ZhbCk7CiAgICAgICAgaWYgKG5ld1ZhbCkgewogICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgICBjb25zb2xlLmxvZygnS25vd2xlZGdlUmVjb21tZW5kYXRpb24gLSDlh4blpIfliJ3lp4vljJbnn6Xor4blm77osLEnKTsKICAgICAgICAgICAgdGhpcy5pbml0S25vd2xlZGdlR3JhcGgoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlIC8vIOeri+WNs+aJp+ihjOS4gOasoQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8g6I635Y+W55+l6K+G54K55o6o6I2QCiAgICBhc3luYyBmZXRjaFJlY29tbWVuZGF0aW9ucygpIHsKICAgICAgY29uc29sZS5sb2coJ0tub3dsZWRnZVJlY29tbWVuZGF0aW9uIC0gZmV0Y2hSZWNvbW1lbmRhdGlvbnMg5byA5aeLJyk7CiAgICAgIGNvbnNvbGUubG9nKCdLbm93bGVkZ2VSZWNvbW1lbmRhdGlvbiAtIGN1cnJlbnRQcm9ibGVtOicsIHRoaXMuY3VycmVudFByb2JsZW0pOwogICAgICBpZiAoIXRoaXMuY3VycmVudFByb2JsZW0pIHsKICAgICAgICBjb25zb2xlLmxvZygnS25vd2xlZGdlUmVjb21tZW5kYXRpb24gLSBjdXJyZW50UHJvYmxlbSDkuLrnqbrvvIzpgIDlh7onKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdHJ5IHsKICAgICAgICAvLyDosIPnlKhBUEnojrflj5bnn6Xor4bngrkKICAgICAgICBjb25zdCBrbm93bGVkZ2VTZXJ2aWNlID0gYXdhaXQgaW1wb3J0KCcuLi9zZXJ2aWNlcy9rbm93bGVkZ2VTZXJ2aWNlJyk7CgogICAgICAgIC8vIOWmguaenOmimOebruaciUlE77yM6YCa6L+HSUTojrflj5bnn6Xor4bngrkKICAgICAgICBpZiAodGhpcy5jdXJyZW50UHJvYmxlbS5pZCkgewogICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBrbm93bGVkZ2VTZXJ2aWNlLmdldFF1ZXN0aW9uS25vd2xlZGdlUG9pbnRzKHRoaXMuY3VycmVudFByb2JsZW0uaWQpOwogICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgJiYgcmVzcG9uc2UuZGF0YS5rbm93bGVkZ2VfcG9pbnRzKSB7CiAgICAgICAgICAgIHRoaXMucHJvY2Vzc0tub3dsZWRnZVBvaW50cyhyZXNwb25zZS5kYXRhLmtub3dsZWRnZV9wb2ludHMpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8g5aaC5p6c5rKh5pyJ6L+U5Zue55+l6K+G54K577yM5YiZ6YCa6L+H6aKY55uu5YaF5a656I635Y+WCiAgICAgICAgICAgIGNvbnN0IHRleHRSZXNwb25zZSA9IGF3YWl0IGtub3dsZWRnZVNlcnZpY2UuZ2V0S25vd2xlZGdlUG9pbnRzQnlUZXh0KHRoaXMuY3VycmVudFByb2JsZW0uY29udGVudCk7CiAgICAgICAgICAgIGlmICh0ZXh0UmVzcG9uc2UuZGF0YSAmJiB0ZXh0UmVzcG9uc2UuZGF0YS5rbm93bGVkZ2VfcG9pbnRzKSB7CiAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzS25vd2xlZGdlUG9pbnRzKHRleHRSZXNwb25zZS5kYXRhLmtub3dsZWRnZV9wb2ludHMpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIOWmguaenEFQSeayoeaciei/lOWbnuefpeivhueCue+8jOS9v+eUqOaooeaLn+aVsOaNrgogICAgICAgICAgICAgIGF3YWl0IHRoaXMuc2ltdWxhdGVGZXRjaCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmN1cnJlbnRQcm9ibGVtLmNvbnRlbnQpIHsKICAgICAgICAgIC8vIOWmguaenOmimOebruayoeaciUlE5L2G5pyJ5YaF5a6577yM6YCa6L+H5YaF5a656I635Y+W55+l6K+G54K5CiAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGtub3dsZWRnZVNlcnZpY2UuZ2V0S25vd2xlZGdlUG9pbnRzQnlUZXh0KHRoaXMuY3VycmVudFByb2JsZW0uY29udGVudCk7CiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YSAmJiByZXNwb25zZS5kYXRhLmtub3dsZWRnZV9wb2ludHMpIHsKICAgICAgICAgICAgdGhpcy5wcm9jZXNzS25vd2xlZGdlUG9pbnRzKHJlc3BvbnNlLmRhdGEua25vd2xlZGdlX3BvaW50cyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyDlpoLmnpxBUEnmsqHmnInov5Tlm57nn6Xor4bngrnvvIzkvb/nlKjmqKHmi5/mlbDmja4KICAgICAgICAgICAgYXdhaXQgdGhpcy5zaW11bGF0ZUZldGNoKCk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIOWmguaenOayoeaciUlE5ZKM5YaF5a6577yM5L2/55So5qih5ouf5pWw5o2uCiAgICAgICAgICBhd2FpdCB0aGlzLnNpbXVsYXRlRmV0Y2goKTsKICAgICAgICB9CgogICAgICAgIC8vIOWIneWni+WMluefpeivhuWbvuiwsQogICAgICAgIGNvbnNvbGUubG9nKCdLbm93bGVkZ2VSZWNvbW1lbmRhdGlvbiAtIOajgOafpeaYr+WQpumcgOimgeWIneWni+WMluefpeivhuWbvuiwsScpOwogICAgICAgIGNvbnNvbGUubG9nKCdLbm93bGVkZ2VSZWNvbW1lbmRhdGlvbiAtIHNob3dLbm93bGVkZ2VHcmFwaDonLCB0aGlzLnNob3dLbm93bGVkZ2VHcmFwaCk7CiAgICAgICAgaWYgKHRoaXMuc2hvd0tub3dsZWRnZUdyYXBoKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnS25vd2xlZGdlUmVjb21tZW5kYXRpb24gLSDlh4blpIflnKhuZXh0VGlja+S4reWIneWni+WMluefpeivhuWbvuiwsScpOwogICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgICBjb25zb2xlLmxvZygnS25vd2xlZGdlUmVjb21tZW5kYXRpb24gLSBuZXh0VGlja+S4reiwg+eUqGluaXRLbm93bGVkZ2VHcmFwaCcpOwogICAgICAgICAgICB0aGlzLmluaXRLbm93bGVkZ2VHcmFwaCgpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPluefpeivhueCueaOqOiNkOWksei0pScsIGVycm9yKTsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bnn6Xor4bngrnmjqjojZDlpLHotKXvvIzkvb/nlKjmnKzlnLDmlbDmja4nKTsKICAgICAgICAvLyDlh7rplJnml7bkvb/nlKjmqKHmi5/mlbDmja4KICAgICAgICBhd2FpdCB0aGlzLnNpbXVsYXRlRmV0Y2goKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIC8vIOWkhOeQhkFQSei/lOWbnueahOefpeivhueCueaVsOaNrgogICAgcHJvY2Vzc0tub3dsZWRnZVBvaW50cyhrbm93bGVkZ2VQb2ludHMpIHsKICAgICAgaWYgKCFrbm93bGVkZ2VQb2ludHMgfHwga25vd2xlZGdlUG9pbnRzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHRoaXMucmVjb21tZW5kZWRDb25jZXB0cyA9IFtdOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgLy8g5bCG5ZCO56uv55+l6K+G54K55pWw5o2u6L2s5o2i5Li65YmN56uv5omA6ZyA5qC85byPCiAgICAgIHRoaXMucmVjb21tZW5kZWRDb25jZXB0cyA9IGtub3dsZWRnZVBvaW50cy5tYXAoa3AgPT4gKHsKICAgICAgICBpZDoga3AuaWQsCiAgICAgICAgdGl0bGU6IGtwLm5hbWUsCiAgICAgICAgZGVzY3JpcHRpb246IGtwLmRlc2NyaXB0aW9uIHx8ICfmmoLml6Dmj4/ov7AnLAogICAgICAgIGV4YW1wbGVzOiBrcC5leGFtcGxlcyA/IGtwLmV4YW1wbGVzLm1hcChleCA9PiBleC5wcm9ibGVtICsgJ1xuJyArIGV4LnNvbHV0aW9uKSA6IFtdLAogICAgICAgIGZvcm11bGFzOiBrcC5rZXlfcG9pbnRzIHx8IFtdLAogICAgICAgIHJlbGV2YW5jZTogMC45CiAgICAgIH0pKTsKCiAgICAgIC8vIOeUn+aIkOWtpuS5oOi3r+W+hAogICAgICB0aGlzLmdlbmVyYXRlTGVhcm5pbmdQYXRoKGtub3dsZWRnZVBvaW50cyk7CgogICAgICAvLyDmo4Dmn6XnlKjmiLflvLHngrkKICAgICAgdGhpcy5jaGVja1dlYWtQb2ludHMoa25vd2xlZGdlUG9pbnRzKTsKCiAgICAgIC8vIOm7mOiupOWxleW8gOesrOS4gOS4quamguW/tQogICAgICBpZiAodGhpcy5yZWNvbW1lbmRlZENvbmNlcHRzLmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLmFjdGl2ZUNvbmNlcHROYW1lcyA9IFt0aGlzLnJlY29tbWVuZGVkQ29uY2VwdHNbMF0udGl0bGVdOwogICAgICB9CiAgICB9LAogICAgLy8g55Sf5oiQ5a2m5Lmg6Lev5b6ECiAgICBnZW5lcmF0ZUxlYXJuaW5nUGF0aChrbm93bGVkZ2VQb2ludHMpIHsKICAgICAgdGhpcy5sZWFybmluZ1BhdGggPSBbXTsKCiAgICAgIC8vIOagueaNruefpeivhueCueeahOWFiOWGs+adoeS7tueUn+aIkOWtpuS5oOi3r+W+hAogICAgICBmb3IgKGNvbnN0IGtwIG9mIGtub3dsZWRnZVBvaW50cykgewogICAgICAgIGlmIChrcC5wcmVyZXF1aXNpdGVzICYmIGtwLnByZXJlcXVpc2l0ZXMubGVuZ3RoID4gMCkgewogICAgICAgICAgZm9yIChjb25zdCBwcmVyZXEgb2Yga3AucHJlcmVxdWlzaXRlcykgewogICAgICAgICAgICB0aGlzLmxlYXJuaW5nUGF0aC5wdXNoKHsKICAgICAgICAgICAgICBpZDogJ3AnICsgTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpLAogICAgICAgICAgICAgIHRpdGxlOiBwcmVyZXEsCiAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGDlrabkuaAgJHtwcmVyZXF9IOeahOWfuuacrOamguW/teWSjOW6lOeUqGAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyDmt7vliqDlvZPliY3nn6Xor4bngrkKICAgICAgICB0aGlzLmxlYXJuaW5nUGF0aC5wdXNoKHsKICAgICAgICAgIGlkOiAncCcgKyBrcC5pZCwKICAgICAgICAgIHRpdGxlOiBrcC5uYW1lLAogICAgICAgICAgZGVzY3JpcHRpb246IGtwLmRlc2NyaXB0aW9uIHx8IGDmjozmj6EgJHtrcC5uYW1lfSDnmoTmoLjlv4PlhoXlrrlgCiAgICAgICAgfSk7CgogICAgICAgIC8vIOa3u+WKoOebuOWFs+amguW/tQogICAgICAgIGlmIChrcC5yZWxhdGVkX2NvbmNlcHRzICYmIGtwLnJlbGF0ZWRfY29uY2VwdHMubGVuZ3RoID4gMCkgewogICAgICAgICAgZm9yIChjb25zdCByZWxhdGVkIG9mIGtwLnJlbGF0ZWRfY29uY2VwdHMpIHsKICAgICAgICAgICAgdGhpcy5sZWFybmluZ1BhdGgucHVzaCh7CiAgICAgICAgICAgICAgaWQ6ICdwJyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KSwKICAgICAgICAgICAgICB0aXRsZTogcmVsYXRlZCwKICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogYOWtpuS5oCAke3JlbGF0ZWR9IOS4jiAke2twLm5hbWV9IOeahOWFs+iBlGAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICAvLyDljrvph40KICAgICAgY29uc3QgdW5pcXVlUGF0aHMgPSBbXTsKICAgICAgY29uc3Qgc2VlbiA9IG5ldyBTZXQoKTsKICAgICAgZm9yIChjb25zdCBwYXRoIG9mIHRoaXMubGVhcm5pbmdQYXRoKSB7CiAgICAgICAgaWYgKCFzZWVuLmhhcyhwYXRoLnRpdGxlKSkgewogICAgICAgICAgc2Vlbi5hZGQocGF0aC50aXRsZSk7CiAgICAgICAgICB1bmlxdWVQYXRocy5wdXNoKHBhdGgpOwogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLmxlYXJuaW5nUGF0aCA9IHVuaXF1ZVBhdGhzOwogICAgfSwKICAgIC8vIOajgOafpeeUqOaIt+W8seeCuQogICAgY2hlY2tXZWFrUG9pbnRzKGtub3dsZWRnZVBvaW50cykgewogICAgICB0aGlzLndlYWtQb2ludHMgPSBbXTsKCiAgICAgIC8vIOWmguaenOeUqOaIt+S4iuS4i+aWh+S4reacieW8seeCueaVsOaNrgogICAgICBpZiAodGhpcy51c2VyQ29udGV4dCAmJiB0aGlzLnVzZXJDb250ZXh0LndlYWtQb2ludHMpIHsKICAgICAgICBmb3IgKGNvbnN0IGtwIG9mIGtub3dsZWRnZVBvaW50cykgewogICAgICAgICAgY29uc3Qgd2Vha1BvaW50ID0gdGhpcy51c2VyQ29udGV4dC53ZWFrUG9pbnRzLmZpbmQod3AgPT4gd3AubmFtZSA9PT0ga3AubmFtZSB8fCBrcC5yZWxhdGVkX2NvbmNlcHRzICYmIGtwLnJlbGF0ZWRfY29uY2VwdHMuaW5jbHVkZXMod3AubmFtZSkpOwogICAgICAgICAgaWYgKHdlYWtQb2ludCkgewogICAgICAgICAgICB0aGlzLndlYWtQb2ludHMucHVzaCh7CiAgICAgICAgICAgICAgaWQ6ICd3JyArIGtwLmlkLAogICAgICAgICAgICAgIHRpdGxlOiBrcC5uYW1lLAogICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBg5oKo5Zyo5q2k55+l6K+G54K555qE5o6M5o+h56iL5bqm6L6D5byx77yM5bu66K6u5aSN5Lmg44CCYAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIC8vIOWmguaenOefpeivhueCueacieW4uOingemUmeivr++8jOS5n+a3u+WKoOWIsOW8seeCueS4rQogICAgICBmb3IgKGNvbnN0IGtwIG9mIGtub3dsZWRnZVBvaW50cykgewogICAgICAgIGlmIChrcC5jb21tb25fZXJyb3JzICYmIGtwLmNvbW1vbl9lcnJvcnMubGVuZ3RoID4gMCkgewogICAgICAgICAgdGhpcy53ZWFrUG9pbnRzLnB1c2goewogICAgICAgICAgICBpZDogJ3cnICsga3AuaWQsCiAgICAgICAgICAgIHRpdGxlOiBrcC5uYW1lICsgJyAtIOW4uOingemUmeivrycsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBrcC5jb21tb25fZXJyb3JzLmpvaW4oJ1xuJykKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIC8vIOaooeaLn+iOt+WPluaVsOaNrgogICAgYXN5bmMgc2ltdWxhdGVGZXRjaCgpIHsKICAgICAgLy8g5qih5oufQVBJ5bu26L+fCiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCA4MDApKTsKCiAgICAgIC8vIOagueaNruW9k+WJjemXrumimOeUn+aIkOaooeaLn+aVsOaNrgogICAgICBpZiAodGhpcy5jdXJyZW50UHJvYmxlbS50eXBlID09PSAnYWxnZWJyYScpIHsKICAgICAgICB0aGlzLnJlY29tbWVuZGVkQ29uY2VwdHMgPSBbewogICAgICAgICAgaWQ6ICdjMScsCiAgICAgICAgICB0aXRsZTogJ+S4gOWFg+S6jOasoeaWueeoiycsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJ+S4gOWFg+S6jOasoeaWueeoi+aYr+aMh+WQq+acieS4gOS4quacquefpeaVsO+8jOW5tuS4lOacquefpeaVsOeahOacgOmrmOasoeaVsOS4ujLnmoTmlrnnqIvjgILkuIDoiKzlvaLlvI/kuLrvvJpheMKyICsgYnggKyBjID0gMO+8jOWFtuS4rWHjgIFi44CBY+aYr+WunuaVsO+8jOS4lGEg4omgIDDjgIInLAogICAgICAgICAgZXhhbXBsZXM6IFsn5L6L5aaC77yaM3jCsiAtIDV4ICsgMiA9IDAnLCAn5L6L5aaC77yaeMKyIC0gNCA9IDAnXSwKICAgICAgICAgIGZvcm11bGFzOiBbJ+WIpOWIq+W8j++8ms6UID0gYsKyIC0gNGFjJywgJ+axguagueWFrOW8j++8mnggPSAoLWIgwrEg4oiaKGLCsiAtIDRhYykpIC8gKDJhKSddLAogICAgICAgICAgcmVsZXZhbmNlOiAwLjk1CiAgICAgICAgfSwgewogICAgICAgICAgaWQ6ICdjMicsCiAgICAgICAgICB0aXRsZTogJ+WboOW8j+WIhuinoycsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJ+WboOW8j+WIhuino+aYr+WwhuS4gOS4quWkmumhueW8j+ihqOekuuaIkOiLpeW5suS4quWkmumhueW8j+eahOS5mOenr+eahOW9ouW8j+OAguW4uOeUqOaWueazleWMheaLrOaPkOWPluWFrOWboOW8j+OAgei/kOeUqOWFrOW8j+azleOAgeWIhue7hOWIhuino+azleetieOAgicsCiAgICAgICAgICBleGFtcGxlczogWyfkvovlpoLvvJp4wrIgLSA0ID0gKHggLSAyKSh4ICsgMiknLCAn5L6L5aaC77yaeMKyICsgMnggKyAxID0gKHggKyAxKcKyJ10sCiAgICAgICAgICBmb3JtdWxhczogWyflubPmlrnlt67lhazlvI/vvJphwrIgLSBiwrIgPSAoYSAtIGIpKGEgKyBiKScsICflrozlhajlubPmlrnlhazlvI/vvJphwrIgKyAyYWIgKyBiwrIgPSAoYSArIGIpwrInLCAnYcKyIC0gMmFiICsgYsKyID0gKGEgLSBiKcKyJ10sCiAgICAgICAgICByZWxldmFuY2U6IDAuODUKICAgICAgICB9LCB7CiAgICAgICAgICBpZDogJ2MzJywKICAgICAgICAgIHRpdGxlOiAn6YWN5pa55rOVJywKICAgICAgICAgIGRlc2NyaXB0aW9uOiAn6YWN5pa55rOV5piv6Kej5LiA5YWD5LqM5qyh5pa556iL55qE5LiA56eN5pa55rOV77yM6YCa6L+H5oGw5b2T5Zyw5Y+Y5b2i77yM5L2/5pa556iL5Lit55qE5LqM5qyh6aG55ZKM5LiA5qyh6aG55Y+Y5oiQ5LiA5Liq5a6M5YWo5bmz5pa55byP44CCJywKICAgICAgICAgIGV4YW1wbGVzOiBbJ+S+i+Wmgu+8muWwhnjCsiArIDZ4ICsgNSA9IDDlj5jlvaLkuLooeCArIDMpwrIgPSA077yM54S25ZCO5rGC6KejJ10sCiAgICAgICAgICBmb3JtdWxhczogWyfphY3mlrnlhazlvI/vvJp4wrIgKyBweCA9IHjCsiArIHB4ICsgKHAvMinCsiAtIChwLzIpwrIgPSAoeCArIHAvMinCsiAtIChwLzIpwrInXSwKICAgICAgICAgIHJlbGV2YW5jZTogMC43OAogICAgICAgIH1dOwogICAgICAgIHRoaXMubGVhcm5pbmdQYXRoID0gW3sKICAgICAgICAgIGlkOiAncDEnLAogICAgICAgICAgdGl0bGU6ICfkuIDlhYPkuozmrKHmlrnnqIvnmoTmpoLlv7UnLAogICAgICAgICAgZGVzY3JpcHRpb246ICfkuobop6PkuIDlhYPkuozmrKHmlrnnqIvnmoTlrprkuYnlkozkuIDoiKzlvaLlvI8nCiAgICAgICAgfSwgewogICAgICAgICAgaWQ6ICdwMicsCiAgICAgICAgICB0aXRsZTogJ+WboOW8j+WIhuino+azleino+aWueeoiycsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJ+aOjOaPoeWIqeeUqOWboOW8j+WIhuino+ino+S4gOWFg+S6jOasoeaWueeoiycKICAgICAgICB9LCB7CiAgICAgICAgICBpZDogJ3AzJywKICAgICAgICAgIHRpdGxlOiAn6YWN5pa55rOV6Kej5pa556iLJywKICAgICAgICAgIGRlc2NyaXB0aW9uOiAn5a2m5Lmg6YWN5pa55rOV55qE5Z+65pys5q2l6aqk5ZKM5bqU55SoJwogICAgICAgIH0sIHsKICAgICAgICAgIGlkOiAncDQnLAogICAgICAgICAgdGl0bGU6ICflhazlvI/ms5Xop6PmlrnnqIsnLAogICAgICAgICAgZGVzY3JpcHRpb246ICfmjozmj6HlubbngbXmtLvov5DnlKjmsYLmoLnlhazlvI8nCiAgICAgICAgfV07CiAgICAgICAgdGhpcy53ZWFrUG9pbnRzID0gW3sKICAgICAgICAgIGlkOiAndzEnLAogICAgICAgICAgdGl0bGU6ICfliKTliKvlvI/nmoTlupTnlKgnLAogICAgICAgICAgZGVzY3JpcHRpb246ICfmoLnmja7ljoblj7LlrabkuaDorrDlvZXvvIzmgqjlnKjkvb/nlKjliKTliKvlvI/liKTmlq3mlrnnqIvmoLnnmoTmg4XlhrXml7blrZjlnKjlm7Dpmr4nCiAgICAgICAgfV07CiAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW50UHJvYmxlbS50eXBlID09PSAnZ2VvbWV0cnknKSB7CiAgICAgICAgLy8g5Li65Yeg5L2V6Zeu6aKY55Sf5oiQ5LiN5ZCM55qE5o6o6I2QCiAgICAgICAgdGhpcy5yZWNvbW1lbmRlZENvbmNlcHRzID0gW3sKICAgICAgICAgIGlkOiAnYzQnLAogICAgICAgICAgdGl0bGU6ICfnm7jkvLzkuInop5LlvaInLAogICAgICAgICAgZGVzY3JpcHRpb246ICfnm7jkvLzkuInop5LlvaLmmK/mjIflvaLnirbnm7jlkIzkvYblpKflsI/lj6/og73kuI3lkIznmoTkuInop5LlvaLjgILkuKTkuKrkuInop5LlvaLnm7jkvLzvvIzlvZPkuJTku4XlvZPlroPku6znmoTlr7nlupTop5Lnm7jnrYnvvIzlr7nlupTovrnmiJDmr5TkvovjgIInLAogICAgICAgICAgZXhhbXBsZXM6IFsn5L6L5aaC77ya5Lik5Liq5LiJ6KeS5b2i77yM5aaC5p6c5pyJ5Lik5Liq6KeS55u4562J77yM5YiZ6L+Z5Lik5Liq5LiJ6KeS5b2i55u45Ly8J10sCiAgICAgICAgICBmb3JtdWxhczogWyfnm7jkvLzkuInop5LlvaLnmoTlr7nlupTovrnmiJDmr5TkvovvvJphL2FcJyA9IGIvYlwnID0gYy9jXCcnLCAn55u45Ly85LiJ6KeS5b2i55qE6Z2i56ev5q+U562J5LqO5a+55bqU6L656ZW/5q+U55qE5bmz5pa577yaUy9TXCcgPSAoYS9hXCcpwrInXSwKICAgICAgICAgIHJlbGV2YW5jZTogMC45MgogICAgICAgIH0KICAgICAgICAvLyDlhbbku5blh6DkvZXmpoLlv7UuLi4KICAgICAgICBdOwoKICAgICAgICAvLyDlhbbku5blh6DkvZXnm7jlhbPmlbDmja4uLi4KICAgICAgfSBlbHNlIHsKICAgICAgICAvLyDpu5jorqTmjqjojZAKICAgICAgICB0aGlzLnJlY29tbWVuZGVkQ29uY2VwdHMgPSBbewogICAgICAgICAgaWQ6ICdjNScsCiAgICAgICAgICB0aXRsZTogJ+WfuuacrOaVsOWtpuamguW/tScsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJ+mSiOWvueW9k+WJjemXrumimOeahOWfuuacrOaVsOWtpuamguW/teS7i+e7jScsCiAgICAgICAgICBleGFtcGxlczogWyfnpLrkvovpl67popgxJywgJ+ekuuS+i+mXrumimDInXSwKICAgICAgICAgIGZvcm11bGFzOiBbJ+ebuOWFs+WFrOW8jzEnLCAn55u45YWz5YWs5byPMiddLAogICAgICAgICAgcmVsZXZhbmNlOiAwLjc1CiAgICAgICAgfV07CiAgICAgIH0KCiAgICAgIC8vIOagueaNrueUqOaIt+S4iuS4i+aWh+S4quaAp+WMluaOqOiNkAogICAgICBpZiAodGhpcy51c2VyQ29udGV4dC53ZWFrUG9pbnRzICYmIHRoaXMudXNlckNvbnRleHQud2Vha1BvaW50cy5sZW5ndGggPiAwKSB7CiAgICAgICAgLy8g5re75Yqg55So5oi35byx54K555u45YWz55qE55+l6K+G54K5CiAgICAgICAgdGhpcy53ZWFrUG9pbnRzID0gdGhpcy51c2VyQ29udGV4dC53ZWFrUG9pbnRzLm1hcCh3cCA9PiAoewogICAgICAgICAgaWQ6IGB3JHt3cC5pZH1gLAogICAgICAgICAgdGl0bGU6IHdwLm5hbWUsCiAgICAgICAgICBkZXNjcmlwdGlvbjogYOaCqOWcqOatpOefpeivhueCueeahOaOjOaPoeeoi+W6pui+g+W8se+8jOW7uuiuruWkjeS5oOOAguaOjOaPoeW6pjogJHt3cC5wcm9maWNpZW5jeX0lYAogICAgICAgIH0pKTsKICAgICAgfQoKICAgICAgLy8g6ZqP5py65Yaz5a6a5piv5ZCm5bGV5byA56ys5LiA5Liq5qaC5b+1CiAgICAgIGlmICh0aGlzLnJlY29tbWVuZGVkQ29uY2VwdHMubGVuZ3RoID4gMCAmJiBNYXRoLnJhbmRvbSgpID4gMC41KSB7CiAgICAgICAgdGhpcy5hY3RpdmVDb25jZXB0TmFtZXMgPSBbdGhpcy5yZWNvbW1lbmRlZENvbmNlcHRzWzBdLnRpdGxlXTsKICAgICAgfQogICAgfSwKICAgIC8vIOWIneWni+WMluefpeivhuWbvuiwseWPr+inhuWMlgogICAgYXN5bmMgaW5pdEtub3dsZWRnZUdyYXBoKCkgewogICAgICBjb25zb2xlLmxvZygnS25vd2xlZGdlUmVjb21tZW5kYXRpb24gLSBpbml0S25vd2xlZGdlR3JhcGgg5byA5aeLJyk7CiAgICAgIGNvbnNvbGUubG9nKCdLbm93bGVkZ2VSZWNvbW1lbmRhdGlvbiAtIGtub3dsZWRnZUdyYXBoUmVmOicsIHRoaXMuJHJlZnMua25vd2xlZGdlR3JhcGhSZWYpOwogICAgICBjb25zb2xlLmxvZygnS25vd2xlZGdlUmVjb21tZW5kYXRpb24gLSByZWNvbW1lbmRlZENvbmNlcHRzOicsIHRoaXMucmVjb21tZW5kZWRDb25jZXB0cyk7CiAgICAgIGlmICghdGhpcy4kcmVmcy5rbm93bGVkZ2VHcmFwaFJlZikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0tub3dsZWRnZVJlY29tbWVuZGF0aW9uIC0ga25vd2xlZGdlR3JhcGhSZWYg5LiN5a2Y5ZyoJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRyeSB7CiAgICAgICAgY29uc29sZS5sb2coJ0tub3dsZWRnZVJlY29tbWVuZGF0aW9uIC0g5byA5aeL5a+85YWlRUNoYXJ0cycpOwogICAgICAgIC8vIOWKqOaAgeWvvOWFpUVDaGFydHMKICAgICAgICBjb25zdCBlY2hhcnRzID0gYXdhaXQgaW1wb3J0KCdlY2hhcnRzJyk7CiAgICAgICAgY29uc29sZS5sb2coJ0tub3dsZWRnZVJlY29tbWVuZGF0aW9uIC0gRUNoYXJ0c+WvvOWFpeaIkOWKnycpOwoKICAgICAgICAvLyDplIDmr4HkuYvliY3nmoTlm77ooajlrp7kvosKICAgICAgICBpZiAodGhpcy5ncmFwaCkgewogICAgICAgICAgY29uc29sZS5sb2coJ0tub3dsZWRnZVJlY29tbWVuZGF0aW9uIC0g6ZSA5q+B5LmL5YmN55qE5Zu+6KGo5a6e5L6LJyk7CiAgICAgICAgICB0aGlzLmdyYXBoLmRpc3Bvc2UoKTsKICAgICAgICB9CgogICAgICAgIC8vIOWIm+W7uuaWsOeahOWbvuihqOWunuS+iwogICAgICAgIGNvbnNvbGUubG9nKCdLbm93bGVkZ2VSZWNvbW1lbmRhdGlvbiAtIOWIm+W7uuaWsOeahOWbvuihqOWunuS+iycpOwogICAgICAgIHRoaXMuZ3JhcGggPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5rbm93bGVkZ2VHcmFwaFJlZik7CgogICAgICAgIC8vIOeUn+aIkOefpeivhuWbvuiwseaVsOaNrgogICAgICAgIGNvbnNvbGUubG9nKCdLbm93bGVkZ2VSZWNvbW1lbmRhdGlvbiAtIOeUn+aIkOefpeivhuWbvuiwseaVsOaNricpOwogICAgICAgIGNvbnN0IGdyYXBoRGF0YSA9IHRoaXMuZ2VuZXJhdGVLbm93bGVkZ2VHcmFwaERhdGEoKTsKICAgICAgICBjb25zb2xlLmxvZygnS25vd2xlZGdlUmVjb21tZW5kYXRpb24gLSDlm77osLHmlbDmja46JywgZ3JhcGhEYXRhKTsKCiAgICAgICAgLy8g6YWN572u5Zu+6KGo6YCJ6aG5CiAgICAgICAgY29uc29sZS5sb2coJ0tub3dsZWRnZVJlY29tbWVuZGF0aW9uIC0g6YWN572u5Zu+6KGo6YCJ6aG5Jyk7CiAgICAgICAgY29uc3Qgb3B0aW9uID0gewogICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgdGV4dDogJ+efpeivhueCueWFs+ezu+WbvicsCiAgICAgICAgICAgIGxlZnQ6ICdjZW50ZXInLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBmb250U2l6ZTogMTQsCiAgICAgICAgICAgICAgY29sb3I6ICcjMzMzJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gKHBhcmFtcykgewogICAgICAgICAgICAgIGlmIChwYXJhbXMuZGF0YVR5cGUgPT09ICdub2RlJykgewogICAgICAgICAgICAgICAgcmV0dXJuIGA8c3Ryb25nPiR7cGFyYW1zLmRhdGEubmFtZX08L3N0cm9uZz48YnIvPiR7cGFyYW1zLmRhdGEuZGVzY3JpcHRpb24gfHwgJyd9YDsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIGAke3BhcmFtcy5kYXRhLnNvdXJjZX0g4oaSICR7cGFyYW1zLmRhdGEudGFyZ2V0fTxici8+JHtwYXJhbXMuZGF0YS5yZWxhdGlvbn1gOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgdHlwZTogJ2dyYXBoJywKICAgICAgICAgICAgbGF5b3V0OiAnZm9yY2UnLAogICAgICAgICAgICBzeW1ib2xTaXplOiA1MCwKICAgICAgICAgICAgcm9hbTogdHJ1ZSwKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgIHBvc2l0aW9uOiAnaW5zaWRlJywKICAgICAgICAgICAgICBmb250U2l6ZTogMTAsCiAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJwogICAgICAgICAgICB9LAogICAgICAgICAgICBlZGdlU3ltYm9sOiBbJ2NpcmNsZScsICdhcnJvdyddLAogICAgICAgICAgICBlZGdlU3ltYm9sU2l6ZTogWzQsIDEwXSwKICAgICAgICAgICAgZGF0YTogZ3JhcGhEYXRhLm5vZGVzLAogICAgICAgICAgICBsaW5rczogZ3JhcGhEYXRhLmxpbmtzLAogICAgICAgICAgICBjYXRlZ29yaWVzOiBncmFwaERhdGEuY2F0ZWdvcmllcywKICAgICAgICAgICAgZm9yY2U6IHsKICAgICAgICAgICAgICByZXB1bHNpb246IDEwMDAsCiAgICAgICAgICAgICAgZ3Jhdml0eTogMC4xLAogICAgICAgICAgICAgIGVkZ2VMZW5ndGg6IDEwMCwKICAgICAgICAgICAgICBsYXlvdXRBbmltYXRpb246IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjOTk5JywKICAgICAgICAgICAgICB3aWR0aDogMiwKICAgICAgICAgICAgICBjdXJ2ZW5lc3M6IDAuMwogICAgICAgICAgICB9LAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIGZvY3VzOiAnYWRqYWNlbmN5JywKICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgIHdpZHRoOiA0CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9XQogICAgICAgIH07CgogICAgICAgIC8vIOiuvue9ruWbvuihqOmAiemhuQogICAgICAgIGNvbnNvbGUubG9nKCdLbm93bGVkZ2VSZWNvbW1lbmRhdGlvbiAtIOiuvue9ruWbvuihqOmAiemhuScpOwogICAgICAgIHRoaXMuZ3JhcGguc2V0T3B0aW9uKG9wdGlvbik7CiAgICAgICAgY29uc29sZS5sb2coJ0tub3dsZWRnZVJlY29tbWVuZGF0aW9uIC0g5Zu+6KGo6YCJ6aG56K6+572u5a6M5oiQJyk7CgogICAgICAgIC8vIOebkeWQrOeql+WPo+Wkp+Wwj+WPmOWMlgogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB7CiAgICAgICAgICBpZiAodGhpcy5ncmFwaCkgewogICAgICAgICAgICB0aGlzLmdyYXBoLnJlc2l6ZSgpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIGNvbnNvbGUubG9nKCdLbm93bGVkZ2VSZWNvbW1lbmRhdGlvbiAtIOefpeivhuWbvuiwseWIneWni+WMluWujOaIkCcpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0tub3dsZWRnZVJlY29tbWVuZGF0aW9uIC0g5Yid5aeL5YyW55+l6K+G5Zu+6LCx5aSx6LSlOicsIGVycm9yKTsKICAgICAgICAvLyDpmY3nuqfliLDnroDljZXmmL7npLoKICAgICAgICBjb25zdCBncmFwaENvbnRhaW5lciA9IHRoaXMuJHJlZnMua25vd2xlZGdlR3JhcGhSZWY7CiAgICAgICAgZ3JhcGhDb250YWluZXIuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9ImdyYXBoLXBsYWNlaG9sZGVyIj48cD7nn6Xor4blm77osLHliqDovb3lpLHotKU8L3A+PHA+6ZSZ6K+vOiAnICsgZXJyb3IubWVzc2FnZSArICc8L3A+PC9kaXY+JzsKICAgICAgfQogICAgfSwKICAgIC8vIOeUn+aIkOefpeivhuWbvuiwseaVsOaNrgogICAgZ2VuZXJhdGVLbm93bGVkZ2VHcmFwaERhdGEoKSB7CiAgICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBbewogICAgICAgIG5hbWU6ICflvZPliY3nn6Xor4bngrknLAogICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgY29sb3I6ICcjNDA5RUZGJwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIG5hbWU6ICfliY3nva7nn6Xor4YnLAogICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgY29sb3I6ICcjNjdDMjNBJwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIG5hbWU6ICfnm7jlhbPnn6Xor4YnLAogICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgY29sb3I6ICcjRTZBMjNDJwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIG5hbWU6ICflkI7nu63nn6Xor4YnLAogICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgY29sb3I6ICcjRjU2QzZDJwogICAgICAgIH0KICAgICAgfV07CgogICAgICAvLyDln7rkuo7lvZPliY3mjqjojZDnmoTnn6Xor4bngrnnlJ/miJDlm77osLHmlbDmja4KICAgICAgY29uc3Qgbm9kZXMgPSBbXTsKICAgICAgY29uc3QgbGlua3MgPSBbXTsKICAgICAgaWYgKHRoaXMucmVjb21tZW5kZWRDb25jZXB0cy5sZW5ndGggPiAwKSB7CiAgICAgICAgLy8g5re75Yqg5b2T5YmN6Zeu6aKY55u45YWz55qE55+l6K+G54K5CiAgICAgICAgdGhpcy5yZWNvbW1lbmRlZENvbmNlcHRzLmZvckVhY2goKGNvbmNlcHQsIGluZGV4KSA9PiB7CiAgICAgICAgICBub2Rlcy5wdXNoKHsKICAgICAgICAgICAgaWQ6IGNvbmNlcHQuaWQsCiAgICAgICAgICAgIG5hbWU6IGNvbmNlcHQudGl0bGUsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBjb25jZXB0LmRlc2NyaXB0aW9uLAogICAgICAgICAgICBjYXRlZ29yeTogMCwKICAgICAgICAgICAgLy8g5b2T5YmN55+l6K+G54K5CiAgICAgICAgICAgIHN5bWJvbFNpemU6IDYwLAogICAgICAgICAgICB4OiBNYXRoLmNvcyhpbmRleCAqIDIgKiBNYXRoLlBJIC8gdGhpcy5yZWNvbW1lbmRlZENvbmNlcHRzLmxlbmd0aCkgKiAyMDAsCiAgICAgICAgICAgIHk6IE1hdGguc2luKGluZGV4ICogMiAqIE1hdGguUEkgLyB0aGlzLnJlY29tbWVuZGVkQ29uY2VwdHMubGVuZ3RoKSAqIDIwMAogICAgICAgICAgfSk7CiAgICAgICAgfSk7CgogICAgICAgIC8vIOa3u+WKoOWJjee9ruefpeivhueCuQogICAgICAgIGNvbnN0IHByZXJlcXVpc2l0ZXMgPSBbewogICAgICAgICAgaWQ6ICdwcmUxJywKICAgICAgICAgIG5hbWU6ICfln7rnoYDov5DnrpcnLAogICAgICAgICAgZGVzY3JpcHRpb246ICfliqDlh4/kuZjpmaTln7rmnKzov5DnrpcnLAogICAgICAgICAgY2F0ZWdvcnk6IDEKICAgICAgICB9LCB7CiAgICAgICAgICBpZDogJ3ByZTInLAogICAgICAgICAgbmFtZTogJ+aVsOeahOamguW/tScsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJ+iHqueEtuaVsOOAgeaVtOaVsOOAgeWIhuaVsCcsCiAgICAgICAgICBjYXRlZ29yeTogMQogICAgICAgIH1dOwogICAgICAgIHByZXJlcXVpc2l0ZXMuZm9yRWFjaChwcmUgPT4gewogICAgICAgICAgbm9kZXMucHVzaChwcmUpOwogICAgICAgICAgLy8g6L+e5o6l5Yiw56ys5LiA5Liq5b2T5YmN55+l6K+G54K5CiAgICAgICAgICBpZiAodGhpcy5yZWNvbW1lbmRlZENvbmNlcHRzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgbGlua3MucHVzaCh7CiAgICAgICAgICAgICAgc291cmNlOiBwcmUuaWQsCiAgICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLnJlY29tbWVuZGVkQ29uY2VwdHNbMF0uaWQsCiAgICAgICAgICAgICAgcmVsYXRpb246ICfliY3nva7lhbPns7snCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICAvLyDmt7vliqDnm7jlhbPnn6Xor4bngrkKICAgICAgICBjb25zdCByZWxhdGVkID0gW3sKICAgICAgICAgIGlkOiAncmVsMScsCiAgICAgICAgICBuYW1lOiAn5Yeg5L2V5Zu+5b2iJywKICAgICAgICAgIGRlc2NyaXB0aW9uOiAn5bmz6Z2i5Yeg5L2V5Z+656GAJywKICAgICAgICAgIGNhdGVnb3J5OiAyCiAgICAgICAgfSwgewogICAgICAgICAgaWQ6ICdyZWwyJywKICAgICAgICAgIG5hbWU6ICfku6PmlbDooajovr7lvI8nLAogICAgICAgICAgZGVzY3JpcHRpb246ICflj5jph4/kuI7ooajovr7lvI8nLAogICAgICAgICAgY2F0ZWdvcnk6IDIKICAgICAgICB9XTsKICAgICAgICByZWxhdGVkLmZvckVhY2gocmVsID0+IHsKICAgICAgICAgIG5vZGVzLnB1c2gocmVsKTsKICAgICAgICAgIC8vIOi/nuaOpeWIsOebuOWFs+eahOW9k+WJjeefpeivhueCuQogICAgICAgICAgaWYgKHRoaXMucmVjb21tZW5kZWRDb25jZXB0cy5sZW5ndGggPiAxKSB7CiAgICAgICAgICAgIGxpbmtzLnB1c2goewogICAgICAgICAgICAgIHNvdXJjZTogdGhpcy5yZWNvbW1lbmRlZENvbmNlcHRzWzBdLmlkLAogICAgICAgICAgICAgIHRhcmdldDogcmVsLmlkLAogICAgICAgICAgICAgIHJlbGF0aW9uOiAn55u45YWz5YWz57O7JwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgICAgLy8g5re75Yqg5ZCO57ut55+l6K+G54K5CiAgICAgICAgY29uc3QgYWR2YW5jZWQgPSBbewogICAgICAgICAgaWQ6ICdhZHYxJywKICAgICAgICAgIG5hbWU6ICfpq5jnuqflupTnlKgnLAogICAgICAgICAgZGVzY3JpcHRpb246ICfnu7zlkIjlupTnlKjpopgnLAogICAgICAgICAgY2F0ZWdvcnk6IDMKICAgICAgICB9LCB7CiAgICAgICAgICBpZDogJ2FkdjInLAogICAgICAgICAgbmFtZTogJ+aLk+WxleWGheWuuScsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJ+i/m+mYtuefpeivhueCuScsCiAgICAgICAgICBjYXRlZ29yeTogMwogICAgICAgIH1dOwogICAgICAgIGFkdmFuY2VkLmZvckVhY2goYWR2ID0+IHsKICAgICAgICAgIG5vZGVzLnB1c2goYWR2KTsKICAgICAgICAgIC8vIOi/nuaOpeWIsOW9k+WJjeefpeivhueCuQogICAgICAgICAgaWYgKHRoaXMucmVjb21tZW5kZWRDb25jZXB0cy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIGxpbmtzLnB1c2goewogICAgICAgICAgICAgIHNvdXJjZTogdGhpcy5yZWNvbW1lbmRlZENvbmNlcHRzWzBdLmlkLAogICAgICAgICAgICAgIHRhcmdldDogYWR2LmlkLAogICAgICAgICAgICAgIHJlbGF0aW9uOiAn5ZCO57ut5YWz57O7JwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgICAgLy8g5re75Yqg55+l6K+G54K55LmL6Ze055qE5YWz6IGUCiAgICAgICAgaWYgKHRoaXMucmVjb21tZW5kZWRDb25jZXB0cy5sZW5ndGggPiAxKSB7CiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucmVjb21tZW5kZWRDb25jZXB0cy5sZW5ndGggLSAxOyBpKyspIHsKICAgICAgICAgICAgbGlua3MucHVzaCh7CiAgICAgICAgICAgICAgc291cmNlOiB0aGlzLnJlY29tbWVuZGVkQ29uY2VwdHNbaV0uaWQsCiAgICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLnJlY29tbWVuZGVkQ29uY2VwdHNbaSArIDFdLmlkLAogICAgICAgICAgICAgIHJlbGF0aW9uOiAn5YWz6IGU5YWz57O7JwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8g5aaC5p6c5rKh5pyJ5o6o6I2Q55+l6K+G54K577yM5pi+56S66buY6K6k5Zu+6LCxCiAgICAgICAgbm9kZXMucHVzaCh7CiAgICAgICAgICBpZDogJ2RlZmF1bHQxJywKICAgICAgICAgIG5hbWU6ICfpgInmi6npopjnm64nLAogICAgICAgICAgZGVzY3JpcHRpb246ICfor7flhYjpgInmi6nkuIDpgZPpopjnm64nLAogICAgICAgICAgY2F0ZWdvcnk6IDAsCiAgICAgICAgICBzeW1ib2xTaXplOiA4MAogICAgICAgIH0pOwogICAgICB9CiAgICAgIHJldHVybiB7CiAgICAgICAgbm9kZXMsCiAgICAgICAgbGlua3MsCiAgICAgICAgY2F0ZWdvcmllcwogICAgICB9OwogICAgfSwKICAgIC8vIOW6lOeUqOefpeivhueCuQogICAgYXBwbHlLbm93bGVkZ2UoY29uY2VwdCkgewogICAgICB0aGlzLiRlbWl0KCdrbm93bGVkZ2Utc2VsZWN0ZWQnLCBjb25jZXB0KTsKICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKGDlt7LlupTnlKjnn6Xor4bngrnvvJoke2NvbmNlcHQudGl0bGV9YCk7CiAgICB9LAogICAgLy8g5p+l55yL55+l6K+G54K56K+m5oOFCiAgICB2aWV3RGV0YWlscyhjb25jZXB0KSB7CiAgICAgIC8vIOWunumZheW6lOeUqOS4reW6lOivpei3s+i9rOWIsOefpeivhueCueivpuaDhemhteaIluaJk+W8gOivpuaDheW8ueeqlwogICAgICB0aGlzLiRhbGVydChjb25jZXB0LmRlc2NyaXB0aW9uLCBjb25jZXB0LnRpdGxlLCB7CiAgICAgICAgZGFuZ2Vyb3VzbHlVc2VIVE1MU3RyaW5nOiB0cnVlLAogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn5YWz6ZetJwogICAgICB9KTsKICAgIH0sCiAgICAvLyDlpI3kuaDlvLHngrnnn6Xor4bngrkKICAgIHJldmlld1dlYWtQb2ludChwb2ludCkgewogICAgICAvLyDlrp7pmYXlupTnlKjkuK3lupTor6Xot7PovazliLDnn6Xor4bngrnlrabkuaDpobXpnaIKICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKGDljbPlsIblvIDlp4vlpI3kuaDvvJoke3BvaW50LnRpdGxlfWApOwogICAgfSwKICAgIC8vIOiOt+WPluWtpuS5oOi3r+W+hOatpemqpOeKtuaAgQogICAgZ2V0U3RlcFN0YXR1cyhpbmRleCkgewogICAgICBpZiAoaW5kZXggPT09IDApIHJldHVybiAnc3VjY2Vzcyc7CiAgICAgIGlmIChpbmRleCA9PT0gMSkgcmV0dXJuICdwcm9jZXNzJzsKICAgICAgcmV0dXJuICd3YWl0JzsKICAgIH0sCiAgICAvLyDnn6Xor4blm77osLHnvKnmlL7mjqfliLYKICAgIHpvb21JbigpIHsKICAgICAgaWYgKHRoaXMuZ3JhcGgpIHsKICAgICAgICB0aGlzLmdyYXBoLmRpc3BhdGNoQWN0aW9uKHsKICAgICAgICAgIHR5cGU6ICdncmFwaFJvYW0nLAogICAgICAgICAgem9vbTogMS4yCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICB6b29tT3V0KCkgewogICAgICBpZiAodGhpcy5ncmFwaCkgewogICAgICAgIHRoaXMuZ3JhcGguZGlzcGF0Y2hBY3Rpb24oewogICAgICAgICAgdHlwZTogJ2dyYXBoUm9hbScsCiAgICAgICAgICB6b29tOiAwLjgKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHJlc2V0R3JhcGgoKSB7CiAgICAgIGlmICh0aGlzLmdyYXBoKSB7CiAgICAgICAgdGhpcy5ncmFwaC5kaXNwYXRjaEFjdGlvbih7CiAgICAgICAgICB0eXBlOiAncmVzdG9yZScKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sCiAgLy8g57uE5Lu26ZSA5q+B5pe25riF55CG5Zu+6KGo5a6e5L6LCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIGlmICh0aGlzLmdyYXBoKSB7CiAgICAgIHRoaXMuZ3JhcGguZGlzcG9zZSgpOwogICAgICB0aGlzLmdyYXBoID0gbnVsbDsKICAgIH0KICAgIC8vIOenu+mZpOeql+WPo+Wkp+Wwj+WPmOWMluebkeWQrAogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuaGFuZGxlUmVzaXplKTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICAvLyDnu5Hlrprnqpflj6PlpKflsI/lj5jljJblpITnkIblh73mlbAKICAgIHRoaXMuaGFuZGxlUmVzaXplID0gKCkgPT4gewogICAgICBpZiAodGhpcy5ncmFwaCkgewogICAgICAgIHRoaXMuZ3JhcGgucmVzaXplKCk7CiAgICAgIH0KICAgIH07CgogICAgLy8g56Gu5L+d5Zyo57uE5Lu25oyC6L295ZCO5Yid5aeL5YyW55+l6K+G5Zu+6LCxCiAgICBpZiAodGhpcy5zaG93S25vd2xlZGdlR3JhcGggJiYgdGhpcy5jdXJyZW50UHJvYmxlbSkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ0tub3dsZWRnZVJlY29tbWVuZGF0aW9uIC0gbW91bnRlZOS4reWIneWni+WMluefpeivhuWbvuiwsScpOwogICAgICAgIHRoaXMuaW5pdEtub3dsZWRnZUdyYXBoKCk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"names":["name","props","currentProblem","type","Object","default","userContext","required","data","loading","recommendedConcepts","activeConceptNames","showKnowledgeGraph","graph","graphZoom","learningPath","weakPoints","watch","handler","newVal","oldVal","console","log","id","newContent","content","fetchRecommendations","immediate","$nextTick","initKnowledgeGraph","methods","knowledgeService","response","getQuestionKnowledgePoints","knowledge_points","processKnowledgePoints","textResponse","getKnowledgePointsByText","simulateFetch","error","$message","knowledgePoints","length","map","kp","title","description","examples","ex","problem","solution","formulas","key_points","relevance","generateLearningPath","checkWeakPoints","prerequisites","prereq","push","Math","random","toString","substr","related_concepts","related","uniquePaths","seen","Set","path","has","add","weakPoint","find","wp","includes","common_errors","join","Promise","resolve","setTimeout","proficiency","$refs","knowledgeGraphRef","echarts","dispose","init","graphData","generateKnowledgeGraphData","option","text","left","textStyle","fontSize","color","tooltip","trigger","formatter","params","dataType","source","target","relation","series","layout","symbolSize","roam","label","show","position","edgeSymbol","edgeSymbolSize","nodes","links","categories","force","repulsion","gravity","edgeLength","layoutAnimation","lineStyle","width","curveness","emphasis","focus","setOption","window","addEventListener","resize","graphContainer","innerHTML","message","itemStyle","forEach","concept","index","category","x","cos","PI","y","sin","pre","rel","advanced","adv","i","applyKnowledge","$emit","success","viewDetails","$alert","dangerouslyUseHTMLString","confirmButtonText","reviewWeakPoint","point","info","getStepStatus","zoomIn","dispatchAction","zoom","zoomOut","resetGraph","beforeDestroy","removeEventListener","handleResize","mounted"],"sources":["src/components/KnowledgeRecommendation.vue"],"sourcesContent":["<!--\n  文件名: KnowledgeRecommendation.vue\n  描述: 知识推荐模块组件，基于知识图谱和学生模型推荐相关知识点\n  创建日期: 2023-06-15\n-->\n\n<template>\n  <div class=\"knowledge-recommendation\">\n    <div class=\"module-header\">\n      <h3>知识点推荐</h3>\n      <el-tooltip content=\"基于当前问题和您的学习状况，智能推荐相关知识点\" placement=\"top\">\n        <i class=\"el-icon-question\"></i>\n      </el-tooltip>\n    </div>\n\n    <div class=\"knowledge-content\">`\n    \n    <div v-if=\"loading\" class=\"loading-state\">\n      <el-skeleton :rows=\"5\" animated />\n    </div>\n    \n    <div v-else-if=\"!currentProblem\" class=\"empty-state\">\n      <i class=\"el-icon-document\"></i>\n      <p>请选择一道题目以获取相关知识点推荐</p>\n    </div>\n    \n    <template v-else>\n      <!-- 当前问题相关概念 -->\n      <div class=\"section-header\">\n        <span>相关概念</span>\n        <el-tag size=\"mini\" type=\"primary\">{{ recommendedConcepts.length }}</el-tag>\n      </div>\n      \n      <div class=\"concepts-container\">\n        <el-collapse v-model=\"activeConceptNames\" accordion>\n          <el-collapse-item \n            v-for=\"concept in recommendedConcepts\" \n            :key=\"concept.id\"\n            :title=\"concept.title\"\n            :name=\"concept.title\"\n          >\n            <div class=\"concept-content\">\n              <div class=\"concept-description\" v-html=\"concept.description\"></div>\n              \n              <div class=\"concept-examples\" v-if=\"concept.examples && concept.examples.length > 0\">\n                <div class=\"example-title\">示例</div>\n                <div \n                  v-for=\"(example, index) in concept.examples\" \n                  :key=\"index\"\n                  class=\"example-item\"\n                  v-html=\"example\"\n                ></div>\n              </div>\n              \n              <div class=\"concept-formulas\" v-if=\"concept.formulas && concept.formulas.length > 0\">\n                <div class=\"formula-title\">相关公式</div>\n                <div \n                  v-for=\"(formula, index) in concept.formulas\" \n                  :key=\"index\"\n                  class=\"formula-item\"\n                  v-html=\"formula\"\n                ></div>\n              </div>\n              \n              <div class=\"concept-actions\">\n                <el-button \n                  type=\"primary\" \n                  size=\"mini\" \n                  @click=\"applyKnowledge(concept)\"\n                  icon=\"el-icon-check\"\n                >应用</el-button>\n                <el-button \n                  type=\"info\" \n                  size=\"mini\" \n                  @click=\"viewDetails(concept)\"\n                  icon=\"el-icon-view\"\n                >详情</el-button>\n              </div>\n            </div>\n          </el-collapse-item>\n        </el-collapse>\n      </div>\n      \n      <!-- 知识图谱可视化 -->\n      <div class=\"section-header\">\n        <span>知识图谱</span>\n        <div style=\"display: flex; align-items: center; gap: 10px;\">\n          <small style=\"color: #909399;\">\n            题目: {{ currentProblem ? currentProblem.id : '无' }}\n          </small>\n          <el-switch\n            v-model=\"showKnowledgeGraph\"\n            active-text=\"显示\"\n            inactive-text=\"隐藏\"\n            size=\"small\"\n          ></el-switch>\n        </div>\n      </div>\n      \n      <div v-if=\"showKnowledgeGraph\" class=\"knowledge-graph-container\">\n        <div ref=\"knowledgeGraphRef\" class=\"knowledge-graph\"></div>\n        <div class=\"graph-controls\">\n          <el-button-group size=\"mini\">\n            <el-button icon=\"el-icon-zoom-in\" @click=\"zoomIn\"></el-button>\n            <el-button icon=\"el-icon-zoom-out\" @click=\"zoomOut\"></el-button>\n            <el-button icon=\"el-icon-refresh\" @click=\"resetGraph\"></el-button>\n          </el-button-group>\n        </div>\n      </div>\n      \n      <!-- 学习路径推荐 -->\n      <div class=\"section-header\">\n        <span>学习路径</span>\n        <el-tag size=\"mini\" type=\"success\">{{ learningPath.length }}</el-tag>\n      </div>\n      \n      <div class=\"learning-path-container\">\n        <el-steps direction=\"vertical\" :active=\"1\">\n          <el-step \n            v-for=\"(step, index) in learningPath\" \n            :key=\"step.id\"\n            :title=\"step.title\"\n            :description=\"step.description\"\n            :status=\"getStepStatus(index)\"\n          ></el-step>\n        </el-steps>\n      </div>\n      \n      <!-- 历史弱点提示 -->\n      <div v-if=\"weakPoints.length > 0\" class=\"section-header\">\n        <span>需要注意的知识点</span>\n        <el-tag size=\"mini\" type=\"danger\">{{ weakPoints.length }}</el-tag>\n      </div>\n      \n      <div v-if=\"weakPoints.length > 0\" class=\"weak-points-container\">\n        <el-alert\n          v-for=\"point in weakPoints\"\n          :key=\"point.id\"\n          :title=\"point.title\"\n          :description=\"point.description\"\n          type=\"warning\"\n          show-icon\n          :closable=\"false\"\n          style=\"margin-bottom: 10px;\"\n        >\n          <el-button \n            slot=\"title\" \n            size=\"mini\" \n            type=\"text\" \n            class=\"review-button\"\n            @click=\"reviewWeakPoint(point)\"\n          >\n            立即复习\n          </el-button>\n        </el-alert>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'KnowledgeRecommendation',\n  \n  props: {\n    // 当前问题\n    currentProblem: {\n      type: Object,\n      default: null\n    },\n    \n    // 用户上下文\n    userContext: {\n      type: Object,\n      required: true\n    }\n  },\n  \n  data() {\n    return {\n      // 加载状态\n      loading: false,\n      \n      // 知识点推荐\n      recommendedConcepts: [],\n      \n      // 展开的概念\n      activeConceptNames: [],\n      \n      // 知识图谱显示\n      showKnowledgeGraph: true,\n      \n      // 知识图谱实例\n      graph: null,\n      graphZoom: 1,\n      \n      // 学习路径\n      learningPath: [],\n      \n      // 弱点知识点\n      weakPoints: []\n    };\n  },\n  \n  watch: {\n    // 监听当前问题变化，更新推荐\n    currentProblem: {\n      handler(newVal, oldVal) {\n        console.log('KnowledgeRecommendation - currentProblem changed:', {\n          newVal: newVal ? newVal.id : null,\n          oldVal: oldVal ? oldVal.id : null,\n          newContent: newVal ? newVal.content : null\n        });\n\n        if (newVal) {\n          this.fetchRecommendations();\n        } else {\n          this.recommendedConcepts = [];\n          this.learningPath = [];\n          this.weakPoints = [];\n        }\n      },\n      immediate: true\n    },\n\n    // 监听知识图谱显示状态\n    showKnowledgeGraph: {\n      handler(newVal) {\n        console.log('KnowledgeRecommendation - showKnowledgeGraph changed:', newVal);\n        if (newVal) {\n          this.$nextTick(() => {\n            console.log('KnowledgeRecommendation - 准备初始化知识图谱');\n            this.initKnowledgeGraph();\n          });\n        }\n      },\n      immediate: true // 立即执行一次\n    }\n  },\n  \n  methods: {\n    // 获取知识点推荐\n    async fetchRecommendations() {\n      console.log('KnowledgeRecommendation - fetchRecommendations 开始');\n      console.log('KnowledgeRecommendation - currentProblem:', this.currentProblem);\n\n      if (!this.currentProblem) {\n        console.log('KnowledgeRecommendation - currentProblem 为空，退出');\n        return;\n      }\n\n      this.loading = true;\n      \n      try {\n        // 调用API获取知识点\n        const knowledgeService = await import('../services/knowledgeService');\n        \n        // 如果题目有ID，通过ID获取知识点\n        if (this.currentProblem.id) {\n          const response = await knowledgeService.getQuestionKnowledgePoints(this.currentProblem.id);\n          if (response.data && response.data.knowledge_points) {\n            this.processKnowledgePoints(response.data.knowledge_points);\n          } else {\n            // 如果没有返回知识点，则通过题目内容获取\n            const textResponse = await knowledgeService.getKnowledgePointsByText(this.currentProblem.content);\n            if (textResponse.data && textResponse.data.knowledge_points) {\n              this.processKnowledgePoints(textResponse.data.knowledge_points);\n            } else {\n              // 如果API没有返回知识点，使用模拟数据\n              await this.simulateFetch();\n            }\n          }\n        } else if (this.currentProblem.content) {\n          // 如果题目没有ID但有内容，通过内容获取知识点\n          const response = await knowledgeService.getKnowledgePointsByText(this.currentProblem.content);\n          if (response.data && response.data.knowledge_points) {\n            this.processKnowledgePoints(response.data.knowledge_points);\n          } else {\n            // 如果API没有返回知识点，使用模拟数据\n            await this.simulateFetch();\n          }\n        } else {\n          // 如果没有ID和内容，使用模拟数据\n          await this.simulateFetch();\n        }\n        \n        // 初始化知识图谱\n        console.log('KnowledgeRecommendation - 检查是否需要初始化知识图谱');\n        console.log('KnowledgeRecommendation - showKnowledgeGraph:', this.showKnowledgeGraph);\n        if (this.showKnowledgeGraph) {\n          console.log('KnowledgeRecommendation - 准备在nextTick中初始化知识图谱');\n          this.$nextTick(() => {\n            console.log('KnowledgeRecommendation - nextTick中调用initKnowledgeGraph');\n            this.initKnowledgeGraph();\n          });\n        }\n      } catch (error) {\n        console.error('获取知识点推荐失败', error);\n        this.$message.error('获取知识点推荐失败，使用本地数据');\n        // 出错时使用模拟数据\n        await this.simulateFetch();\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 处理API返回的知识点数据\n    processKnowledgePoints(knowledgePoints) {\n      if (!knowledgePoints || knowledgePoints.length === 0) {\n        this.recommendedConcepts = [];\n        return;\n      }\n      \n      // 将后端知识点数据转换为前端所需格式\n      this.recommendedConcepts = knowledgePoints.map(kp => ({\n        id: kp.id,\n        title: kp.name,\n        description: kp.description || '暂无描述',\n        examples: kp.examples ? kp.examples.map(ex => ex.problem + '\\n' + ex.solution) : [],\n        formulas: kp.key_points || [],\n        relevance: 0.9\n      }));\n      \n      // 生成学习路径\n      this.generateLearningPath(knowledgePoints);\n      \n      // 检查用户弱点\n      this.checkWeakPoints(knowledgePoints);\n      \n      // 默认展开第一个概念\n      if (this.recommendedConcepts.length > 0) {\n        this.activeConceptNames = [this.recommendedConcepts[0].title];\n      }\n    },\n    \n    // 生成学习路径\n    generateLearningPath(knowledgePoints) {\n      this.learningPath = [];\n      \n      // 根据知识点的先决条件生成学习路径\n      for (const kp of knowledgePoints) {\n        if (kp.prerequisites && kp.prerequisites.length > 0) {\n          for (const prereq of kp.prerequisites) {\n            this.learningPath.push({\n              id: 'p' + Math.random().toString(36).substr(2, 9),\n              title: prereq,\n              description: `学习 ${prereq} 的基本概念和应用`\n            });\n          }\n        }\n        \n        // 添加当前知识点\n        this.learningPath.push({\n          id: 'p' + kp.id,\n          title: kp.name,\n          description: kp.description || `掌握 ${kp.name} 的核心内容`\n        });\n        \n        // 添加相关概念\n        if (kp.related_concepts && kp.related_concepts.length > 0) {\n          for (const related of kp.related_concepts) {\n            this.learningPath.push({\n              id: 'p' + Math.random().toString(36).substr(2, 9),\n              title: related,\n              description: `学习 ${related} 与 ${kp.name} 的关联`\n            });\n          }\n        }\n      }\n      \n      // 去重\n      const uniquePaths = [];\n      const seen = new Set();\n      for (const path of this.learningPath) {\n        if (!seen.has(path.title)) {\n          seen.add(path.title);\n          uniquePaths.push(path);\n        }\n      }\n      this.learningPath = uniquePaths;\n    },\n    \n    // 检查用户弱点\n    checkWeakPoints(knowledgePoints) {\n      this.weakPoints = [];\n      \n      // 如果用户上下文中有弱点数据\n      if (this.userContext && this.userContext.weakPoints) {\n        for (const kp of knowledgePoints) {\n          const weakPoint = this.userContext.weakPoints.find(wp => \n            wp.name === kp.name || kp.related_concepts && kp.related_concepts.includes(wp.name)\n          );\n          \n          if (weakPoint) {\n            this.weakPoints.push({\n              id: 'w' + kp.id,\n              title: kp.name,\n              description: `您在此知识点的掌握程度较弱，建议复习。`\n            });\n          }\n        }\n      }\n      \n      // 如果知识点有常见错误，也添加到弱点中\n      for (const kp of knowledgePoints) {\n        if (kp.common_errors && kp.common_errors.length > 0) {\n          this.weakPoints.push({\n            id: 'w' + kp.id,\n            title: kp.name + ' - 常见错误',\n            description: kp.common_errors.join('\\n')\n          });\n        }\n      }\n    },\n    \n    // 模拟获取数据\n    async simulateFetch() {\n      // 模拟API延迟\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      // 根据当前问题生成模拟数据\n      if (this.currentProblem.type === 'algebra') {\n        this.recommendedConcepts = [\n          {\n            id: 'c1',\n            title: '一元二次方程',\n            description: '一元二次方程是指含有一个未知数，并且未知数的最高次数为2的方程。一般形式为：ax² + bx + c = 0，其中a、b、c是实数，且a ≠ 0。',\n            examples: [\n              '例如：3x² - 5x + 2 = 0',\n              '例如：x² - 4 = 0'\n            ],\n            formulas: [\n              '判别式：Δ = b² - 4ac',\n              '求根公式：x = (-b ± √(b² - 4ac)) / (2a)'\n            ],\n            relevance: 0.95\n          },\n          {\n            id: 'c2',\n            title: '因式分解',\n            description: '因式分解是将一个多项式表示成若干个多项式的乘积的形式。常用方法包括提取公因式、运用公式法、分组分解法等。',\n            examples: [\n              '例如：x² - 4 = (x - 2)(x + 2)',\n              '例如：x² + 2x + 1 = (x + 1)²'\n            ],\n            formulas: [\n              '平方差公式：a² - b² = (a - b)(a + b)',\n              '完全平方公式：a² + 2ab + b² = (a + b)²',\n              'a² - 2ab + b² = (a - b)²'\n            ],\n            relevance: 0.85\n          },\n          {\n            id: 'c3',\n            title: '配方法',\n            description: '配方法是解一元二次方程的一种方法，通过恰当地变形，使方程中的二次项和一次项变成一个完全平方式。',\n            examples: [\n              '例如：将x² + 6x + 5 = 0变形为(x + 3)² = 4，然后求解'\n            ],\n            formulas: [\n              '配方公式：x² + px = x² + px + (p/2)² - (p/2)² = (x + p/2)² - (p/2)²'\n            ],\n            relevance: 0.78\n          }\n        ];\n        \n        this.learningPath = [\n          {\n            id: 'p1',\n            title: '一元二次方程的概念',\n            description: '了解一元二次方程的定义和一般形式'\n          },\n          {\n            id: 'p2',\n            title: '因式分解法解方程',\n            description: '掌握利用因式分解解一元二次方程'\n          },\n          {\n            id: 'p3',\n            title: '配方法解方程',\n            description: '学习配方法的基本步骤和应用'\n          },\n          {\n            id: 'p4',\n            title: '公式法解方程',\n            description: '掌握并灵活运用求根公式'\n          }\n        ];\n        \n        this.weakPoints = [\n          {\n            id: 'w1',\n            title: '判别式的应用',\n            description: '根据历史学习记录，您在使用判别式判断方程根的情况时存在困难'\n          }\n        ];\n      } else if (this.currentProblem.type === 'geometry') {\n        // 为几何问题生成不同的推荐\n        this.recommendedConcepts = [\n          {\n            id: 'c4',\n            title: '相似三角形',\n            description: '相似三角形是指形状相同但大小可能不同的三角形。两个三角形相似，当且仅当它们的对应角相等，对应边成比例。',\n            examples: [\n              '例如：两个三角形，如果有两个角相等，则这两个三角形相似'\n            ],\n            formulas: [\n              '相似三角形的对应边成比例：a/a\\' = b/b\\' = c/c\\'',\n              '相似三角形的面积比等于对应边长比的平方：S/S\\' = (a/a\\')²'\n            ],\n            relevance: 0.92\n          },\n          // 其他几何概念...\n        ];\n        \n        // 其他几何相关数据...\n      } else {\n        // 默认推荐\n        this.recommendedConcepts = [\n          {\n            id: 'c5',\n            title: '基本数学概念',\n            description: '针对当前问题的基本数学概念介绍',\n            examples: ['示例问题1', '示例问题2'],\n            formulas: ['相关公式1', '相关公式2'],\n            relevance: 0.75\n          }\n        ];\n      }\n      \n      // 根据用户上下文个性化推荐\n      if (this.userContext.weakPoints && this.userContext.weakPoints.length > 0) {\n        // 添加用户弱点相关的知识点\n        this.weakPoints = this.userContext.weakPoints.map(wp => ({\n          id: `w${wp.id}`,\n          title: wp.name,\n          description: `您在此知识点的掌握程度较弱，建议复习。掌握度: ${wp.proficiency}%`\n        }));\n      }\n      \n      // 随机决定是否展开第一个概念\n      if (this.recommendedConcepts.length > 0 && Math.random() > 0.5) {\n        this.activeConceptNames = [this.recommendedConcepts[0].title];\n      }\n    },\n    \n    // 初始化知识图谱可视化\n    async initKnowledgeGraph() {\n      console.log('KnowledgeRecommendation - initKnowledgeGraph 开始');\n      console.log('KnowledgeRecommendation - knowledgeGraphRef:', this.$refs.knowledgeGraphRef);\n      console.log('KnowledgeRecommendation - recommendedConcepts:', this.recommendedConcepts);\n\n      if (!this.$refs.knowledgeGraphRef) {\n        console.error('KnowledgeRecommendation - knowledgeGraphRef 不存在');\n        return;\n      }\n\n      try {\n        console.log('KnowledgeRecommendation - 开始导入ECharts');\n        // 动态导入ECharts\n        const echarts = await import('echarts');\n        console.log('KnowledgeRecommendation - ECharts导入成功');\n\n        // 销毁之前的图表实例\n        if (this.graph) {\n          console.log('KnowledgeRecommendation - 销毁之前的图表实例');\n          this.graph.dispose();\n        }\n\n        // 创建新的图表实例\n        console.log('KnowledgeRecommendation - 创建新的图表实例');\n        this.graph = echarts.init(this.$refs.knowledgeGraphRef);\n\n        // 生成知识图谱数据\n        console.log('KnowledgeRecommendation - 生成知识图谱数据');\n        const graphData = this.generateKnowledgeGraphData();\n        console.log('KnowledgeRecommendation - 图谱数据:', graphData);\n\n        // 配置图表选项\n        console.log('KnowledgeRecommendation - 配置图表选项');\n        const option = {\n          title: {\n            text: '知识点关系图',\n            left: 'center',\n            textStyle: {\n              fontSize: 14,\n              color: '#333'\n            }\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: function(params) {\n              if (params.dataType === 'node') {\n                return `<strong>${params.data.name}</strong><br/>${params.data.description || ''}`;\n              } else {\n                return `${params.data.source} → ${params.data.target}<br/>${params.data.relation}`;\n              }\n            }\n          },\n          series: [{\n            type: 'graph',\n            layout: 'force',\n            symbolSize: 50,\n            roam: true,\n            label: {\n              show: true,\n              position: 'inside',\n              fontSize: 10,\n              color: '#fff'\n            },\n            edgeSymbol: ['circle', 'arrow'],\n            edgeSymbolSize: [4, 10],\n            data: graphData.nodes,\n            links: graphData.links,\n            categories: graphData.categories,\n            force: {\n              repulsion: 1000,\n              gravity: 0.1,\n              edgeLength: 100,\n              layoutAnimation: true\n            },\n            lineStyle: {\n              color: '#999',\n              width: 2,\n              curveness: 0.3\n            },\n            emphasis: {\n              focus: 'adjacency',\n              lineStyle: {\n                width: 4\n              }\n            }\n          }]\n        };\n\n        // 设置图表选项\n        console.log('KnowledgeRecommendation - 设置图表选项');\n        this.graph.setOption(option);\n        console.log('KnowledgeRecommendation - 图表选项设置完成');\n\n        // 监听窗口大小变化\n        window.addEventListener('resize', () => {\n          if (this.graph) {\n            this.graph.resize();\n          }\n        });\n\n        console.log('KnowledgeRecommendation - 知识图谱初始化完成');\n\n      } catch (error) {\n        console.error('KnowledgeRecommendation - 初始化知识图谱失败:', error);\n        // 降级到简单显示\n        const graphContainer = this.$refs.knowledgeGraphRef;\n        graphContainer.innerHTML = '<div class=\"graph-placeholder\"><p>知识图谱加载失败</p><p>错误: ' + error.message + '</p></div>';\n      }\n    },\n\n    // 生成知识图谱数据\n    generateKnowledgeGraphData() {\n      const categories = [\n        { name: '当前知识点', itemStyle: { color: '#409EFF' } },\n        { name: '前置知识', itemStyle: { color: '#67C23A' } },\n        { name: '相关知识', itemStyle: { color: '#E6A23C' } },\n        { name: '后续知识', itemStyle: { color: '#F56C6C' } }\n      ];\n\n      // 基于当前推荐的知识点生成图谱数据\n      const nodes = [];\n      const links = [];\n\n      if (this.recommendedConcepts.length > 0) {\n        // 添加当前问题相关的知识点\n        this.recommendedConcepts.forEach((concept, index) => {\n          nodes.push({\n            id: concept.id,\n            name: concept.title,\n            description: concept.description,\n            category: 0, // 当前知识点\n            symbolSize: 60,\n            x: Math.cos(index * 2 * Math.PI / this.recommendedConcepts.length) * 200,\n            y: Math.sin(index * 2 * Math.PI / this.recommendedConcepts.length) * 200\n          });\n        });\n\n        // 添加前置知识点\n        const prerequisites = [\n          { id: 'pre1', name: '基础运算', description: '加减乘除基本运算', category: 1 },\n          { id: 'pre2', name: '数的概念', description: '自然数、整数、分数', category: 1 }\n        ];\n\n        prerequisites.forEach(pre => {\n          nodes.push(pre);\n          // 连接到第一个当前知识点\n          if (this.recommendedConcepts.length > 0) {\n            links.push({\n              source: pre.id,\n              target: this.recommendedConcepts[0].id,\n              relation: '前置关系'\n            });\n          }\n        });\n\n        // 添加相关知识点\n        const related = [\n          { id: 'rel1', name: '几何图形', description: '平面几何基础', category: 2 },\n          { id: 'rel2', name: '代数表达式', description: '变量与表达式', category: 2 }\n        ];\n\n        related.forEach(rel => {\n          nodes.push(rel);\n          // 连接到相关的当前知识点\n          if (this.recommendedConcepts.length > 1) {\n            links.push({\n              source: this.recommendedConcepts[0].id,\n              target: rel.id,\n              relation: '相关关系'\n            });\n          }\n        });\n\n        // 添加后续知识点\n        const advanced = [\n          { id: 'adv1', name: '高级应用', description: '综合应用题', category: 3 },\n          { id: 'adv2', name: '拓展内容', description: '进阶知识点', category: 3 }\n        ];\n\n        advanced.forEach(adv => {\n          nodes.push(adv);\n          // 连接到当前知识点\n          if (this.recommendedConcepts.length > 0) {\n            links.push({\n              source: this.recommendedConcepts[0].id,\n              target: adv.id,\n              relation: '后续关系'\n            });\n          }\n        });\n\n        // 添加知识点之间的关联\n        if (this.recommendedConcepts.length > 1) {\n          for (let i = 0; i < this.recommendedConcepts.length - 1; i++) {\n            links.push({\n              source: this.recommendedConcepts[i].id,\n              target: this.recommendedConcepts[i + 1].id,\n              relation: '关联关系'\n            });\n          }\n        }\n      } else {\n        // 如果没有推荐知识点，显示默认图谱\n        nodes.push(\n          { id: 'default1', name: '选择题目', description: '请先选择一道题目', category: 0, symbolSize: 80 }\n        );\n      }\n\n      return { nodes, links, categories };\n    },\n    \n    // 应用知识点\n    applyKnowledge(concept) {\n      this.$emit('knowledge-selected', concept);\n      this.$message.success(`已应用知识点：${concept.title}`);\n    },\n    \n    // 查看知识点详情\n    viewDetails(concept) {\n      // 实际应用中应该跳转到知识点详情页或打开详情弹窗\n      this.$alert(concept.description, concept.title, {\n        dangerouslyUseHTMLString: true,\n        confirmButtonText: '关闭'\n      });\n    },\n    \n    // 复习弱点知识点\n    reviewWeakPoint(point) {\n      // 实际应用中应该跳转到知识点学习页面\n      this.$message.info(`即将开始复习：${point.title}`);\n    },\n    \n    // 获取学习路径步骤状态\n    getStepStatus(index) {\n      if (index === 0) return 'success';\n      if (index === 1) return 'process';\n      return 'wait';\n    },\n    \n    // 知识图谱缩放控制\n    zoomIn() {\n      if (this.graph) {\n        this.graph.dispatchAction({\n          type: 'graphRoam',\n          zoom: 1.2\n        });\n      }\n    },\n\n    zoomOut() {\n      if (this.graph) {\n        this.graph.dispatchAction({\n          type: 'graphRoam',\n          zoom: 0.8\n        });\n      }\n    },\n\n    resetGraph() {\n      if (this.graph) {\n        this.graph.dispatchAction({\n          type: 'restore'\n        });\n      }\n    }\n  },\n\n  // 组件销毁时清理图表实例\n  beforeDestroy() {\n    if (this.graph) {\n      this.graph.dispose();\n      this.graph = null;\n    }\n    // 移除窗口大小变化监听\n    window.removeEventListener('resize', this.handleResize);\n  },\n\n  mounted() {\n    // 绑定窗口大小变化处理函数\n    this.handleResize = () => {\n      if (this.graph) {\n        this.graph.resize();\n      }\n    };\n\n    // 确保在组件挂载后初始化知识图谱\n    if (this.showKnowledgeGraph && this.currentProblem) {\n      this.$nextTick(() => {\n        console.log('KnowledgeRecommendation - mounted中初始化知识图谱');\n        this.initKnowledgeGraph();\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.knowledge-recommendation {\n  height: 100%;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  overflow-y: hidden;\n}\n\n.module-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.module-header h3 {\n  margin: 0;\n  font-size: 18px;\n  color: #303133;\n  margin-right: 8px;\n}\n\n.module-header i {\n  color: #909399;\n  cursor: help;\n}\n\n.loading-state {\n  padding: 10px;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 150px;\n  color: #909399;\n}\n\n.empty-state i {\n  font-size: 36px;\n  margin-bottom: 10px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 15px 0 10px;\n  padding-bottom: 5px;\n  border-bottom: 1px solid #ebeef5;\n  font-weight: 500;\n  color: #303133;\n}\n\n.concepts-container {\n  margin-bottom: 15px;\n  overflow-y: auto;\n  max-height: 300px;\n}\n\n.concept-content {\n  padding: 5px;\n}\n\n.concept-description {\n  margin-bottom: 10px;\n  line-height: 1.5;\n}\n\n.example-title, .formula-title {\n  font-weight: 500;\n  margin-bottom: 5px;\n  color: #303133;\n}\n\n.example-item, .formula-item {\n  background-color: #f5f7fa;\n  padding: 5px 10px;\n  margin-bottom: 5px;\n  border-radius: 4px;\n  font-family: monospace;\n}\n\n.concept-actions {\n  margin-top: 10px;\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n.knowledge-graph-container {\n  position: relative;\n  height: 300px; /* 增加高度以更好显示图谱 */\n  background-color: #fefefe;\n  border: 1px solid #e6e6e6;\n  border-radius: 8px;\n  margin-bottom: 15px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.knowledge-graph {\n  height: 100%;\n  width: 100%;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n}\n\n.graph-controls {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  z-index: 10;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 4px;\n  padding: 4px;\n}\n\n.graph-placeholder {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #909399;\n  text-align: center;\n}\n\n.learning-path-container {\n  margin-bottom: 15px;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.weak-points-container {\n  margin-bottom: 15px;\n}\n\n.review-button {\n  margin-left: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}