{"ast":null,"code":"import _regenerator from \"E:/program development/The Digital and Intelligent Ecosystem for K-12 Mathematics Education/homework_system/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"E:/program development/The Digital and Intelligent Ecosystem for K-12 Mathematics Education/homework_system/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"E:/program development/The Digital and Intelligent Ecosystem for K-12 Mathematics Education/homework_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { mapGetters, mapActions } from 'vuex';\nimport HomeworkManagement from './HomeworkManagement.vue';\nimport KnowledgeRecommendation from './KnowledgeRecommendation.vue';\nimport ExerciseRecommendation from './ExerciseRecommendation.vue';\nimport FeedbackModule from './FeedbackModule.vue';\nimport { formatDate as _formatDate } from '../utils/dateFormat';\nexport default {\n  name: 'IntegratedHomeworkPage',\n  components: {\n    HomeworkManagement: HomeworkManagement,\n    KnowledgeRecommendation: KnowledgeRecommendation,\n    ExerciseRecommendation: ExerciseRecommendation,\n    FeedbackModule: FeedbackModule\n  },\n  data: function data() {\n    return {\n      loading: false,\n      submitting: false,\n      saving: false,\n      activeProblemIds: [],\n      activeTab: 'knowledge',\n      answers: {},\n      feedback: null,\n      saveTimeout: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    user: 'getUser',\n    homeworks: 'getHomeworks',\n    currentHomework: 'getCurrentHomework',\n    userContext: 'getUserContext'\n  })), {}, {\n    // 当前选中的问题\n    currentProblem: function currentProblem() {\n      var _this = this;\n      if (!this.currentHomework || !this.activeProblemIds.length) return null;\n      return this.currentHomework.problems.find(function (problem) {\n        return problem.id === _this.activeProblemIds[0];\n      });\n    },\n    // 是否可以提交\n    canSubmit: function canSubmit() {\n      var _this2 = this;\n      if (!this.currentHomework) return false;\n\n      // 检查是否所有问题都已回答\n      return this.currentHomework.problems.every(function (problem) {\n        return _this2.answers[problem.id];\n      });\n    }\n  }),\n  created: function created() {\n    // 初始化数据\n    this.initializeData();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['login', 'fetchHomeworks', 'fetchHomeworkDetail', 'fetchUserContext', 'submitHomework', 'saveHomeworkProgress'])), {}, {\n    // 初始化数据\n    initializeData: function initializeData() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return _this3.login({\n                username: 'student',\n                password: 'password'\n              });\n            case 1:\n              _context.n = 2;\n              return _this3.fetchHomeworks();\n            case 2:\n              _context.n = 3;\n              return _this3.fetchUserContext();\n            case 3:\n              _context.n = 5;\n              break;\n            case 4:\n              _context.p = 4;\n              _t = _context.v;\n              console.error('初始化数据失败', _t);\n              _this3.$message.error('加载数据失败，请刷新页面重试');\n            case 5:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 4]]);\n      }))();\n    },\n    // 选择作业\n    selectHomework: function selectHomework(homeworkId) {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var homework, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _this4.loading = true;\n              _this4.answers = {};\n              _this4.feedback = null;\n              _context2.p = 1;\n              _context2.n = 2;\n              return _this4.fetchHomeworkDetail(homeworkId);\n            case 2:\n              homework = _context2.v;\n              // 初始化答案\n              if (homework.savedAnswers) {\n                _this4.answers = _objectSpread({}, homework.savedAnswers);\n              }\n\n              // 如果是已批改的作业，显示反馈\n              if (homework.status === 'graded' && homework.feedback) {\n                _this4.feedback = homework.feedback;\n              }\n\n              // 默认展开第一个问题\n              if (homework.problems && homework.problems.length > 0) {\n                _this4.activeProblemIds = [homework.problems[0].id];\n              }\n              _context2.n = 4;\n              break;\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              console.error('获取作业详情失败', _t2);\n              _this4.$message.error('获取作业详情失败');\n            case 4:\n              _context2.p = 4;\n              _this4.loading = false;\n              return _context2.f(4);\n            case 5:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    // 保存进度\n    saveProgress: function saveProgress() {\n      var _this5 = this;\n      // 防抖处理，避免频繁保存\n      clearTimeout(this.saveTimeout);\n      this.saveTimeout = setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _t3;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              if (_this5.currentHomework) {\n                _context3.n = 1;\n                break;\n              }\n              return _context3.a(2);\n            case 1:\n              _this5.saving = true;\n              _context3.p = 2;\n              _context3.n = 3;\n              return _this5.saveHomeworkProgress({\n                homeworkId: _this5.currentHomework.id,\n                answers: _this5.answers\n              });\n            case 3:\n              _this5.$message.success('进度已保存');\n              _context3.n = 5;\n              break;\n            case 4:\n              _context3.p = 4;\n              _t3 = _context3.v;\n              console.error('保存进度失败', _t3);\n              _this5.$message.error('保存进度失败');\n            case 5:\n              _context3.p = 5;\n              _this5.saving = false;\n              return _context3.f(5);\n            case 6:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[2, 4, 5, 6]]);\n      })), 1000);\n    },\n    // 提交作业\n    submitHomework: function submitHomework() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var result, _t4;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              if (_this6.currentHomework) {\n                _context4.n = 1;\n                break;\n              }\n              return _context4.a(2);\n            case 1:\n              _this6.submitting = true;\n              _context4.p = 2;\n              _context4.n = 3;\n              return _this6.submitHomework({\n                homeworkId: _this6.currentHomework.id,\n                answers: _this6.answers\n              });\n            case 3:\n              result = _context4.v;\n              _this6.$message.success('作业提交成功');\n\n              // 显示反馈\n              if (result.feedback) {\n                _this6.feedback = result.feedback;\n              }\n              _context4.n = 5;\n              break;\n            case 4:\n              _context4.p = 4;\n              _t4 = _context4.v;\n              console.error('提交作业失败', _t4);\n              _this6.$message.error('提交作业失败');\n            case 5:\n              _context4.p = 5;\n              _this6.submitting = false;\n              return _context4.f(5);\n            case 6:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[2, 4, 5, 6]]);\n      }))();\n    },\n    // 应用知识点\n    applyKnowledge: function applyKnowledge(knowledge) {\n      if (!this.currentProblem) return;\n\n      // 在当前答案中插入知识点\n      var problemId = this.currentProblem.id;\n      var currentAnswer = this.answers[problemId] || '';\n\n      // 根据知识点类型应用不同的内容\n      var contentToInsert = '';\n      if (knowledge.formulas && knowledge.formulas.length > 0) {\n        contentToInsert = knowledge.formulas[0];\n      } else {\n        contentToInsert = knowledge.title;\n      }\n      this.answers[problemId] = currentAnswer + '\\n' + contentToInsert;\n      this.saveProgress();\n    },\n    // 选择练习\n    selectExercise: function selectExercise(exercise) {\n      // 实际应用中应跳转到练习页面\n      this.$message.info(\"\\u5373\\u5C06\\u5F00\\u59CB\\u7EC3\\u4E60\\uFF1A\".concat(exercise.title));\n    },\n    // 获取难度文本\n    getDifficultyText: function getDifficultyText(difficulty) {\n      var difficultyMap = {\n        1: '简单',\n        2: '中等',\n        3: '困难',\n        4: '挑战',\n        5: '极难'\n      };\n      return difficultyMap[difficulty] || difficulty;\n    },\n    // 格式化日期\n    formatDate: function formatDate(date) {\n      return _formatDate(date, 'YYYY-MM-DD HH:mm');\n    }\n  })\n};","map":{"version":3,"names":["mapGetters","mapActions","HomeworkManagement","KnowledgeRecommendation","ExerciseRecommendation","FeedbackModule","formatDate","name","components","data","loading","submitting","saving","activeProblemIds","activeTab","answers","feedback","saveTimeout","computed","_objectSpread","user","homeworks","currentHomework","userContext","currentProblem","_this","length","problems","find","problem","id","canSubmit","_this2","every","created","initializeData","methods","_this3","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","n","p","login","username","password","fetchHomeworks","fetchUserContext","v","console","error","$message","a","selectHomework","homeworkId","_this4","_callee2","homework","_t2","_context2","fetchHomeworkDetail","savedAnswers","status","f","saveProgress","_this5","clearTimeout","setTimeout","_callee3","_t3","_context3","saveHomeworkProgress","success","submitHomework","_this6","_callee4","result","_t4","_context4","applyKnowledge","knowledge","problemId","currentAnswer","contentToInsert","formulas","title","selectExercise","exercise","info","concat","getDifficultyText","difficulty","difficultyMap","date"],"sources":["E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\src\\components\\IntegratedHomeworkPage.vue"],"sourcesContent":["<!--\r\n  文件名: IntegratedHomeworkPage.vue\r\n  描述: 集成四个模块的主页面，包括作业管理、知识推荐、练习推荐和反馈模块\r\n  创建日期: 2023-06-15\r\n-->\r\n\r\n<template>\r\n  <div class=\"integrated-homework-page\">\r\n    <!-- 顶部导航栏 -->\r\n    <header class=\"page-header\">\r\n      <div class=\"header-left\">\r\n        <h2>智能作业系统</h2>\r\n      </div>\r\n      <div class=\"header-right\">\r\n        <el-dropdown v-if=\"user\" trigger=\"click\">\r\n          <span class=\"el-dropdown-link\">\r\n            {{ user.name }} <i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n          </span>\r\n          <el-dropdown-menu slot=\"dropdown\">\r\n            <el-dropdown-item>个人中心</el-dropdown-item>\r\n            <el-dropdown-item>设置</el-dropdown-item>\r\n            <el-dropdown-item divided>退出登录</el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </el-dropdown>\r\n      </div>\r\n    </header>\r\n    \r\n    <!-- 主要内容区域 -->\r\n    <main class=\"page-content\">\r\n      <!-- 左侧作业管理 -->\r\n      <div class=\"left-panel\">\r\n        <HomeworkManagement \r\n          :homeworks=\"homeworks\"\r\n          :activeHomeworkId=\"currentHomework ? currentHomework.id : ''\"\r\n          @select-homework=\"selectHomework\"\r\n          @refresh-homeworks=\"fetchHomeworks\"\r\n        />\r\n      </div>\r\n      \r\n      <!-- 中间作业内容 -->\r\n      <div class=\"center-panel\">\r\n        <div v-if=\"loading\" class=\"loading-container\">\r\n          <el-skeleton :rows=\"10\" animated />\r\n        </div>\r\n        \r\n        <div v-else-if=\"!currentHomework\" class=\"empty-state\">\r\n          <i class=\"el-icon-document\"></i>\r\n          <p>请从左侧选择一个作业</p>\r\n        </div>\r\n        \r\n        <div v-else class=\"homework-content\">\r\n          <div class=\"homework-header\">\r\n            <h3>{{ currentHomework.title }}</h3>\r\n            <div class=\"homework-meta\">\r\n              <span><i class=\"el-icon-date\"></i> 截止日期: {{ formatDate(currentHomework.deadline) }}</span>\r\n              <span><i class=\"el-icon-medal\"></i> 难度: {{ getDifficultyText(currentHomework.difficulty) }}</span>\r\n            </div>\r\n            <p class=\"homework-description\">{{ currentHomework.description }}</p>\r\n          </div>\r\n          \r\n          <div class=\"problem-list\">\r\n            <el-collapse v-model=\"activeProblemIds\">\r\n              <el-collapse-item \r\n                v-for=\"problem in currentHomework.problems\" \r\n                :key=\"problem.id\"\r\n                :title=\"`${problem.title} (${problem.points}分)`\"\r\n                :name=\"problem.id\"\r\n              >\r\n                <div class=\"problem-content\">\r\n                  <div class=\"problem-statement\" v-html=\"problem.content\"></div>\r\n                  \r\n                  <div class=\"answer-area\">\r\n                    <el-input\r\n                      type=\"textarea\"\r\n                      :rows=\"4\"\r\n                      placeholder=\"在此输入答案...\"\r\n                      v-model=\"answers[problem.id]\"\r\n                      @input=\"saveProgress\"\r\n                    ></el-input>\r\n                  </div>\r\n                </div>\r\n              </el-collapse-item>\r\n            </el-collapse>\r\n          </div>\r\n          \r\n          <div class=\"homework-actions\">\r\n            <el-button \r\n              type=\"primary\" \r\n              :disabled=\"!canSubmit\"\r\n              @click=\"submitHomework\"\r\n              :loading=\"submitting\"\r\n            >提交作业</el-button>\r\n            <el-button \r\n              type=\"info\" \r\n              @click=\"saveProgress\"\r\n              :loading=\"saving\"\r\n            >保存进度</el-button>\r\n          </div>\r\n          \r\n          <!-- 反馈区域 -->\r\n          <div v-if=\"feedback\" class=\"feedback-container\">\r\n            <FeedbackModule :feedback=\"feedback\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 右侧推荐面板 -->\r\n      <div class=\"right-panel\">\r\n        <el-tabs v-model=\"activeTab\" type=\"card\">\r\n          <el-tab-pane label=\"知识推荐\" name=\"knowledge\">\r\n            <KnowledgeRecommendation \r\n              :currentProblem=\"currentProblem\"\r\n              :userContext=\"userContext\"\r\n              @knowledge-selected=\"applyKnowledge\"\r\n            />\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"练习推荐\" name=\"exercise\">\r\n            <ExerciseRecommendation \r\n              :currentProblem=\"currentProblem\"\r\n              :userContext=\"userContext\"\r\n              @exercise-selected=\"selectExercise\"\r\n            />\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nimport HomeworkManagement from './HomeworkManagement.vue';\r\nimport KnowledgeRecommendation from './KnowledgeRecommendation.vue';\r\nimport ExerciseRecommendation from './ExerciseRecommendation.vue';\r\nimport FeedbackModule from './FeedbackModule.vue';\r\nimport { formatDate } from '../utils/dateFormat';\r\n\r\nexport default {\r\n  name: 'IntegratedHomeworkPage',\r\n  \r\n  components: {\r\n    HomeworkManagement,\r\n    KnowledgeRecommendation,\r\n    ExerciseRecommendation,\r\n    FeedbackModule\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      loading: false,\r\n      submitting: false,\r\n      saving: false,\r\n      activeProblemIds: [],\r\n      activeTab: 'knowledge',\r\n      answers: {},\r\n      feedback: null,\r\n      saveTimeout: null\r\n    };\r\n  },\r\n  \r\n  computed: {\r\n    ...mapGetters({\r\n      user: 'getUser',\r\n      homeworks: 'getHomeworks',\r\n      currentHomework: 'getCurrentHomework',\r\n      userContext: 'getUserContext'\r\n    }),\r\n    \r\n    // 当前选中的问题\r\n    currentProblem() {\r\n      if (!this.currentHomework || !this.activeProblemIds.length) return null;\r\n      \r\n      return this.currentHomework.problems.find(\r\n        problem => problem.id === this.activeProblemIds[0]\r\n      );\r\n    },\r\n    \r\n    // 是否可以提交\r\n    canSubmit() {\r\n      if (!this.currentHomework) return false;\r\n      \r\n      // 检查是否所有问题都已回答\r\n      return this.currentHomework.problems.every(\r\n        problem => this.answers[problem.id]\r\n      );\r\n    }\r\n  },\r\n  \r\n  created() {\r\n    // 初始化数据\r\n    this.initializeData();\r\n  },\r\n  \r\n  methods: {\r\n    ...mapActions([\r\n      'login',\r\n      'fetchHomeworks',\r\n      'fetchHomeworkDetail',\r\n      'fetchUserContext',\r\n      'submitHomework',\r\n      'saveHomeworkProgress'\r\n    ]),\r\n    \r\n    // 初始化数据\r\n    async initializeData() {\r\n      try {\r\n        // 模拟登录\r\n        await this.login({ username: 'student', password: 'password' });\r\n        \r\n        // 获取作业列表\r\n        await this.fetchHomeworks();\r\n        \r\n        // 获取用户上下文\r\n        await this.fetchUserContext();\r\n      } catch (error) {\r\n        console.error('初始化数据失败', error);\r\n        this.$message.error('加载数据失败，请刷新页面重试');\r\n      }\r\n    },\r\n    \r\n    // 选择作业\r\n    async selectHomework(homeworkId) {\r\n      this.loading = true;\r\n      this.answers = {};\r\n      this.feedback = null;\r\n      \r\n      try {\r\n        // 获取作业详情\r\n        const homework = await this.fetchHomeworkDetail(homeworkId);\r\n        \r\n        // 初始化答案\r\n        if (homework.savedAnswers) {\r\n          this.answers = { ...homework.savedAnswers };\r\n        }\r\n        \r\n        // 如果是已批改的作业，显示反馈\r\n        if (homework.status === 'graded' && homework.feedback) {\r\n          this.feedback = homework.feedback;\r\n        }\r\n        \r\n        // 默认展开第一个问题\r\n        if (homework.problems && homework.problems.length > 0) {\r\n          this.activeProblemIds = [homework.problems[0].id];\r\n        }\r\n      } catch (error) {\r\n        console.error('获取作业详情失败', error);\r\n        this.$message.error('获取作业详情失败');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // 保存进度\r\n    saveProgress() {\r\n      // 防抖处理，避免频繁保存\r\n      clearTimeout(this.saveTimeout);\r\n      this.saveTimeout = setTimeout(async () => {\r\n        if (!this.currentHomework) return;\r\n        \r\n        this.saving = true;\r\n        \r\n        try {\r\n          await this.saveHomeworkProgress({\r\n            homeworkId: this.currentHomework.id,\r\n            answers: this.answers\r\n          });\r\n          \r\n          this.$message.success('进度已保存');\r\n        } catch (error) {\r\n          console.error('保存进度失败', error);\r\n          this.$message.error('保存进度失败');\r\n        } finally {\r\n          this.saving = false;\r\n        }\r\n      }, 1000);\r\n    },\r\n    \r\n    // 提交作业\r\n    async submitHomework() {\r\n      if (!this.currentHomework) return;\r\n      \r\n      this.submitting = true;\r\n      \r\n      try {\r\n        const result = await this.submitHomework({\r\n          homeworkId: this.currentHomework.id,\r\n          answers: this.answers\r\n        });\r\n        \r\n        this.$message.success('作业提交成功');\r\n        \r\n        // 显示反馈\r\n        if (result.feedback) {\r\n          this.feedback = result.feedback;\r\n        }\r\n      } catch (error) {\r\n        console.error('提交作业失败', error);\r\n        this.$message.error('提交作业失败');\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    },\r\n    \r\n    // 应用知识点\r\n    applyKnowledge(knowledge) {\r\n      if (!this.currentProblem) return;\r\n      \r\n      // 在当前答案中插入知识点\r\n      const problemId = this.currentProblem.id;\r\n      const currentAnswer = this.answers[problemId] || '';\r\n      \r\n      // 根据知识点类型应用不同的内容\r\n      let contentToInsert = '';\r\n      \r\n      if (knowledge.formulas && knowledge.formulas.length > 0) {\r\n        contentToInsert = knowledge.formulas[0];\r\n      } else {\r\n        contentToInsert = knowledge.title;\r\n      }\r\n      \r\n      this.answers[problemId] = currentAnswer + '\\n' + contentToInsert;\r\n      this.saveProgress();\r\n    },\r\n    \r\n    // 选择练习\r\n    selectExercise(exercise) {\r\n      // 实际应用中应跳转到练习页面\r\n      this.$message.info(`即将开始练习：${exercise.title}`);\r\n    },\r\n    \r\n    // 获取难度文本\r\n    getDifficultyText(difficulty) {\r\n      const difficultyMap = {\r\n        1: '简单',\r\n        2: '中等',\r\n        3: '困难',\r\n        4: '挑战',\r\n        5: '极难'\r\n      };\r\n      return difficultyMap[difficulty] || difficulty;\r\n    },\r\n    \r\n    // 格式化日期\r\n    formatDate(date) {\r\n      return formatDate(date, 'YYYY-MM-DD HH:mm');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.integrated-homework-page {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  height: 60px;\r\n  background-color: #409EFF;\r\n  color: white;\r\n}\r\n\r\n.header-left h2 {\r\n  margin: 0;\r\n  font-size: 20px;\r\n}\r\n\r\n.el-dropdown-link {\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.page-content {\r\n  display: flex;\r\n  flex: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.left-panel {\r\n  width: 280px;\r\n  border-right: 1px solid #e6e6e6;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.center-panel {\r\n  flex: 1;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.right-panel {\r\n  width: 320px;\r\n  border-left: 1px solid #e6e6e6;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.loading-container {\r\n  padding: 20px;\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 300px;\r\n  color: #909399;\r\n}\r\n\r\n.empty-state i {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.homework-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.homework-header h3 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 22px;\r\n  color: #303133;\r\n}\r\n\r\n.homework-meta {\r\n  display: flex;\r\n  gap: 20px;\r\n  font-size: 14px;\r\n  color: #606266;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.homework-description {\r\n  color: #606266;\r\n  line-height: 1.6;\r\n}\r\n\r\n.problem-list {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.problem-content {\r\n  padding: 10px 0;\r\n}\r\n\r\n.problem-statement {\r\n  margin-bottom: 15px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.answer-area {\r\n  margin-top: 10px;\r\n}\r\n\r\n.homework-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.feedback-container {\r\n  margin-top: 30px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #e6e6e6;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}