{"remainingRequest":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\src\\components\\KnowledgeRecommendation.vue?vue&type=style&index=0&id=936f4352&scoped=true&lang=css","dependencies":[{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\src\\components\\KnowledgeRecommendation.vue","mtime":1750052450383},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\css-loader\\dist\\cjs.js","mtime":1749988911149},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1749988914387},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\postcss-loader\\src\\index.js","mtime":1749988912213},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749988910140},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1749988913356}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5rbm93bGVkZ2UtcmVjb21tZW5kYXRpb24gewogIGhlaWdodDogMTAwJTsKICBwYWRkaW5nOiAxNXB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBvdmVyZmxvdy15OiBoaWRkZW47Cn0KCi5tb2R1bGUtaGVhZGVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKfQoKLm1vZHVsZS1oZWFkZXIgaDMgewogIG1hcmdpbjogMDsKICBmb250LXNpemU6IDE4cHg7CiAgY29sb3I6ICMzMDMxMzM7CiAgbWFyZ2luLXJpZ2h0OiA4cHg7Cn0KCi5tb2R1bGUtaGVhZGVyIGkgewogIGNvbG9yOiAjOTA5Mzk5OwogIGN1cnNvcjogaGVscDsKfQoKLmxvYWRpbmctc3RhdGUgewogIHBhZGRpbmc6IDEwcHg7Cn0KCi5lbXB0eS1zdGF0ZSB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgaGVpZ2h0OiAxNTBweDsKICBjb2xvcjogIzkwOTM5OTsKfQoKLmVtcHR5LXN0YXRlIGkgewogIGZvbnQtc2l6ZTogMzZweDsKICBtYXJnaW4tYm90dG9tOiAxMHB4Owp9Cgouc2VjdGlvbi1oZWFkZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgbWFyZ2luOiAxNXB4IDAgMTBweDsKICBwYWRkaW5nLWJvdHRvbTogNXB4OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWJlZWY1OwogIGZvbnQtd2VpZ2h0OiA1MDA7CiAgY29sb3I6ICMzMDMxMzM7Cn0KCi5jb25jZXB0cy1jb250YWluZXIgewogIG1hcmdpbi1ib3R0b206IDE1cHg7CiAgb3ZlcmZsb3cteTogYXV0bzsKICBtYXgtaGVpZ2h0OiAzMDBweDsKfQoKLmNvbmNlcHQtY29udGVudCB7CiAgcGFkZGluZzogNXB4Owp9CgouY29uY2VwdC1kZXNjcmlwdGlvbiB7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKICBsaW5lLWhlaWdodDogMS41Owp9CgouZXhhbXBsZS10aXRsZSwgLmZvcm11bGEtdGl0bGUgewogIGZvbnQtd2VpZ2h0OiA1MDA7CiAgbWFyZ2luLWJvdHRvbTogNXB4OwogIGNvbG9yOiAjMzAzMTMzOwp9CgouZXhhbXBsZS1pdGVtLCAuZm9ybXVsYS1pdGVtIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOwogIHBhZGRpbmc6IDVweCAxMHB4OwogIG1hcmdpbi1ib3R0b206IDVweDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTsKfQoKLmNvbmNlcHQtYWN0aW9ucyB7CiAgbWFyZ2luLXRvcDogMTBweDsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7CiAgZ2FwOiAxMHB4Owp9Cgoua25vd2xlZGdlLWdyYXBoLWNvbnRhaW5lciB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGhlaWdodDogMjAwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYTsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKICBvdmVyZmxvdzogaGlkZGVuOwp9Cgoua25vd2xlZGdlLWdyYXBoIHsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7Cn0KCi5ncmFwaC1jb250cm9scyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogMTBweDsKICByaWdodDogMTBweDsKfQoKLmdyYXBoLXBsYWNlaG9sZGVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBoZWlnaHQ6IDEwMCU7CiAgY29sb3I6ICM5MDkzOTk7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgoubGVhcm5pbmctcGF0aC1jb250YWluZXIgewogIG1hcmdpbi1ib3R0b206IDE1cHg7CiAgbWF4LWhlaWdodDogMjAwcHg7CiAgb3ZlcmZsb3cteTogYXV0bzsKfQoKLndlYWstcG9pbnRzLWNvbnRhaW5lciB7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKfQoKLnJldmlldy1idXR0b24gewogIG1hcmdpbi1sZWZ0OiAxMHB4Owp9Cg=="},{"version":3,"sources":["KnowledgeRecommendation.vue"],"names":[],"mappings":";AAqkfile":"KnowledgeRecommendation.vue","sourceRoot":"src/components","sourcesContent":["<!--\n  文件名: KnowledgeRecommendation.vue\n  描述: 知识推荐模块组件，基于知识图谱和学生模型推荐相关知识点\n  创建日期: 2023-06-15\n-->\n\n<template>\n  <div class=\"knowledge-recommendation\">\n    <div class=\"module-header\">\n      <h3>知识点推荐</h3>\n      <el-tooltip content=\"基于当前问题和您的学习状况，智能推荐相关知识点\" placement=\"top\">\n        <i class=\"el-icon-question\"></i>\n      </el-tooltip>\n    </div>\n    \n    <div v-if=\"loading\" class=\"loading-state\">\n      <el-skeleton :rows=\"5\" animated />\n    </div>\n    \n    <div v-else-if=\"!currentProblem\" class=\"empty-state\">\n      <i class=\"el-icon-document\"></i>\n      <p>请选择一道题目以获取相关知识点推荐</p>\n    </div>\n    \n    <template v-else>\n      <!-- 当前问题相关概念 -->\n      <div class=\"section-header\">\n        <span>相关概念</span>\n        <el-tag size=\"mini\" type=\"primary\">{{ recommendedConcepts.length }}</el-tag>\n      </div>\n      \n      <div class=\"concepts-container\">\n        <el-collapse v-model=\"activeConceptNames\" accordion>\n          <el-collapse-item \n            v-for=\"concept in recommendedConcepts\" \n            :key=\"concept.id\"\n            :title=\"concept.title\"\n            :name=\"concept.title\"\n          >\n            <div class=\"concept-content\">\n              <div class=\"concept-description\" v-html=\"concept.description\"></div>\n              \n              <div class=\"concept-examples\" v-if=\"concept.examples && concept.examples.length > 0\">\n                <div class=\"example-title\">示例</div>\n                <div \n                  v-for=\"(example, index) in concept.examples\" \n                  :key=\"index\"\n                  class=\"example-item\"\n                  v-html=\"example\"\n                ></div>\n              </div>\n              \n              <div class=\"concept-formulas\" v-if=\"concept.formulas && concept.formulas.length > 0\">\n                <div class=\"formula-title\">相关公式</div>\n                <div \n                  v-for=\"(formula, index) in concept.formulas\" \n                  :key=\"index\"\n                  class=\"formula-item\"\n                  v-html=\"formula\"\n                ></div>\n              </div>\n              \n              <div class=\"concept-actions\">\n                <el-button \n                  type=\"primary\" \n                  size=\"mini\" \n                  @click=\"applyKnowledge(concept)\"\n                  icon=\"el-icon-check\"\n                >应用</el-button>\n                <el-button \n                  type=\"info\" \n                  size=\"mini\" \n                  @click=\"viewDetails(concept)\"\n                  icon=\"el-icon-view\"\n                >详情</el-button>\n              </div>\n            </div>\n          </el-collapse-item>\n        </el-collapse>\n      </div>\n      \n      <!-- 知识图谱可视化 -->\n      <div class=\"section-header\">\n        <span>知识图谱</span>\n        <el-switch \n          v-model=\"showKnowledgeGraph\"\n          active-text=\"显示\"\n          inactive-text=\"隐藏\"\n          size=\"small\"\n        ></el-switch>\n      </div>\n      \n      <div v-if=\"showKnowledgeGraph\" class=\"knowledge-graph-container\">\n        <div ref=\"knowledgeGraphRef\" class=\"knowledge-graph\"></div>\n        <div class=\"graph-controls\">\n          <el-button-group size=\"mini\">\n            <el-button icon=\"el-icon-zoom-in\" @click=\"zoomIn\"></el-button>\n            <el-button icon=\"el-icon-zoom-out\" @click=\"zoomOut\"></el-button>\n            <el-button icon=\"el-icon-refresh\" @click=\"resetGraph\"></el-button>\n          </el-button-group>\n        </div>\n      </div>\n      \n      <!-- 学习路径推荐 -->\n      <div class=\"section-header\">\n        <span>学习路径</span>\n        <el-tag size=\"mini\" type=\"success\">{{ learningPath.length }}</el-tag>\n      </div>\n      \n      <div class=\"learning-path-container\">\n        <el-steps direction=\"vertical\" :active=\"1\">\n          <el-step \n            v-for=\"(step, index) in learningPath\" \n            :key=\"step.id\"\n            :title=\"step.title\"\n            :description=\"step.description\"\n            :status=\"getStepStatus(index)\"\n          ></el-step>\n        </el-steps>\n      </div>\n      \n      <!-- 历史弱点提示 -->\n      <div v-if=\"weakPoints.length > 0\" class=\"section-header\">\n        <span>需要注意的知识点</span>\n        <el-tag size=\"mini\" type=\"danger\">{{ weakPoints.length }}</el-tag>\n      </div>\n      \n      <div v-if=\"weakPoints.length > 0\" class=\"weak-points-container\">\n        <el-alert\n          v-for=\"point in weakPoints\"\n          :key=\"point.id\"\n          :title=\"point.title\"\n          :description=\"point.description\"\n          type=\"warning\"\n          show-icon\n          :closable=\"false\"\n          style=\"margin-bottom: 10px;\"\n        >\n          <el-button \n            slot=\"title\" \n            size=\"mini\" \n            type=\"text\" \n            class=\"review-button\"\n            @click=\"reviewWeakPoint(point)\"\n          >\n            立即复习\n          </el-button>\n        </el-alert>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'KnowledgeRecommendation',\n  \n  props: {\n    // 当前问题\n    currentProblem: {\n      type: Object,\n      default: null\n    },\n    \n    // 用户上下文\n    userContext: {\n      type: Object,\n      required: true\n    }\n  },\n  \n  data() {\n    return {\n      // 加载状态\n      loading: false,\n      \n      // 知识点推荐\n      recommendedConcepts: [],\n      \n      // 展开的概念\n      activeConceptNames: [],\n      \n      // 知识图谱显示\n      showKnowledgeGraph: true,\n      \n      // 知识图谱实例\n      graph: null,\n      graphZoom: 1,\n      \n      // 学习路径\n      learningPath: [],\n      \n      // 弱点知识点\n      weakPoints: []\n    };\n  },\n  \n  watch: {\n    // 监听当前问题变化，更新推荐\n    currentProblem: {\n      handler(newVal) {\n        if (newVal) {\n          this.fetchRecommendations();\n        } else {\n          this.recommendedConcepts = [];\n          this.learningPath = [];\n          this.weakPoints = [];\n        }\n      },\n      immediate: true\n    },\n    \n    // 监听知识图谱显示状态\n    showKnowledgeGraph(newVal) {\n      if (newVal) {\n        this.$nextTick(() => {\n          this.initKnowledgeGraph();\n        });\n      }\n    }\n  },\n  \n  methods: {\n    // 获取知识点推荐\n    async fetchRecommendations() {\n      if (!this.currentProblem) return;\n      \n      this.loading = true;\n      \n      try {\n        // 调用API获取知识点\n        const knowledgeService = await import('../services/knowledgeService');\n        \n        // 如果题目有ID，通过ID获取知识点\n        if (this.currentProblem.id) {\n          const response = await knowledgeService.getQuestionKnowledgePoints(this.currentProblem.id);\n          if (response.data && response.data.knowledge_points) {\n            this.processKnowledgePoints(response.data.knowledge_points);\n          } else {\n            // 如果没有返回知识点，则通过题目内容获取\n            const textResponse = await knowledgeService.getKnowledgePointsByText(this.currentProblem.content);\n            if (textResponse.data && textResponse.data.knowledge_points) {\n              this.processKnowledgePoints(textResponse.data.knowledge_points);\n            } else {\n              // 如果API没有返回知识点，使用模拟数据\n              await this.simulateFetch();\n            }\n          }\n        } else if (this.currentProblem.content) {\n          // 如果题目没有ID但有内容，通过内容获取知识点\n          const response = await knowledgeService.getKnowledgePointsByText(this.currentProblem.content);\n          if (response.data && response.data.knowledge_points) {\n            this.processKnowledgePoints(response.data.knowledge_points);\n          } else {\n            // 如果API没有返回知识点，使用模拟数据\n            await this.simulateFetch();\n          }\n        } else {\n          // 如果没有ID和内容，使用模拟数据\n          await this.simulateFetch();\n        }\n        \n        // 初始化知识图谱\n        if (this.showKnowledgeGraph) {\n          this.$nextTick(() => {\n            this.initKnowledgeGraph();\n          });\n        }\n      } catch (error) {\n        console.error('获取知识点推荐失败', error);\n        this.$message.error('获取知识点推荐失败，使用本地数据');\n        // 出错时使用模拟数据\n        await this.simulateFetch();\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 处理API返回的知识点数据\n    processKnowledgePoints(knowledgePoints) {\n      if (!knowledgePoints || knowledgePoints.length === 0) {\n        this.recommendedConcepts = [];\n        return;\n      }\n      \n      // 将后端知识点数据转换为前端所需格式\n      this.recommendedConcepts = knowledgePoints.map(kp => ({\n        id: kp.id,\n        title: kp.name,\n        description: kp.description || '暂无描述',\n        examples: kp.examples ? kp.examples.map(ex => ex.problem + '\\n' + ex.solution) : [],\n        formulas: kp.key_points || [],\n        relevance: 0.9\n      }));\n      \n      // 生成学习路径\n      this.generateLearningPath(knowledgePoints);\n      \n      // 检查用户弱点\n      this.checkWeakPoints(knowledgePoints);\n      \n      // 默认展开第一个概念\n      if (this.recommendedConcepts.length > 0) {\n        this.activeConceptNames = [this.recommendedConcepts[0].title];\n      }\n    },\n    \n    // 生成学习路径\n    generateLearningPath(knowledgePoints) {\n      this.learningPath = [];\n      \n      // 根据知识点的先决条件生成学习路径\n      for (const kp of knowledgePoints) {\n        if (kp.prerequisites && kp.prerequisites.length > 0) {\n          for (const prereq of kp.prerequisites) {\n            this.learningPath.push({\n              id: 'p' + Math.random().toString(36).substr(2, 9),\n              title: prereq,\n              description: `学习 ${prereq} 的基本概念和应用`\n            });\n          }\n        }\n        \n        // 添加当前知识点\n        this.learningPath.push({\n          id: 'p' + kp.id,\n          title: kp.name,\n          description: kp.description || `掌握 ${kp.name} 的核心内容`\n        });\n        \n        // 添加相关概念\n        if (kp.related_concepts && kp.related_concepts.length > 0) {\n          for (const related of kp.related_concepts) {\n            this.learningPath.push({\n              id: 'p' + Math.random().toString(36).substr(2, 9),\n              title: related,\n              description: `学习 ${related} 与 ${kp.name} 的关联`\n            });\n          }\n        }\n      }\n      \n      // 去重\n      const uniquePaths = [];\n      const seen = new Set();\n      for (const path of this.learningPath) {\n        if (!seen.has(path.title)) {\n          seen.add(path.title);\n          uniquePaths.push(path);\n        }\n      }\n      this.learningPath = uniquePaths;\n    },\n    \n    // 检查用户弱点\n    checkWeakPoints(knowledgePoints) {\n      this.weakPoints = [];\n      \n      // 如果用户上下文中有弱点数据\n      if (this.userContext && this.userContext.weakPoints) {\n        for (const kp of knowledgePoints) {\n          const weakPoint = this.userContext.weakPoints.find(wp => \n            wp.name === kp.name || kp.related_concepts && kp.related_concepts.includes(wp.name)\n          );\n          \n          if (weakPoint) {\n            this.weakPoints.push({\n              id: 'w' + kp.id,\n              title: kp.name,\n              description: `您在此知识点的掌握程度较弱，建议复习。`\n            });\n          }\n        }\n      }\n      \n      // 如果知识点有常见错误，也添加到弱点中\n      for (const kp of knowledgePoints) {\n        if (kp.common_errors && kp.common_errors.length > 0) {\n          this.weakPoints.push({\n            id: 'w' + kp.id,\n            title: kp.name + ' - 常见错误',\n            description: kp.common_errors.join('\\n')\n          });\n        }\n      }\n    },\n    \n    // 模拟获取数据\n    async simulateFetch() {\n      // 模拟API延迟\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      // 根据当前问题生成模拟数据\n      if (this.currentProblem.type === 'algebra') {\n        this.recommendedConcepts = [\n          {\n            id: 'c1',\n            title: '一元二次方程',\n            description: '一元二次方程是指含有一个未知数，并且未知数的最高次数为2的方程。一般形式为：ax² + bx + c = 0，其中a、b、c是实数，且a ≠ 0。',\n            examples: [\n              '例如：3x² - 5x + 2 = 0',\n              '例如：x² - 4 = 0'\n            ],\n            formulas: [\n              '判别式：Δ = b² - 4ac',\n              '求根公式：x = (-b ± √(b² - 4ac)) / (2a)'\n            ],\n            relevance: 0.95\n          },\n          {\n            id: 'c2',\n            title: '因式分解',\n            description: '因式分解是将一个多项式表示成若干个多项式的乘积的形式。常用方法包括提取公因式、运用公式法、分组分解法等。',\n            examples: [\n              '例如：x² - 4 = (x - 2)(x + 2)',\n              '例如：x² + 2x + 1 = (x + 1)²'\n            ],\n            formulas: [\n              '平方差公式：a² - b² = (a - b)(a + b)',\n              '完全平方公式：a² + 2ab + b² = (a + b)²',\n              'a² - 2ab + b² = (a - b)²'\n            ],\n            relevance: 0.85\n          },\n          {\n            id: 'c3',\n            title: '配方法',\n            description: '配方法是解一元二次方程的一种方法，通过恰当地变形，使方程中的二次项和一次项变成一个完全平方式。',\n            examples: [\n              '例如：将x² + 6x + 5 = 0变形为(x + 3)² = 4，然后求解'\n            ],\n            formulas: [\n              '配方公式：x² + px = x² + px + (p/2)² - (p/2)² = (x + p/2)² - (p/2)²'\n            ],\n            relevance: 0.78\n          }\n        ];\n        \n        this.learningPath = [\n          {\n            id: 'p1',\n            title: '一元二次方程的概念',\n            description: '了解一元二次方程的定义和一般形式'\n          },\n          {\n            id: 'p2',\n            title: '因式分解法解方程',\n            description: '掌握利用因式分解解一元二次方程'\n          },\n          {\n            id: 'p3',\n            title: '配方法解方程',\n            description: '学习配方法的基本步骤和应用'\n          },\n          {\n            id: 'p4',\n            title: '公式法解方程',\n            description: '掌握并灵活运用求根公式'\n          }\n        ];\n        \n        this.weakPoints = [\n          {\n            id: 'w1',\n            title: '判别式的应用',\n            description: '根据历史学习记录，您在使用判别式判断方程根的情况时存在困难'\n          }\n        ];\n      } else if (this.currentProblem.type === 'geometry') {\n        // 为几何问题生成不同的推荐\n        this.recommendedConcepts = [\n          {\n            id: 'c4',\n            title: '相似三角形',\n            description: '相似三角形是指形状相同但大小可能不同的三角形。两个三角形相似，当且仅当它们的对应角相等，对应边成比例。',\n            examples: [\n              '例如：两个三角形，如果有两个角相等，则这两个三角形相似'\n            ],\n            formulas: [\n              '相似三角形的对应边成比例：a/a\\' = b/b\\' = c/c\\'',\n              '相似三角形的面积比等于对应边长比的平方：S/S\\' = (a/a\\')²'\n            ],\n            relevance: 0.92\n          },\n          // 其他几何概念...\n        ];\n        \n        // 其他几何相关数据...\n      } else {\n        // 默认推荐\n        this.recommendedConcepts = [\n          {\n            id: 'c5',\n            title: '基本数学概念',\n            description: '针对当前问题的基本数学概念介绍',\n            examples: ['示例问题1', '示例问题2'],\n            formulas: ['相关公式1', '相关公式2'],\n            relevance: 0.75\n          }\n        ];\n      }\n      \n      // 根据用户上下文个性化推荐\n      if (this.userContext.weakPoints && this.userContext.weakPoints.length > 0) {\n        // 添加用户弱点相关的知识点\n        this.weakPoints = this.userContext.weakPoints.map(wp => ({\n          id: `w${wp.id}`,\n          title: wp.name,\n          description: `您在此知识点的掌握程度较弱，建议复习。掌握度: ${wp.proficiency}%`\n        }));\n      }\n      \n      // 随机决定是否展开第一个概念\n      if (this.recommendedConcepts.length > 0 && Math.random() > 0.5) {\n        this.activeConceptNames = [this.recommendedConcepts[0].title];\n      }\n    },\n    \n    // 初始化知识图谱可视化\n    initKnowledgeGraph() {\n      if (!this.$refs.knowledgeGraphRef) return;\n      \n      // 在实际应用中，应该使用可视化库如D3.js、ECharts或vis.js\n      // 这里仅添加一个提示，表示该功能需要进一步实现\n      const graphContainer = this.$refs.knowledgeGraphRef;\n      graphContainer.innerHTML = '<div class=\"graph-placeholder\"><p>知识图谱可视化</p><p>（此处将使用可视化库如D3.js绘制知识图谱）</p></div>';\n    },\n    \n    // 应用知识点\n    applyKnowledge(concept) {\n      this.$emit('knowledge-selected', concept);\n      this.$message.success(`已应用知识点：${concept.title}`);\n    },\n    \n    // 查看知识点详情\n    viewDetails(concept) {\n      // 实际应用中应该跳转到知识点详情页或打开详情弹窗\n      this.$alert(concept.description, concept.title, {\n        dangerouslyUseHTMLString: true,\n        confirmButtonText: '关闭'\n      });\n    },\n    \n    // 复习弱点知识点\n    reviewWeakPoint(point) {\n      // 实际应用中应该跳转到知识点学习页面\n      this.$message.info(`即将开始复习：${point.title}`);\n    },\n    \n    // 获取学习路径步骤状态\n    getStepStatus(index) {\n      if (index === 0) return 'success';\n      if (index === 1) return 'process';\n      return 'wait';\n    },\n    \n    // 知识图谱缩放控制\n    zoomIn() {\n      this.graphZoom = Math.min(2, this.graphZoom + 0.1);\n      this.updateGraphZoom();\n    },\n    \n    zoomOut() {\n      this.graphZoom = Math.max(0.5, this.graphZoom - 0.1);\n      this.updateGraphZoom();\n    },\n    \n    resetGraph() {\n      this.graphZoom = 1;\n      this.updateGraphZoom();\n    },\n    \n    updateGraphZoom() {\n      // 实际应用中应该调用图谱库的缩放方法\n      console.log(`图谱缩放至 ${this.graphZoom}`);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.knowledge-recommendation {\n  height: 100%;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  overflow-y: hidden;\n}\n\n.module-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.module-header h3 {\n  margin: 0;\n  font-size: 18px;\n  color: #303133;\n  margin-right: 8px;\n}\n\n.module-header i {\n  color: #909399;\n  cursor: help;\n}\n\n.loading-state {\n  padding: 10px;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 150px;\n  color: #909399;\n}\n\n.empty-state i {\n  font-size: 36px;\n  margin-bottom: 10px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 15px 0 10px;\n  padding-bottom: 5px;\n  border-bottom: 1px solid #ebeef5;\n  font-weight: 500;\n  color: #303133;\n}\n\n.concepts-container {\n  margin-bottom: 15px;\n  overflow-y: auto;\n  max-height: 300px;\n}\n\n.concept-content {\n  padding: 5px;\n}\n\n.concept-description {\n  margin-bottom: 10px;\n  line-height: 1.5;\n}\n\n.example-title, .formula-title {\n  font-weight: 500;\n  margin-bottom: 5px;\n  color: #303133;\n}\n\n.example-item, .formula-item {\n  background-color: #f5f7fa;\n  padding: 5px 10px;\n  margin-bottom: 5px;\n  border-radius: 4px;\n  font-family: monospace;\n}\n\n.concept-actions {\n  margin-top: 10px;\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n.knowledge-graph-container {\n  position: relative;\n  height: 200px;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n  margin-bottom: 15px;\n  overflow: hidden;\n}\n\n.knowledge-graph {\n  height: 100%;\n  width: 100%;\n}\n\n.graph-controls {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n}\n\n.graph-placeholder {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #909399;\n  text-align: center;\n}\n\n.learning-path-container {\n  margin-bottom: 15px;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.weak-points-container {\n  margin-bottom: 15px;\n}\n\n.review-button {\n  margin-left: 10px;\n}\n</style>\n"]}]}