{"remainingRequest":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\src\\components\\HomeworkManagement.vue?vue&type=style&index=0&id=33381d83&scoped=true&lang=css","dependencies":[{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\src\\components\\HomeworkManagement.vue","mtime":1749969796445},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\css-loader\\dist\\cjs.js","mtime":1749988911149},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1749988914387},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\postcss-loader\\src\\index.js","mtime":1749988912213},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1749988910140},{"path":"E:\\program development\\The Digital and Intelligent Ecosystem for K-12 Mathematics Education\\homework_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1749988913356}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouaG9tZXdvcmstbWFuYWdlbWVudCB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogIGhlaWdodDogMTAwJTsNCiAgcGFkZGluZzogMTVweDsNCn0NCg0KLmhlYWRlciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgbWFyZ2luLWJvdHRvbTogMTVweDsNCn0NCg0KLmhlYWRlciBoMyB7DQogIG1hcmdpbjogMDsNCiAgZm9udC1zaXplOiAxOHB4Ow0KICBjb2xvcjogIzMwMzEzMzsNCn0NCg0KLmZpbHRlci1jb250YWluZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBnYXA6IDEwcHg7DQogIG1hcmdpbi1ib3R0b206IDE1cHg7DQp9DQoNCi5ob21ld29yay1saXN0IHsNCiAgZmxleDogMTsNCiAgb3ZlcmZsb3cteTogYXV0bzsNCiAgbWFyZ2luLWJvdHRvbTogMTVweDsNCn0NCg0KLmhvbWV3b3JrLWl0ZW0gew0KICBkaXNwbGF5OiBmbGV4Ow0KICBwYWRkaW5nOiAxMnB4Ow0KICBtYXJnaW4tYm90dG9tOiAxMHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICBib3JkZXItcmFkaXVzOiA0cHg7DQogIGJvcmRlci1sZWZ0OiAzcHggc29saWQgI2U2ZTZlNjsNCiAgYm94LXNoYWRvdzogMCAycHggNnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7DQp9DQoNCi5ob21ld29yay1pdGVtOmhvdmVyIHsNCiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpOw0KICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTsNCn0NCg0KLmhvbWV3b3JrLWl0ZW0uYWN0aXZlIHsNCiAgYm9yZGVyLWxlZnQtY29sb3I6ICM0MDlFRkY7DQogIGJhY2tncm91bmQtY29sb3I6ICNmMGY5ZmY7DQp9DQoNCi5ob21ld29yay1zdGF0dXMgew0KICB3aWR0aDogNjBweDsNCiAgZGlzcGxheTogZmxleDsNCiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7DQogIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KfQ0KDQouaG9tZXdvcmstaW5mbyB7DQogIGZsZXg6IDE7DQogIHBhZGRpbmctcmlnaHQ6IDEwcHg7DQp9DQoNCi5ob21ld29yay10aXRsZSB7DQogIG1hcmdpbjogMCAwIDVweCAwOw0KICBmb250LXNpemU6IDE1cHg7DQogIGZvbnQtd2VpZ2h0OiA1MDA7DQogIGNvbG9yOiAjMzAzMTMzOw0KICB3aGl0ZS1zcGFjZTogbm93cmFwOw0KICBvdmVyZmxvdzogaGlkZGVuOw0KICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsNCn0NCg0KLmhvbWV3b3JrLW1ldGEgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBnYXA6IDEwcHg7DQogIGZvbnQtc2l6ZTogMTJweDsNCiAgY29sb3I6ICM5MDkzOTk7DQp9DQoNCi5ob21ld29yay1wcm9ncmVzcyB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICB3aWR0aDogNDBweDsNCn0NCg0KLmVtcHR5LXN0YXRlIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGhlaWdodDogMTUwcHg7DQogIGNvbG9yOiAjOTA5Mzk5Ow0KfQ0KDQouZW1wdHktc3RhdGUgaSB7DQogIGZvbnQtc2l6ZTogMzZweDsNCiAgbWFyZ2luLWJvdHRvbTogMTBweDsNCn0NCg0KLmhvbWV3b3JrLXN0YXRzIHsNCiAgZGlzcGxheTogZmxleDsNCiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNmU2ZTY7DQogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTZlNmU2Ow0KICBwYWRkaW5nOiAxMHB4IDA7DQogIG1hcmdpbi1ib3R0b206IDE1cHg7DQp9DQoNCi5zdGF0LWl0ZW0gew0KICBmbGV4OiAxOw0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KfQ0KDQouc3RhdC1sYWJlbCB7DQogIGZvbnQtc2l6ZTogMTJweDsNCiAgY29sb3I6ICM5MDkzOTk7DQogIG1hcmdpbi1ib3R0b206IDVweDsNCn0NCg0KLnN0YXQtdmFsdWUgew0KICBmb250LXNpemU6IDE4cHg7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KICBjb2xvcjogIzMwMzEzMzsNCn0NCg0KLnJlbWluZGVyLXNldHRpbmdzIHsNCiAgbWFyZ2luLXRvcDogYXV0bzsNCn0NCg0KLnJlbWluZGVyLW9wdGlvbnMgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIG1hcmdpbi1ib3R0b206IDEwcHg7DQp9DQo="},{"version":3,"sources":["HomeworkManagement.vue"],"names":[],"mappings":";AAmfile":"HomeworkManagement.vue","sourceRoot":"src/components","sourcesContent":["<!--\r\n  文件名: HomeworkManagement.vue\r\n  描述: 作业管理模块组件，负责作业的接收、存储、状态跟踪和提交\r\n  作者: Claude\r\n  创建日期: 2025-06-15\r\n-->\r\n\r\n<template>\r\n  <div class=\"homework-management\">\r\n    <div class=\"header\">\r\n      <h3>我的作业</h3>\r\n      <el-button \r\n        type=\"text\" \r\n        icon=\"el-icon-refresh\" \r\n        @click=\"refreshHomeworks\"\r\n        :loading=\"loading\"\r\n      >刷新</el-button>\r\n    </div>\r\n    \r\n    <!-- 作业过滤器 -->\r\n    <div class=\"filter-container\">\r\n      <el-select v-model=\"statusFilter\" placeholder=\"状态\" size=\"small\" @change=\"applyFilters\">\r\n        <el-option label=\"全部\" value=\"all\"></el-option>\r\n        <el-option label=\"未完成\" value=\"incomplete\"></el-option>\r\n        <el-option label=\"已提交\" value=\"submitted\"></el-option>\r\n        <el-option label=\"已批改\" value=\"graded\"></el-option>\r\n      </el-select>\r\n      \r\n      <el-select v-model=\"sortBy\" placeholder=\"排序\" size=\"small\" @change=\"applyFilters\">\r\n        <el-option label=\"截止日期\" value=\"deadline\"></el-option>\r\n        <el-option label=\"最近活动\" value=\"activity\"></el-option>\r\n        <el-option label=\"难度\" value=\"difficulty\"></el-option>\r\n      </el-select>\r\n    </div>\r\n    \r\n    <!-- 作业列表 -->\r\n    <div class=\"homework-list\" v-loading=\"loading\">\r\n      <template v-if=\"filteredHomeworks.length > 0\">\r\n        <div \r\n          v-for=\"homework in filteredHomeworks\" \r\n          :key=\"homework.id\"\r\n          class=\"homework-item\"\r\n          :class=\"{ 'active': activeHomeworkId === homework.id }\"\r\n          @click=\"selectHomework(homework.id)\"\r\n        >\r\n          <div class=\"homework-status\">\r\n            <el-tag :type=\"getStatusType(homework.status)\" size=\"mini\">\r\n              {{ getStatusText(homework.status) }}\r\n            </el-tag>\r\n          </div>\r\n          <div class=\"homework-info\">\r\n            <h4 class=\"homework-title\">{{ homework.title }}</h4>\r\n            <div class=\"homework-meta\">\r\n              <span><i class=\"el-icon-date\"></i> {{ formatDate(homework.deadline) }}</span>\r\n              <span><i class=\"el-icon-medal\"></i> {{ getDifficultyText(homework.difficulty) }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"homework-progress\">\r\n            <el-progress \r\n              type=\"circle\" \r\n              :percentage=\"calculateProgress(homework)\" \r\n              :width=\"36\"\r\n              :status=\"getProgressStatus(homework)\"\r\n            ></el-progress>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      \r\n      <div v-else-if=\"!loading\" class=\"empty-state\">\r\n        <i class=\"el-icon-document\"></i>\r\n        <p>{{ getEmptyStateText() }}</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 作业统计 -->\r\n    <div class=\"homework-stats\">\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">待完成</span>\r\n        <span class=\"stat-value\">{{ getIncompleteCount() }}</span>\r\n      </div>\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">已提交</span>\r\n        <span class=\"stat-value\">{{ getSubmittedCount() }}</span>\r\n      </div>\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">已批改</span>\r\n        <span class=\"stat-value\">{{ getGradedCount() }}</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 提醒设置 -->\r\n    <div class=\"reminder-settings\">\r\n      <el-collapse>\r\n        <el-collapse-item title=\"提醒设置\" name=\"reminders\">\r\n          <div class=\"reminder-options\">\r\n            <el-checkbox v-model=\"reminders.deadline\">截止前提醒</el-checkbox>\r\n            <el-select \r\n              v-model=\"reminders.deadlineTime\" \r\n              placeholder=\"提前时间\" \r\n              size=\"small\"\r\n              :disabled=\"!reminders.deadline\"\r\n            >\r\n              <el-option label=\"1小时\" value=\"1h\"></el-option>\r\n              <el-option label=\"3小时\" value=\"3h\"></el-option>\r\n              <el-option label=\"6小时\" value=\"6h\"></el-option>\r\n              <el-option label=\"12小时\" value=\"12h\"></el-option>\r\n              <el-option label=\"1天\" value=\"1d\"></el-option>\r\n            </el-select>\r\n          </div>\r\n          <div class=\"reminder-options\">\r\n            <el-checkbox v-model=\"reminders.daily\">每日提醒</el-checkbox>\r\n            <el-time-picker\r\n              v-model=\"reminders.dailyTime\"\r\n              placeholder=\"提醒时间\"\r\n              size=\"small\"\r\n              :disabled=\"!reminders.daily\"\r\n              format=\"HH:mm\"\r\n              value-format=\"HH:mm\"\r\n            ></el-time-picker>\r\n          </div>\r\n          <el-button \r\n            type=\"primary\" \r\n            size=\"small\" \r\n            @click=\"saveReminderSettings\"\r\n            style=\"margin-top: 10px\"\r\n          >保存设置</el-button>\r\n        </el-collapse-item>\r\n      </el-collapse>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { formatDate } from '../utils/dateFormat';\r\n\r\nexport default {\r\n  name: 'HomeworkManagement',\r\n  \r\n  props: {\r\n    // 作业列表\r\n    homeworks: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    \r\n    // 当前激活的作业ID\r\n    activeHomeworkId: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      // 加载状态\r\n      loading: false,\r\n      \r\n      // 过滤器\r\n      statusFilter: 'all',\r\n      sortBy: 'deadline',\r\n      \r\n      // 提醒设置\r\n      reminders: {\r\n        deadline: true,\r\n        deadlineTime: '12h',\r\n        daily: false,\r\n        dailyTime: '20:00'\r\n      }\r\n    };\r\n  },\r\n  \r\n  computed: {\r\n    // 根据过滤条件筛选并排序作业\r\n    filteredHomeworks() {\r\n      // 先筛选\r\n      let result = [...this.homeworks];\r\n      \r\n      if (this.statusFilter !== 'all') {\r\n        if (this.statusFilter === 'incomplete') {\r\n          // 未完成包括未开始和进行中\r\n          result = result.filter(hw => \r\n            hw.status === 'not_started' || hw.status === 'in_progress'\r\n          );\r\n        } else if (this.statusFilter === 'submitted') {\r\n          // 已提交包括已提交和已批改\r\n          result = result.filter(hw => \r\n            hw.status === 'submitted' || hw.status === 'graded'\r\n          );\r\n        } else if (this.statusFilter === 'graded') {\r\n          // 只包括已批改\r\n          result = result.filter(hw => hw.status === 'graded');\r\n        }\r\n      }\r\n      \r\n      // 再排序\r\n      if (this.sortBy === 'deadline') {\r\n        // 按截止日期排序（从近到远）\r\n        result.sort((a, b) => new Date(a.deadline) - new Date(b.deadline));\r\n      } else if (this.sortBy === 'activity') {\r\n        // 按最近活动排序（从新到旧）\r\n        result.sort((a, b) => new Date(b.lastActivity) - new Date(a.lastActivity));\r\n      } else if (this.sortBy === 'difficulty') {\r\n        // 按难度排序（从低到高）\r\n        result.sort((a, b) => a.difficulty - b.difficulty);\r\n      }\r\n      \r\n      return result;\r\n    }\r\n  },\r\n  \r\n  methods: {\r\n    // 选择作业\r\n    selectHomework(homeworkId) {\r\n      this.$emit('select-homework', homeworkId);\r\n    },\r\n    \r\n    // 刷新作业列表\r\n    refreshHomeworks() {\r\n      this.loading = true;\r\n      this.$emit('refresh-homeworks');\r\n      \r\n      // 模拟加载结束\r\n      setTimeout(() => {\r\n        this.loading = false;\r\n      }, 800);\r\n    },\r\n    \r\n    // 应用过滤条件\r\n    applyFilters() {\r\n      // 过滤和排序是通过计算属性实现的，这里不需要额外操作\r\n    },\r\n    \r\n    // 计算作业完成进度\r\n    calculateProgress(homework) {\r\n      if (!homework.problems || homework.problems.length === 0) {\r\n        return 0;\r\n      }\r\n      \r\n      if (homework.status === 'submitted' || homework.status === 'graded') {\r\n        return 100;\r\n      }\r\n      \r\n      // 根据已回答的问题计算进度\r\n      const totalProblems = homework.problems.length;\r\n      const answeredProblems = homework.problems.filter(\r\n        problem => homework.savedAnswers && homework.savedAnswers[problem.id]\r\n      ).length;\r\n      \r\n      return Math.round((answeredProblems / totalProblems) * 100);\r\n    },\r\n    \r\n    // 获取进度状态\r\n    getProgressStatus(homework) {\r\n      const progress = this.calculateProgress(homework);\r\n      \r\n      if (progress === 0) return 'exception';\r\n      if (progress < 100) return '';\r\n      return 'success';\r\n    },\r\n    \r\n    // 获取状态标签类型\r\n    getStatusType(status) {\r\n      const typeMap = {\r\n        'not_started': 'info',\r\n        'in_progress': 'warning',\r\n        'submitted': 'primary',\r\n        'graded': 'success'\r\n      };\r\n      return typeMap[status] || 'info';\r\n    },\r\n    \r\n    // 获取状态文本\r\n    getStatusText(status) {\r\n      const textMap = {\r\n        'not_started': '未开始',\r\n        'in_progress': '进行中',\r\n        'submitted': '已提交',\r\n        'graded': '已批改'\r\n      };\r\n      return textMap[status] || status;\r\n    },\r\n    \r\n    // 获取难度文本\r\n    getDifficultyText(difficulty) {\r\n      const difficultyMap = {\r\n        1: '简单',\r\n        2: '中等',\r\n        3: '困难',\r\n        4: '挑战',\r\n        5: '极难'\r\n      };\r\n      return difficultyMap[difficulty] || difficulty;\r\n    },\r\n    \r\n    // 获取未完成作业数量\r\n    getIncompleteCount() {\r\n      return this.homeworks.filter(\r\n        hw => hw.status === 'not_started' || hw.status === 'in_progress'\r\n      ).length;\r\n    },\r\n    \r\n    // 获取已提交作业数量\r\n    getSubmittedCount() {\r\n      return this.homeworks.filter(\r\n        hw => hw.status === 'submitted'\r\n      ).length;\r\n    },\r\n    \r\n    // 获取已批改作业数量\r\n    getGradedCount() {\r\n      return this.homeworks.filter(\r\n        hw => hw.status === 'graded'\r\n      ).length;\r\n    },\r\n    \r\n    // 获取空状态文本\r\n    getEmptyStateText() {\r\n      if (this.statusFilter === 'all') {\r\n        return '暂无作业';\r\n      } else if (this.statusFilter === 'incomplete') {\r\n        return '暂无未完成作业';\r\n      } else if (this.statusFilter === 'submitted') {\r\n        return '暂无已提交作业';\r\n      } else if (this.statusFilter === 'graded') {\r\n        return '暂无已批改作业';\r\n      }\r\n      return '暂无作业';\r\n    },\r\n    \r\n    // 保存提醒设置\r\n    saveReminderSettings() {\r\n      // 实际应用中应该调用API保存设置\r\n      this.$message.success('提醒设置已保存');\r\n      \r\n      // 如果启用了提醒，可以在本地设置提醒\r\n      if (this.reminders.deadline) {\r\n        // 设置截止日期提醒\r\n        console.log('设置截止日期提醒', this.reminders.deadlineTime);\r\n      }\r\n      \r\n      if (this.reminders.daily) {\r\n        // 设置每日提醒\r\n        console.log('设置每日提醒', this.reminders.dailyTime);\r\n      }\r\n    },\r\n    \r\n    // 格式化日期\r\n    formatDate(date) {\r\n      return formatDate(date, 'MM-DD HH:mm');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.homework-management {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  padding: 15px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.header h3 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  color: #303133;\r\n}\r\n\r\n.filter-container {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.homework-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.homework-item {\r\n  display: flex;\r\n  padding: 12px;\r\n  margin-bottom: 10px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  border-left: 3px solid #e6e6e6;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.homework-item:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.homework-item.active {\r\n  border-left-color: #409EFF;\r\n  background-color: #f0f9ff;\r\n}\r\n\r\n.homework-status {\r\n  width: 60px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n}\r\n\r\n.homework-info {\r\n  flex: 1;\r\n  padding-right: 10px;\r\n}\r\n\r\n.homework-title {\r\n  margin: 0 0 5px 0;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  color: #303133;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.homework-meta {\r\n  display: flex;\r\n  gap: 10px;\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.homework-progress {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 150px;\r\n  color: #909399;\r\n}\r\n\r\n.empty-state i {\r\n  font-size: 36px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.homework-stats {\r\n  display: flex;\r\n  border-top: 1px solid #e6e6e6;\r\n  border-bottom: 1px solid #e6e6e6;\r\n  padding: 10px 0;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.stat-item {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.reminder-settings {\r\n  margin-top: auto;\r\n}\r\n\r\n.reminder-options {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n\r\n"]}]}